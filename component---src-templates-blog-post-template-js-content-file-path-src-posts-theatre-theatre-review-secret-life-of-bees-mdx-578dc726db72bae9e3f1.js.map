{"version":3,"file":"component---src-templates-blog-post-template-js-content-file-path-src-posts-theatre-theatre-review-secret-life-of-bees-mdx-578dc726db72bae9e3f1.js","mappings":"kMAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,wPAAyP,KAAMK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,4BAA6B,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,0hBAA2hB,KAAMK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,SAAU,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,2bAA4b,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,oMAAqM,KAAMK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,SAAU,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,giCAAiiC,KAAMK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,cAAe,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,yNAA0N,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAMK,EAAAA,cAAoBR,EAAYK,EAAG,CACryGI,KAAM,2DACL,sCACL,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWZ,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCXA,SAASa,EAAQC,GAAmB,IAAlB,KAACC,EAAI,SAAEC,GAASF,EAChC,MAAM,IAACG,GAAOF,GACR,YAACG,GAAeD,EACtB,OAAOR,EAAAA,cAAoBU,EAAAA,EAAQ,CACjCC,YAAa,iBACbC,eAAyC,aAAzBH,EAAYI,SAA0B,eAAiB,mBACtEb,EAAAA,cAAoBc,EAAAA,EAAK,CAC1BC,MAAON,EAAYM,MACnBC,SAAUP,EAAYO,SACtBC,YAAaR,EAAYQ,cACvBjB,EAAAA,cAAoB,MAAO,CAC7BkB,UAAW,+BACVlB,EAAAA,cAAoB,MAAO,CAC5BkB,UAAW,aACVlB,EAAAA,cAAoB,KAAM,KAAMS,EAAYM,OAAQR,IAAYP,EAAAA,cAAoB,SAAU,CAC/FkB,UAAW,oBACVlB,EAAAA,cAAoB,MAAO,KAAM,MAAOS,EAAYU,KAAM,OAAQnB,EAAAA,cAAoB,MAAO,CAC9FkB,UAAW,4BAEf,CACe,SAASE,EAAiB7B,GACvC,OAAOS,EAAAA,cAAoBI,EAAUb,EAAOS,EAAAA,cAAoBqB,EAAqB9B,GACvF,C,sECMO,MAAM+B,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBxB,GAC/B,MAAMyB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfvB,EACFA,EAAWyB,GAGb,IAAIA,KAAsBzB,IAChC,CAACyB,EAAmBzB,GACzB,C","sources":["webpack://maria-dot-engineer/./src/posts/theatre/theatre_review_secret_life_of_bees.mdx","webpack://maria-dot-engineer/./src/templates/blogPostTemplate.js","webpack://maria-dot-engineer/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is a new musical by Duncan Sheik, known for his work on Spring Awakening. Although I had high expectations, I was surprised by how good it turned out to be. The musical is consistently great, and I predict that it will become very popular.\"), \"\\n\", React.createElement(_components.h3, null, \"Set Design and Direction\"), \"\\n\", React.createElement(_components.p, null, \"From the moment I entered the theatre, I was impressed by the set design. The lighting, props, and overall set design were perfect. I have seen big West End shows with less impressive sets, both in terms of size and thought. It's difficult to describe what made it so impressive, but it had a life of its own and played a significant role in the show, in a way that few sets actually succeed in doing. The minimalist design allowed the essential elements to shine, and the stage movement and actors were as well-designed as the music.\"), \"\\n\", React.createElement(_components.h3, null, \"Music\"), \"\\n\", React.createElement(_components.p, null, \"The music was consistently amazing. It had Duncan Sheik's signature style, which I love. Although I don't have a musical education and can't comment on the technical aspects of the music, I would like to point out just how successfully he manages to create music that evokes feelings from the audience. However, the unrealistic characters detract from the music's quality and prevent immersion at times, doing the music a great disservice.\"), \"\\n\", React.createElement(_components.p, null, \"I would like to give particular credit to the drum mixing in Zack's song, where only the bass was audible. Additionally, the singers were outstanding, especially the actress who played August.\"), \"\\n\", React.createElement(_components.h3, null, \"Story\"), \"\\n\", React.createElement(_components.p, null, \"As I am not familiar with the original text, I will refrain from commenting too much on the value of the story. I will however say that I deeply disliked the plot. The main character, Lily, is one of the most dislikeable characters of her type I have encountered. And honestly her character does a massive disservice to all the characters around her, and the plot part of racial equality. She is self centered, and spoiled. Despite her abuse from her father, she acts like an entitled teen. This adds up to the character not being believable, as well as making it seem like the abuse was just added to make the character likable, despite its many flaws, that would have otherwise painted her into the role of the villainess. Rosalie would have made a much better main character, but she becomes a supportive character, a mother to Lily that is not even recognised for her hard work. August's role is also never really explained past the fact that she was Lily's mother's housekeeper, and it feels like she takes up that caregiver role for Lily as well.\"), \"\\n\", React.createElement(_components.h3, null, \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"I absolutely loved the show. If I were to compare this to Spring Awakening, I would probably consider it a weaker show. But that doesn't make it any less good. And ultimately it is unfair to make such comparisons.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://almeida.co.uk/whats-on/the-secret-life-of-bees/\"\n  }, \"Tickets are still available here.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariamateescu/maria-engineer.github.io/src/posts/theatre/theatre_review_secret_life_of_bees.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nfunction Template({data, children}) {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  return React.createElement(Layout, {\n    currentPage: \"Maria Mateescu\",\n    currentSubPage: frontmatter.category === \"personal\" ? \"Personal Log\" : \"Engineering Log\"\n  }, React.createElement(SEO, {\n    title: frontmatter.title,\n    keywords: frontmatter.keywords,\n    description: frontmatter.description\n  }), React.createElement(\"div\", {\n    className: \"blog-post-container content\"\n  }, React.createElement(\"div\", {\n    className: \"blog-post\"\n  }, React.createElement(\"h1\", null, frontmatter.title), children)), React.createElement(\"footer\", {\n    className: \"footer go-center\"\n  }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(\"div\", {\n    className: \"lcars-bar-slice-bottom\"\n  })));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        short\n        category\n        description\n        keywords\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h3","a","_provideComponents","components","React","href","wrapper","MDXLayout","Template","_ref","data","children","mdx","frontmatter","Layout","currentPage","currentSubPage","category","SEO","title","keywords","description","className","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}