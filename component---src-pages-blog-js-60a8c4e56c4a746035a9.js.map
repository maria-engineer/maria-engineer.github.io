{"version":3,"file":"component---src-pages-blog-js-60a8c4e56c4a746035a9.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/svg/up.tsx","webpack://maria-dot-engineer/./src/components/header.tsx","webpack://maria-dot-engineer/./src/components/layout.tsx","webpack://maria-dot-engineer/./src/components/seo.tsx","webpack://maria-dot-engineer/./src/pages/blog.js"],"sourcesContent":["import React from \"react\"\n\nexport default function UpIcon({ color }: { color: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"30\"\n      height=\"30\"\n      fill=\"currentColor\"\n      className=\"bi bi-chevron-up\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"\n      />\n    </svg>\n  )\n}\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport UpIcon from \"../svg/up\"\n\ninterface HeaderProps {\n  siteTitle?: string\n  currentPage?: string\n  currentSubPage?: string\n}\n\nexport default function Header({\n  currentPage = \"\",\n  siteTitle = \"\",\n  currentSubPage = \"\",\n}: HeaderProps) {\n  const title = currentPage ?? siteTitle ?? \"Home\"\n  return (\n    <div>\n      <div className=\"wrap\">\n        <div className=\"scroll-top\">\n          <a\n            id=\"scroll-top\"\n            onClick={() => {\n              window.scrollTo({ top: 0 })\n            }}\n          >\n            <UpIcon color={\"#121212\"} />\n          </a>\n        </div>\n        <div className=\"left-frame-top\">\n          <div className=\"panel-1\"></div>\n          <div className=\"panel-2\"></div>\n        </div>\n        <div className=\"right-frame-top\">\n          <div className=\"banner\">\n            {currentPage === \"Home\"\n              ? \"Maria Mateescu \\u2022 Software Engineer\"\n              : currentPage + \" \\u2022 \" + currentSubPage}\n          </div>\n          <div className=\"data-cascade-button-group\">\n            <div className=\"button\" id=\"menu-1\">\n              <Link to=\"/\">Home</Link>\n            </div>\n            <div className=\"button\" id=\"menu-2\">\n              <Link to=\"/scales/\">Music</Link>\n            </div>\n            <div className=\"button\" id=\"menu-3\">\n              <Link to=\"/theatre/\">Interests</Link>\n            </div>\n            <div className=\"button\" id=\"menu-4\">\n              <Link to=\"/blog/\">Blog</Link>\n            </div>\n          </div>\n          <div className=\"runner\">\n            <div className=\"top-corner-bg\">\n              <div className=\"top-corner\"></div>\n            </div>\n            <div className=\"block-2\"></div>\n            <div className=\"block-3\"></div>\n            <div className=\"block-4\">\n              <div className=\"block-4-floatbar\"></div>\n            </div>\n          </div>\n          <div className=\"bar-panel\">\n            <div className=\"bar-1\"></div>\n            <div className=\"bar-2\"></div>\n            <div className=\"bar-3\"></div>\n            <div className=\"bar-4\">\n              <div className=\"bar-4-inside\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div></div>\n    </div>\n  )\n}\n\nexport function SubMenu({\n  currentPage = \"\",\n  siteTitle = \"\",\n  currentSubPage = \"\",\n}: HeaderProps) {\n  if (currentPage === \"Music\") {\n    return (\n      <div className=\"left-frame\">\n        <div>\n          <div className={\"panel-33\"}></div>\n          <div className={\"panel-3\"}>\n            <Link to=\"/scales/\">Scales</Link>\n          </div>\n          <div className={\"panel-4\"}>\n            <Link to=\"/chords/\">Chords</Link>\n          </div>\n          {currentSubPage === \"Scales \" && (\n            <>\n              <div className=\"panel-5\"></div>\n              <div className=\"panel-6\"></div>\n              <div className=\"panel-7\"></div>\n              <div className=\"panel-8\"></div>\n            </>\n          )}\n        </div>\n        <div>\n          <div className=\"panel-10\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  if (currentPage === \"Interests\") {\n    return (\n      <div className=\"left-frame\">\n        <div>\n          <div className={\"panel-33\"}></div>\n          <div className={\"panel-3\"}>\n            <Link to=\"/theatre/\">Theatre</Link>\n          </div>\n          <div className={\"panel-4\"}>\n            <Link to=\"/reading/\">Reading</Link>\n          </div>\n          <div className={\"panel-3\"}>\n            <Link to=\"/art/\">Art</Link>\n          </div>\n              <div className=\"panel-5\"></div>\n              <div className=\"panel-6\"></div>\n              <div className=\"panel-7\"></div>\n              <div className=\"panel-8\"></div>\n        </div>\n        <div>\n          <div className=\"panel-10\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  if (currentPage === \"Home\") {\n    return (\n      <div className=\"left-frame\">\n        <div>\n          <div className=\"panel-3\"></div>\n          <div className=\"panel-6\"></div>\n          <div className=\"panel-4\"></div>\n        </div>\n        <div>\n          <div className=\"panel-10\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"left-frame\">\n      <div>\n        <div className=\"panel-3\"></div>\n        <div className=\"panel-4\"></div>\n        <div className=\"panel-5\"></div>\n        <div className=\"panel-6\"></div>\n        <div className=\"panel-7\"></div>\n        <div className=\"panel-8\"></div>\n        <div className=\"panel-9\"></div>\n      </div>\n      <div>\n        <div className=\"panel-10\"></div>\n      </div>\n    </div>\n  )\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header, { SubMenu } from \"./header\"\n\ninterface LayoutProps {\n  currentPage?: string\n  children: React.ReactNode\n  currentSubPage?: string\n}\n\nexport default function Layout({\n  currentPage = \"\",\n  currentSubPage = \"\",\n  children,\n}: LayoutProps) {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  return (\n    <>\n      <Header\n        currentPage={currentPage}\n        siteTitle={data.site.siteMetadata?.title || `Title`}\n        currentSubPage={currentSubPage}\n      />\n      <div className=\"wrap\" id=\"gap\">\n        <SubMenu\n          currentPage={currentPage}\n          currentSubPage={currentSubPage}\n          siteTitle={data.site.siteMetadata?.title || `Title`}\n        />\n        <div className=\"right-frame\">\n          <div className=\"bar-panel\">\n            <div className=\"bar-6\"></div>\n            <div className=\"bar-7\"></div>\n            <div className=\"bar-8\"></div>\n            <div className=\"bar-9\">\n              <div className=\"bar-9-inside\"></div>\n            </div>\n          </div>\n          <div className=\"runner\">\n            <div className=\"corner-bg\">\n              <div className=\"corner\"></div>\n            </div>\n          </div>\n          <div className=\"content\">{children}\n          \n      <footer className=\"page-footer go-center\">\n        <div className=\"lcars-bar-slice-top\"></div>\n        <div className=\"lcars-bar\">\n          <div className=\"lcars-bar-inner\">\n            <div className=\"lcars-bar-cutout\"></div>\n          </div>\n        </div>\n        © {new Date().getFullYear()} Maria Mateescu, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>, style inspired by{\" \"}\n        <a href=\"https://thelcars.com\">LCARS</a>\n      </footer></div>\n          \n        </div>\n      </div>\n    </>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface Metadata {\n  name: string\n  content: any\n  property?: undefined\n}\n\nexport default function SEO({\n  description = \"\",\n  lang = \"en\",\n  meta = [],\n  title,\n  keywords = []\n}: {\n  description?: string\n  title: string\n  meta?: Metadata[]\n  lang?: string,\n  keywords?: string[]\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <Helmet>\n        <meta name={`twitter:title`} content={title} />\n        <meta name={`twitter:description`} content={metaDescription} />\n        <meta name={`twitter:card`} content={\"summary\"} />\n        <meta\n          name={`twitter:creator`}\n          content={site.siteMetadata?.author || ``}\n        />\n        <meta name={`og:title`} content={title} />\n        <meta name={`og:description`} content={metaDescription} />\n        <meta name={`description`} content={metaDescription} />\n        <meta name={'keywords'} content={keywords.join(',')} />\n        <meta name={'lang'} content={lang}/>\n        <title>{title}</title>\n      </Helmet>\n    </>\n  )\n}\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nexport default function BlogPage({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  const posts = edges\n    .map((edge) => edge?.node?.frontmatter)\n    .filter((edge) => edge != null);\n  const postByLog = posts.reduce((acc, value) => {\n    if (!acc[value.category]) {\n      acc[value.category] = [];\n    }\n\n    acc[value.category].push(value);\n\n    return acc;\n  }, {});\n\n  return (\n    <Layout currentPage=\"Maria\" currentSubPage=\"Blog\">\n      <SEO title=\"Blog\" />\n      <h2>Engineering Log</h2>\n      {postByLog[\"engineer\"]?.map((post, index) => (\n        <div key={\"personal\" + index} className=\"lcars-listing\">\n          <Link to={post.slug}>\n            <div className=\"lcars-listing-inner\">\n              <div>{post.title}</div>\n              <div>{post.date}</div>\n            </div>\n          </Link>\n        </div>\n      ))}\n      <h2>Personal Log</h2>\n      {postByLog[\"personal\"]?.map((post, index) => (\n        <div key={\"personal\" + index} className=\"lcars-listing\">\n          <Link to={post.slug}>\n            <div className=\"lcars-listing-inner\">\n              <div>{post.title}</div>\n              <div>{post.date}</div>\n            </div>\n          </Link>\n        </div>\n      ))}\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["UpIcon","_ref","color","React","xmlns","width","height","fill","className","viewBox","fillRule","d","Header","_ref2","_ref$currentPage","currentPage","_ref$siteTitle","siteTitle","_ref$currentSubPage","currentSubPage","id","onClick","window","scrollTo","top","Link","to","SubMenu","_ref3","_ref3$currentPage","_ref3$currentSubPage","Layout","_data$site$siteMetada","_data$site$siteMetada2","children","data","useStaticQuery","site","siteMetadata","title","Date","getFullYear","href","SEO","_site$siteMetadata","_site$siteMetadata2","_ref$description","description","_ref$lang","lang","meta","_ref$keywords","keywords","metaDescription","Helmet","name","content","author","join","BlogPage","_postByLog$engineer","_postByLog$personal","postByLog","allMarkdownRemark","edges","map","edge","_edge$node","node","frontmatter","filter","reduce","acc","value","category","push","post","index","key","slug","date"],"sourceRoot":""}