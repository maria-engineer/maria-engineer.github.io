{"version":3,"file":"component---src-pages-chords-tsx-15513f77a9e3f09ca4be.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/components/note.tsx","webpack://maria-dot-engineer/./src/components/scale.tsx","webpack://maria-dot-engineer/./src/components/utils.tsx","webpack://maria-dot-engineer/./src/components/chord.tsx","webpack://maria-dot-engineer/./src/pages/chords.tsx","webpack://maria-dot-engineer/./node_modules/ireal-reader/Parser.js","webpack://maria-dot-engineer/./node_modules/ireal-reader/index.js","webpack://maria-dot-engineer/./node_modules/ireal-reader/unscramble.js"],"sourcesContent":["import { Note as NoteType, toStringFromNote, fromStringToNote } from \"./utils\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nfunction Note(props: {\n  note: NoteType;\n  setNote: ((NoteType) => void) | null;\n}): JSX.Element {\n  if (props.setNote == null) {\n    return <>{toStringFromNote(props.note)}</>;\n  } else {\n    const [isValid, setIsValid] = useState<boolean>(true);\n    const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n      try {\n        props.setNote(fromStringToNote(event.target.value));\n        setIsValid(true);\n      } catch (errror) {\n        setIsValid(false);\n      }\n    };\n    return (\n      <input\n        type=\"text\"\n        className={\n          isValid\n            ? \"lcars-form-control lcars-is-valid\"\n            : \"lcars-form-control lcars-is-invalid\"\n        }\n        placeholder={toStringFromNote(props.note)}\n        aria-label=\"Note\"\n        aria-describedby=\"basic-addon1\"\n        onChange={changeValue}\n      />\n    );\n  }\n}\n\nexport default Note;\n","import { Note as NoteType } from \"./utils\";\nimport React from \"react\";\nimport Note from \"./note\";\n\nexport default function Scale(props: { notes: Array<NoteType> }): JSX.Element {\n  const notes = props.notes;\n  if (notes == null) {\n    return <div />;\n  }\n  return (\n    <div className=\"d-inline-flex flex-wrap pl-2 pr-2 bd-highlight \">\n      {notes.map((note, index) => {\n        return (\n          <h2 className=\"d-flex bd-highlight px-2\">\n            <Note key={index} note={note} setNote={null} />\n          </h2>\n        );\n      })}\n    </div>\n  );\n}\n","import { number } from \"prop-types\";\nimport React from \"react\";\n\nexport type BaseNote = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\";\n\nexport type ScaleType =\n  | \"NATURAL\"\n  | \"HARMONIC\"\n  | \"MAJOR\"\n  | \"CHROMATIC\"\n  | \"DIMINISHED\"\n  | \"ALTERED\";\n\nexport type Note = {\n  base: BaseNote;\n  modifier: number;\n};\n\nexport type ChordType = \"MINOR\" | \"MAJOR\" | \"DIMINISHED\";\n\nexport type AddOn = {\n  index: number;\n  modifier: number;\n};\n\nexport type Chord = {\n  tonic: Note;\n  type: ChordType;\n  addOns: Array<AddOn>;\n};\n\nexport type ChordSequence = {\n  bars: Array<Bar>;\n};\n\nexport type Bar = {\n  chords: Array<Chord | undefined>;\n};\n\nconst majorScale = [2, 2, 1, 2, 2, 2, 1];\nconst harmonicScale = [2, 1, 2, 2, 1, 3, 1];\nconst naturalScale = [2, 1, 2, 2, 1, 2, 2];\nconst chromaticScale = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\nconst diminishedScale = [2, 1, 2, 1, 2, 1, 2, 1];\nconst alteredScale = [1, 2, 1, 2, 2, 2, 2];\n\nexport function getScale(root: Note, type: ScaleType): Array<Note> {\n  const scale = [root];\n  let order = [0];\n  let preferFlats = false;\n  switch (type) {\n    case \"CHROMATIC\":\n      order = chromaticScale;\n      break;\n    case \"NATURAL\":\n      const major = getRelativeMajor(root);\n      preferFlats =\n        major.modifier == -1 || (major.base == \"F\" && major.modifier == 0);\n      order = naturalScale;\n      break;\n    case \"HARMONIC\":\n      const majorH = getRelativeMajor(root);\n      preferFlats =\n        majorH.modifier == -1 || (majorH.base == \"F\" && majorH.modifier == 0);\n      order = harmonicScale;\n      break;\n    case \"MAJOR\":\n      order = majorScale;\n      preferFlats =\n        root.modifier == -1 || (root.base == \"F\" && root.modifier == 0);\n      break;\n    case \"DIMINISHED\":\n      order = diminishedScale;\n      break;\n    case \"ALTERED\":\n      order = alteredScale;\n  }\n  let next = root;\n  for (let times of order) {\n    for (let i = 0; i < times; i++) {\n      next = getNextSemitone(next, preferFlats);\n    }\n    scale.push(next);\n  }\n  return scale;\n}\n\nexport function getRelativeMajor(a: Note): Note {\n  let root = a;\n  for (let i = 0; i < 3; i++) {\n    root = getNextSemitone(root, true);\n  }\n  return root;\n}\n\nexport function getRelativeMinor(a: Note): Note {\n  let root = a;\n  for (let i = 0; i < 3; i++) {\n    root = getPrevSemitone(root, true);\n  }\n  return root;\n}\n\nexport function getNextSemitone(a: Note, preferFlats: boolean): Note {\n  if (a.modifier == -1) {\n    return { base: a.base, modifier: 0 };\n  }\n  if (a.modifier == 1) {\n    // Some notes do not have independent sharps == Next Note\n    if (a.base == \"E\" || a.base == \"B\") {\n      if (preferFlats) {\n        return { base: getNextBase(getNextBase(a.base)), modifier: -1 };\n      } else {\n        return { base: getNextBase(a.base), modifier: 1 };\n      }\n    }\n    return { base: getNextBase(a.base), modifier: 0 };\n  }\n  if (a.base == \"E\" || a.base == \"B\") {\n    return { base: getNextBase(a.base), modifier: 0 };\n  }\n  if (preferFlats) {\n    return { base: getNextBase(a.base), modifier: -1 };\n  } else {\n    return { base: a.base, modifier: 1 };\n  }\n}\n\nexport function getPrevSemitone(a: Note, preferFlats: boolean): Note {\n  if (a.modifier == 1) {\n    return { base: a.base, modifier: 0 };\n  }\n  if (a.modifier == -1) {\n    // Some notes do not have independent flats == Next Note\n    if (a.base == \"F\" || a.base == \"C\") {\n      if (preferFlats) {\n        return { base: getPrevBase(a.base), modifier: -1 };\n      } else {\n        return { base: getPrevBase(a.base), modifier: 0 };\n      }\n    }\n    return { base: getPrevBase(a.base), modifier: 0 };\n  }\n\n  if (a.base == \"F\" || a.base == \"C\") {\n    return { base: getPrevBase(a.base), modifier: 0 };\n  }\n  if (preferFlats) {\n    return { base: a.base, modifier: -1 };\n  } else {\n    return { base: getPrevBase(a.base), modifier: 1 };\n  }\n}\n\nfunction getNextBase(a: BaseNote): BaseNote {\n  if (a == \"G\") {\n    return \"A\";\n  }\n  return String.fromCharCode(a.charCodeAt(0) + 1) as BaseNote;\n}\n\nfunction getPrevBase(a: BaseNote): BaseNote {\n  if (a == \"A\") {\n    return \"G\";\n  }\n  return String.fromCharCode(a.charCodeAt(0) - 1) as BaseNote;\n}\n\nexport function toStringFromNote(a: Note): string {\n  return a.base + sharpOrFlat(a);\n}\n\nexport function toStringFromChord(a: Chord): string {\n  let base = toStringFromNote(a.tonic) + toStringFromChordType(a.type);\n  for (let addOn of a.addOns) {\n    base = base + toStringFromAddOn(addOn);\n  }\n  return base;\n}\n\nexport function toStringFromChordType(a: ChordType): string {\n  switch (a) {\n    case \"MAJOR\":\n      return \"\";\n    case \"MINOR\":\n      return \"-\";\n    case \"DIMINISHED\":\n      return \"dim\";\n  }\n}\n\nexport function toStringFromAddOn(a: AddOn): string {\n  if (a.index == 7) {\n    const base = \"7\";\n    if (a.modifier == 0) {\n      return \"maj\" + base;\n    }\n    if (a.modifier == -1) {\n      return base;\n    }\n    return \"8\";\n  } else {\n    const base = a.index > 5 ? a.index.toString() : (a.index + 8).toString();\n    if (base.length > 1) {\n      if (a.modifier == 0) {\n        return \"(\" + base + \")\";\n      }\n      if (a.modifier == -1) {\n        return \"(\" + \"b\" + base + \")\";\n      }\n      return \"(\" + \"#\" + base + \")\";\n    }\n    if (a.modifier == 0) {\n      return base;\n    }\n    if (a.modifier == -1) {\n      return \"b\" + base;\n    }\n    return \"#\" + base;\n  }\n}\n\nexport function sharpOrFlat(note: Note): string {\n  if (note.modifier == 0) {\n    return \"\";\n  }\n  if (note.modifier == 1) {\n    return \"\\u266F\";\n  }\n  if (note.modifier == -1) {\n    return \"\\u266D\";\n  }\n  return \"\";\n}\n\nexport function fromStringToNote(a: string): Note {\n  console.log(\"NoteParse:\" + a + \"\\n\");\n  if (a.length > 2) {\n    throw \"Invalid Note\";\n  }\n  const base = String.fromCharCode(a.charCodeAt(0)) as BaseNote;\n  if (![\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"].includes(base)) {\n    console.log(\"Wrong Base:\" + base);\n    throw \"Invalid Note\";\n  }\n  if (a.length == 1) {\n    return {\n      base: base,\n      modifier: 0,\n    };\n  }\n  const modifier =\n    a.charAt(1) === \"#\" || a.charAt(1) == \"\\u266F\"\n      ? 1\n      : a.charAt(1) === \"b\" || a.charAt(1) == \"\\u266D\"\n      ? -1\n      : 0;\n  if (modifier == 0 && a.length > 1) {\n    throw \"Invalid note\";\n  }\n  return {\n    base: base,\n    modifier: modifier,\n  };\n}\n\nconst chordsTypes = {\n  dim: \"DIMINISHED\",\n  h: \"DIMINISHED\",\n  \"\\u0394\": \"DIMINISHED\",\n  min: \"MINOR\",\n  \"-\": \"MINOR\",\n  minor: \"MINOR\",\n  M: \"MAJOR\",\n};\nconst addOnRegex = /^(sus|maj7|\\^7|add\\d+|(#|\\u266F|\\u266D|b)?\\d|\\((#|\\u266F|\\u266D|b)?\\d+\\))/gm;\nconst noteRegex = \"^(A|B|C|D|E|F|G)(#|\\u266F|\\u266D|b)?\";\n\nexport function fromStringToChord(a: string): Chord {\n  const note = a.match(noteRegex);\n  if (note == null || note.length == 0) {\n    console.log(a);\n    throw \"Invalid Chord\";\n  }\n  const tonic = fromStringToNote(note[0]);\n  let chord = a.slice(note[0].length);\n  console.log(\"Note Excluded:\" + chord);\n  let type = \"MAJOR\";\n  let foundkey = \"\";\n  for (var key in chordsTypes) {\n    if (chordsTypes.hasOwnProperty(key)) {\n      if (chord.startsWith(key)) {\n        console.log(\"starts with \" + key);\n        type = chordsTypes[key] as ChordType;\n        foundkey = key;\n      }\n    }\n  }\n  chord = chord.slice(foundkey.length);\n  let addOns = [];\n  while (chord.length > 0) {\n    let matches = chord.match(addOnRegex);\n    console.log(\"Match:\" + JSON.stringify(matches) + \"\\n\");\n    if (matches != null) {\n      const match = matches[0];\n      if (match.startsWith(\"(\")) {\n        addOns.push(fromStringToAddOn(match.slice(1, match.length - 1)));\n      } else {\n        addOns.push(fromStringToAddOn(match));\n      }\n      chord = chord.slice(match.length);\n    } else {\n      throw \"Invalid Chord\";\n    }\n  }\n  return { tonic: tonic, type: type as ChordType, addOns: addOns };\n}\n\nfunction fromStringToAddOn(a: string): AddOn {\n  if (a.length < 1) {\n    throw \"Invalid\";\n  }\n  if (a.startsWith(\"maj\")) {\n    return { index: 7, modifier: 0 };\n  }\n  if (a.startsWith(\"sus\")) {\n    return { index: 4, modifier: 0 };\n  }\n  if (a.startsWith(\"7\")) {\n    return { index: 7, modifier: -1 };\n  }\n  if (a.startsWith(\"^\")) {\n    return { index: 7, modifier: 0 };\n  }\n  let index = 1;\n  let modifier = 0;\n  if (\n    a.charAt(0) === \"#\" ||\n    a.charAt(0) == \"\\u266F\" ||\n    a.charAt(0) === \"b\" ||\n    a.charAt(0) == \"\\u266D\"\n  ) {\n    index = parseInt(a.slice(1));\n    modifier = a.charAt(0) === \"#\" || a.charAt(0) == \"\\u266F\" ? 1 : -1;\n  }\n  if (a.startsWith(\"add\")) {\n    index = parseInt(a.slice(3));\n    modifier = 0;\n  } else {\n    index = parseInt(a);\n    modifier = 0;\n  }\n  if (index == 0 || index == 1 || index == 8 || index == null) {\n    throw \"invalid\";\n  }\n  return {\n    index: index,\n    modifier: modifier,\n  };\n}\n\nexport function getChordNotes(c: Chord): Array<Note> {\n  const majorScale = getScale(c.tonic, \"MAJOR\");\n  var scale = [];\n  switch (c.type) {\n    case \"DIMINISHED\":\n      scale = getScale(c.tonic, \"DIMINISHED\");\n      break;\n    case \"MAJOR\":\n      scale = majorScale;\n      break;\n    case \"MINOR\":\n      scale = getScale(c.tonic, \"NATURAL\");\n      break;\n  }\n  var notes = [scale[0], scale[2], scale[4]];\n  for (var addOn of c.addOns) {\n    const inNoteScale =\n      addOn.index < majorScale.length\n        ? addOn.index - 1\n        : addOn.index % majorScale.length;\n    if (addOn.modifier == 0) {\n      notes.push(majorScale[inNoteScale]);\n    } else {\n      if (addOn.modifier == -1) {\n        notes.push(getPrevSemitone(majorScale[inNoteScale], true));\n      } else {\n        notes.push(getNextSemitone(majorScale[inNoteScale], false));\n      }\n    }\n  }\n  return notes;\n}\n","import {\n  Chord as ChordType,\n  fromStringToChord,\n  toStringFromChord,\n  getNextSemitone,\n  getPrevSemitone,\n} from \"./utils\";\nimport React from \"react\";\n\nimport { useState } from \"react\";\nimport { Control } from \"./commonStyles\";\n\ninterface ChordProps {\n  chord: ChordType;\n  setChord?: (a: ChordType) => void;\n}\n\nfunction Chord(props: ChordProps): JSX.Element {\n  if (props.setChord == null) {\n    return (\n      <h2 className=\"d-flex bd-highlight px-2\">\n        {toStringFromChord(props.chord)}\n      </h2>\n    );\n  } else {\n    const [isValid, setIsValid] = useState<boolean>(true);\n    const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n      try {\n        props.setChord && props.setChord(fromStringToChord(event.target.value));\n        setIsValid(true);\n      } catch (errror) {\n        setIsValid(false);\n      }\n    };\n    return (\n      <div className=\"buttons d-flex flex-row mb-3 ml-3\">\n        <input\n          data-bs-theme=\"dark\"\n          type=\"text\"\n          className={\n            isValid\n              ? \"mr-21 lcars-form-control lcars-lcars-is-valid\"\n              : \"mr-21 lcars-form-control lcars-is-invalid\"\n          }\n          placeholder={toStringFromChord(props.chord)}\n          aria-label=\"Note\"\n          aria-describedby=\"basic-addon1\"\n          onChange={changeValue}\n        />\n        <Control\n          className={!isValid ? \"c46\" : \"orange\"}\n          disabled={!isValid}\n          onClick={() =>\n            props.setChord!({\n              tonic: getPrevSemitone(props.chord.tonic, true),\n              type: props.chord.type,\n              addOns: props.chord.addOns,\n            })\n          }\n        >\n          Transpose down\n        </Control>\n        <Control\n          className={!isValid ? \"c46\" : \"orange\"}\n          disabled={!isValid}\n          onClick={() =>\n            props.setChord!({\n              tonic: getNextSemitone(props.chord.tonic, false),\n              type: props.chord.type,\n              addOns: props.chord.addOns,\n            })\n          }\n        >\n          Transpose up\n        </Control>\n      </div>\n    );\n  }\n}\n\nexport default Chord;\n","import React from \"react\";\nimport {\n  Note as NoteType,\n  Chord as ChordType,\n  getChordNotes,\n  ChordSequence as ChordSequenceType,\n  fromStringToChord,\n  getNextSemitone,\n  getPrevSemitone,\n  fromStringToNote,\n  toStringFromNote,\n} from \"../components/utils\";\nimport { useState } from \"react\";\nimport Scale from \"../components/scale\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Chord from \"../components/chord\";\nimport Note from \"../components/note\";\nimport { Button, Control } from \"../components/commonStyles\";\n\nconst iRealReader = require(\"ireal-reader\");\n\nimport styled from \"@emotion/styled\";\n\nconst A4Paper = styled.div`\n  width: 1095px;\n  min-height: 1880px;\n  background-color: white;\n  padding: 50px 40px 10px 40px;\n  justify-items: start;\n`;\n\nconst SongTitle = styled.div`\n  font-size: xxx-large;\n  font-style: bold;\n  text-align: center;\n  color: black;\n`;\n\nconst SongKey = styled.div`\n  color: black;\n  text-align: left;\n  font-size: medium;\n`;\n\nconst BarDiv = styled.div`\n  width: 250px;\n  border-right: 1px;\n  border-left: 2px;\n  border-top: 0px;\n  border-bottom: 0px;\n  border-color: black;\n  margin-right: -1px;\n  height: 60px;\n  margin-bottom: 5px;\n  display: flex;\n  font-size: auto;\n  color: black;\n  border-style: solid;\n  flex-wrap: nowrap;\n  justify-content: stretch;\n  align-content: center;\n`;\n\nconst ChordDiv = styled.div`\n  color: black;\n  text-align: left;\n  margin-right: 6px;\n  display: flex;\n  justify-content: stretch;\n  word-wrap: nowrap;\n  flex-wrap: nowrap;\n  align-self: center;\n  flex-grow: 1;\n  flex-shrink: 1;\n  font-size: 20px;\n`;\n\nexport default function ChordPage(): JSX.Element {\n  const [topChord, setTopChord] = useState<ChordType>({\n    tonic: { base: \"C\", modifier: 0 },\n    type: \"MAJOR\",\n    addOns: [],\n  });\n\n  return (\n    <Layout currentPage=\"Music\" currentSubPage=\"Chords\">\n      <SEO\n        title=\"Chords\"\n        description={\n          \"Given chord find all the notes you can play in jazz improv.\"\n        }\n        keywords={[\n          \"music\",\n          \"theory\",\n          \"chords\",\n          \"ireal\",\n          \"song\",\n          \"improvise\",\n          \"jazz improvisation\",\n          \"note generation\",\n          \"translate\",\n          \"what notes can I use\",\n          \"jazz\",\n          \"generate\",\n          \"notes\",\n          \"improv\",\n          \"jazz improvisation chord generation\",\n        ]}\n      />\n      <div>\n        <h2>Main Chord</h2>\n        <p>\n          <Chord chord={topChord} setChord={setTopChord} />\n        </p>\n      </div>\n      <div>\n        <h2>Available Notes:</h2>\n        <div>\n          <div className=\"lcars-card\">\n            <div className=\"card-body\">\n              <Scale notes={getChordNotes(topChord)} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h2>Full Song</h2>\n        <p>\n          <ChordSequence />\n        </p>\n      </div>\n    </Layout>\n  );\n}\n\nfunction ChordSequence(): JSX.Element {\n  const [url, setUrl] = useState<string | null>(() => {\n    var stickyValue = undefined;\n    if (typeof window !== \"undefined\") {\n      stickyValue = window.localStorage.getItem(\"ireal-url\");\n    }\n    if (stickyValue) {\n      return stickyValue;\n    }\n    return null;\n  });\n  const [song, setSong] = useState<ChordSequenceType | undefined>(undefined);\n  const [title, setTitle] = useState<string>(\"\");\n  const [key, setKey] = useState<NoteType | undefined>(undefined);\n\n  const getSong = () => {\n    const parseResult = iRealReader(url);\n    if (parseResult && url) {\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(\"ireal-url\", url);\n      }\n\n      const songResult = parseResult.songs[0];\n      const bars = songResult.music.measures as Array<Array<string>>;\n      setKey(fromStringToNote(songResult.key));\n      setSong({\n        bars: bars.map((bar) => {\n          return {\n            chords: bar.map(\n              (chordString) => fromStringToChord(chordString) ?? null\n            ),\n          };\n        }),\n      });\n      setTitle(songResult.title);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex flex-row\">\n        <div className=\"align-self-center mr-5\">iReal URL:{\"  \"}</div>\n\n        <input\n          type=\"text\"\n          className=\"lcars-form-control lcars-big-input\"\n          placeholder={url ?? \"\"}\n          aria-label=\"Note\"\n          aria-describedby=\"basic-addon1\"\n          onChange={(e) => setUrl(e.target.value)}\n        />\n        <Button\n          className={!url ? \"c46\" : \"orange\"}\n          disabled={url === null}\n          onClick={getSong}\n        >\n          Process\n        </Button>\n      </div>\n      <div>\n        To get the right url to paste here, go to the{\" \"}\n        <a href=\"https://www.irealb.com/forums/forumdisplay.php?3-Songs\">\n          iReal forum\n        </a>\n        , and find the song you like. Once you have found it you can right click\n        and copy the url, then you can paste it here. I have not yet implemented\n        all the functionalities of the iReal app, so some notes may be missing.\n      </div>\n      {key && (\n        <A4Paper id=\"a4-print-song\">\n          <SongTitle>{title ?? \"Unknown\"}</SongTitle>\n          <SongKey className=\"d-flex flex-row justify-content-start align-content-center\">\n            <Control\n              className={!song || !key ? \"c46\" : \"orange\"}\n              disabled={!song || !key}\n              onClick={() => {\n                setSong({\n                  bars: song!.bars.map((bar) => {\n                    return {\n                      chords: bar!.chords.map((c) => {\n                        return c ? transposeChordDown(c) : c;\n                      }),\n                    };\n                  }),\n                });\n                setKey(getPrevSemitone(key!, true));\n              }}\n            >\n              Transpose down\n            </Control>\n            <Control\n              className={!song || !key ? \"c46\" : \"orange\"}\n              disabled={!song || !key}\n              onClick={() => {\n                setSong({\n                  bars: song!.bars.map((bar) => {\n                    return {\n                      chords: bar!.chords.map((c) => {\n                        return c ? transposeChordUp(c) : c;\n                      }),\n                    };\n                  }),\n                });\n                setKey(getNextSemitone(key!, true));\n              }}\n            >\n              Transpose up\n            </Control>\n            <div>\n              {\" In the key of \"}\n              {toStringFromNote(key)}\n            </div>\n          </SongKey>\n\n          {song && <Song data={song} />}\n        </A4Paper>\n      )}\n    </div>\n  );\n}\n\nfunction Song({ data }: { data: ChordSequenceType }): JSX.Element {\n  if (data === null) {\n    return <div />;\n  }\n\n  return (\n    <div className=\"flex-wrap d-flex flex-row\">\n      {data.bars.map((a) => {\n        return (\n          <BarDiv>\n            {a.chords.map((c) => {\n              const notes = c === undefined ? undefined : getChordNotes(c);\n              if (c === undefined || notes === undefined || notes.length === 0)\n                return <ChordDiv />;\n              return (\n                <ChordDiv>\n                  {notes.map((n) => (\n                    <>\n                      <Note note={n} setNote={null} />{\" \"}\n                    </>\n                  ))}\n                </ChordDiv>\n              );\n            })}\n          </BarDiv>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction transposeChordDown(chord: ChordType): ChordType {\n  return {\n    tonic: getPrevSemitone(chord.tonic, true),\n    type: chord.type,\n    addOns: chord.addOns,\n  };\n}\n\nfunction transposeChordUp(chord: ChordType): ChordType {\n  return {\n    tonic: getNextSemitone(chord.tonic, false),\n    type: chord.type,\n    addOns: chord.addOns,\n  };\n}\n\n","let measures, startRepeatLocation, lastChord, endRepeatLocation, timeSignature, \nthirdEndingImminent, fineLocation, dcAlFineImminent, dcAlCodaImminent, dsAlCodaImminent,\ncodaLocation, segnoLocation;\n\nfunction resetVars() {\n  measures = [];\n  startRepeatLocation = null;\n  endRepeatLocation = null;\n  lastChord = null;\n  codaLocation = null;\n  segnoLocation = null;\n  timeSignature = null;\n  thirdEndingImminent = false;\n  dcAlCodaImminent = false;\n  dsAlCodaImminent = false;\n  fineLocation = null;\n  dcAlFineImminent = false;\n}\n\nconst rules = [\n  { token: 'XyQ', description: 'Empty space' },\n  { token: /\\*\\w/, description: 'Section marker' },\n  { token: /<(.*?)>/, description: 'Comments inside carets', operation: checkForRepeats },\n  { token: /T(\\d+)/, description: 'Time signature', operation: setTimeSignature },\n  { token: 'x', description: 'Repeat previous measure in current measure', operation: repeatLastMeasure },\n  { token: 'Kcl', description: 'Repeat previous measure and create new measure', operation: repeatLastMeasureAndAddNew },\n  { token: 'r|XyQ', description: 'Repeat previous two measures', operation: repeatLastTwoMeasures },\n  { token: /Y+/, description: 'Vertical spacers' },\n  { token: 'n', description: 'No Chord (N.C)', operation: pushNull },\n  { token: 'p', description: 'Pause slash' },\n  { token: 'U', description: 'Ending measure for player' },\n  { token: 'S', description: 'Segno', operation: setSegnoLocation },\n  { token: 'Q', description: 'Coda', operation: setCodaLocation },\n  { token: '{', description: 'Start repeat marker', operation: setStartRepeatLocation },\n  { token: '}', description: 'End repeat marker', operation: repeatEverythingToEndRepeatLocation },\n  { token: 'LZ|', description: 'Bar line', operation: createNewMeasure },\n  { token: '|', description: 'Bar line', operation: createNewMeasure },\n  { token: 'LZ', description: 'Bar line', operation: createNewMeasure },\n  { token: '[', description: 'Double bar start', operation: createNewMeasure },\n  { token: ']', description: 'Double bar end', operation: repeatRemainingEndings },\n  { token: /N(\\d)/, description: 'Numbered endings', operation: setEndRepeatLocation },\n  { token: 'Z', description: 'Final bar line', operation: repeatRemainingEndings },\n  { token: /[A-GW]{1}[\\+\\-\\^\\dhob#suadlt]*(\\/[A-G][#b]?)?/, description: 'Chord', operation: pushChordInMeasures }\n];\n\n//chord regex:\n//  letters A-G and W (W is an invisible slash chord)\n//  {1} only one of the aforementioned letters\n//  followed by zero or more of these: + - ^ h o # b digit\n//  followed by an optional group (to catch slash chords)\n//    that starts with a slash\n//    followed by A-G\n//    followed by optional # or b\n\nfunction checkForRepeats(match) {\n  if (match[1].toLowerCase() === 'd.c. al 3rd ending') {\n    thirdEndingImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.c. al fine') {\n    dcAlFineImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.c. al coda') {\n    dcAlCodaImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.s. al coda') {\n    dsAlCodaImminent = true;\n  }\n  if (match[1].toLowerCase() === 'fine') {\n    fineLocation = measures.length;\n  }\n}\n\nfunction setTimeSignature(match) {\n  timeSignature = match[1];\n}\n\nfunction pushNull() {\n  if (measures.length === 0) measures.push([]);\n  measures[measures.length - 1].push(null);\n}\n\nfunction repeatLastMeasure() {\n  measures[measures.length - 1] = measures[measures.length - 2];\n}\n\nfunction repeatLastMeasureAndAddNew() {\n  measures[measures.length] = measures[measures.length - 1];\n}\n\nfunction repeatLastTwoMeasures() {\n  measures[measures.length - 1] = measures[measures.length - 3];\n  measures[measures.length] = measures[measures.length - 2];\n}\n\nfunction setStartRepeatLocation() {\n  createNewMeasure();\n  startRepeatLocation = measures.length - 1;\n  endRepeatLocation = null;\n}\n\nfunction setEndRepeatLocation(match) {\n  //if the ending is N1, set that as the end of the repeat, because next time around we go to N2\n  const ending = parseInt(match[1]);\n  if (ending === 1) {\n    endRepeatLocation = measures.length - 1;\n  }\n}\n\nfunction setSegnoLocation() {\n  segnoLocation = measures.length - 1;\n}\n\nfunction setCodaLocation() {\n  codaLocation = measures.length;\n}\n\nfunction createNewMeasure() {\n  //unless the last measure is a blank, insert a new blank measure\n  if (measures.length === 0 || measures[measures.length - 1].length !== 0) {\n    measures.push([]);\n  }\n}\n\nfunction repeatEverythingToEndRepeatLocation() {\n  if (!endRepeatLocation) {\n    endRepeatLocation = measures.length;\n  } \n  measures.push(...measures.slice(startRepeatLocation, endRepeatLocation));\n  createNewMeasure();\n}\n\nfunction repeatRemainingEndings() {\n  if (thirdEndingImminent) {\n    repeatEverythingToEndRepeatLocation();\n    thirdEndingImminent = false; \n  }\n  if (dcAlFineImminent) {\n    measures.push(...measures.slice(0, fineLocation));\n    dcAlFineImminent = false; \n  }\n  if (dcAlCodaImminent) {\n    measures.push(...measures.slice(0, codaLocation));\n    dcAlCodaImminent = false; \n  }\n  if (dsAlCodaImminent) {\n    measures.push(...measures.slice(segnoLocation, codaLocation));\n    dsAlCodaImminent = false; \n  }\n}\n\nfunction pushChordInMeasures(match) {\n  if (measures.length === 0) measures.push([]);\n\n  let chord = match[0];\n  if (chord.startsWith('W') && lastChord) {\n    chord = chord.replace('W', lastChord)\n  } else {\n    lastChord = chord.split('/')[0];\n  }\n  measures[measures.length - 1].push(chord)\n}\n\nfunction parse(inputString) {\n  // loop through the rules until one of them applies to the beginning of the string\n  // chop off the match and parse again \n\n  for (let i = 0; i < rules.length; i++) {\n    const rule = rules[i];\n\n    if (typeof rule.token === 'string' && inputString.startsWith(rule.token)) {\n      if (rule.operation) rule.operation();\n      parse(inputString.substring(rule.token.length).trim());\n      break;\n    } else if (rule.token instanceof RegExp) {\n      const match = inputString.match(rule.token);\n      if (match && match.index === 0) {\n        if (rule.operation) rule.operation(match);\n        parse(inputString.substring(match[0].length).trim());\n        break;\n      }\n    }\n    if (i === rules.length - 1 && inputString.length > 1) {\n      // we got to the last rule and no rule applied\n      // trim off one character and parse again\n      parse(inputString.substring(1));\n    }\n  }\n}\nfunction removeEmptyMeasures(measures){\n  return measures.filter(x => x.length !== 0)\n}\n\nmodule.exports = function (raw) {\n  resetVars();\n  parse(raw);\n  return { measures: removeEmptyMeasures(measures), timeSignature, raw };\n}\n","'use strict';\n\nconst protocolRegex = /.*?irealb:\\/\\/([^\"]*)/;\nconst musicPrefix = \"1r34LbKcu7\";\nconst unscramble = require('./unscramble');\nconst parser = require('./Parser');\n\nfunction parseMusic(data) {\n  const parts = data.split(musicPrefix);\n  return parser(unscramble.ireal(parts[1]));\n}\n\nfunction makeSong(data) {\n  const parts = data.split(/=+/).filter(x => x != \"\"); //split on one or more equal signs, remove the blanks\n  let title, composer, style, key, transpose, music, compStyle, bpm, repeats = null;\n\n  if (parts.length === 7) {\n    [title, composer, style, key, music, bpm, repeats] = parts;\n  }\n  if (parts.length === 8 && parts[4].startsWith(musicPrefix)) {\n    [title, composer, style, key, music, compStyle, bpm, repeats] = parts;\n  }\n  if (parts.length === 8 && parts[5].startsWith(musicPrefix)) {\n    [title, composer, style, key, transpose, music, bpm, repeats] = parts;\n  }\n  if (parts.length === 9) {\n    [title, composer, style, key, transpose, music, compStyle, bpm, repeats] = parts;\n  }\n\n  return {\n    title,\n    composer,\n    style,\n    key,\n    transpose: transpose ? parseInt(transpose) : null,\n    music: parseMusic(music),\n    compStyle,\n    bpm: bpm ? parseInt(bpm) : null,\n    repeats: repeats ? parseInt(repeats) : null\n  }\n}\n\nmodule.exports = function (data) {\n  const percentEncoded = protocolRegex.exec(data);\n  const percentDecoded = decodeURIComponent(percentEncoded[1]);\n  const parts = percentDecoded.split(\"===\");  //songs are separated by ===\n\n  return {\n    name: (parts.length > 1) ? parts.pop() : undefined,\n    songs: parts.map(x => makeSong(x))\n  }\n};\n","'use strict';\n\n//unscrambling hints from https://github.com/ironss/accompaniser/blob/master/irealb_parser.lua\n//strings are broken up in 50 character segments. each segment undergoes character substitution addressed by obfusc50()\nexports.ireal = function(s){\n  let r = '', p;\n\n  while(s.length > 50){\n    p = s.substring(0, 50);\n    s = s.substring(50)\n    if(s.length < 2){\n      r = r + p;\n    }else{\n      r = r + obfusc50(p);\n    }\n  }\n  r = r + s;\n  return r;\n}\n\nfunction obfusc50 (s){\n  //the first 5 characters are switched with the last 5\n  let newString = s.split('');\n  for(let i = 0; i < 5; i++){\n    newString[49 - i] = s[i];\n    newString[i] = s[49 - i];\n  }\n  //characters 10-24 are also switched\n  for(let i = 10; i < 24; i++){\n    newString[49 - i] = s[i];\n    newString[i] = s[49 - i];\n  }\n  return newString.join('');\n}\n"],"names":["props","setNote","___EmotionJSX","React","toStringFromNote","note","isValid","setIsValid","useState","changeValue","event","fromStringToNote","target","value","errror","type","className","placeholder","onChange","Scale","notes","map","index","Note","key","majorScale","harmonicScale","naturalScale","chromaticScale","diminishedScale","alteredScale","getScale","root","scale","order","preferFlats","major","getRelativeMajor","modifier","base","majorH","next","times","i","getNextSemitone","push","a","getRelativeMinor","getPrevSemitone","getNextBase","getPrevBase","String","fromCharCode","charCodeAt","sharpOrFlat","toStringFromChord","tonic","toStringFromChordType","addOn","addOns","toStringFromAddOn","toString","length","console","log","includes","charAt","chordsTypes","dim","h","min","minor","M","addOnRegex","noteRegex","fromStringToChord","match","chord","slice","foundkey","hasOwnProperty","startsWith","matches","JSON","stringify","fromStringToAddOn","parseInt","getChordNotes","c","inNoteScale","setChord","Control","disabled","onClick","iRealReader","require","A4Paper","_styled","name","styles","SongTitle","SongKey","BarDiv","ChordDiv","ChordPage","topChord","setTopChord","Layout","currentPage","currentSubPage","SEO","title","description","keywords","Chord","ChordSequence","url","setUrl","stickyValue","undefined","window","localStorage","getItem","song","setSong","setTitle","setKey","e","Button","getSong","parseResult","setItem","songResult","songs","bars","music","measures","bar","chords","chordString","_fromStringToChord","href","id","transposeChordDown","transposeChordUp","Song","data","_ref","n","startRepeatLocation","lastChord","endRepeatLocation","timeSignature","thirdEndingImminent","fineLocation","dcAlFineImminent","dcAlCodaImminent","dsAlCodaImminent","codaLocation","segnoLocation","rules","token","operation","toLowerCase","createNewMeasure","repeatEverythingToEndRepeatLocation","repeatRemainingEndings","replace","split","parse","inputString","rule","substring","trim","RegExp","removeEmptyMeasures","filter","x","module","exports","raw","protocolRegex","musicPrefix","unscramble","parser","parseMusic","parts","ireal","percentEncoded","exec","decodeURIComponent","pop","composer","style","transpose","compStyle","bpm","repeats","makeSong","obfusc50","s","newString","join","p","r"],"sourceRoot":""}