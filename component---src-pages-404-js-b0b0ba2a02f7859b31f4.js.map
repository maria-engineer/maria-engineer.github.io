{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Header","siteTitle","style","background","marginBottom","className","width","to","color","textDecoration","defaultProps","Layout","children","data","useStaticQuery","site","siteMetadata","title","margin","maxWidth","padding","marginTop","Date","getFullYear","href","SEO","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","NotFoundPage"],"mappings":"yJAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,UACXC,aAAa,YAGf,yBACEC,UAAU,iCACVH,MAAO,CACLI,MAAM,QAGR,wBAAID,UAAU,yBACZ,kBAAC,OAAD,CACEE,GAAG,IACHL,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhBR,IAGL,yBAAKI,UAAU,0CACf,uBAAGA,UAAU,uBACX,kBAAC,OAAD,CACEE,GAAG,IACHL,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhB,SAGL,uBAAGJ,UAAU,uBACX,kBAAC,OAAD,CACEE,GAAG,WACHL,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhB,eAYXT,EAAOU,aAAe,CACpBT,UAAU,IAGGD,Q,UCZAW,IAtCA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVC,EAAOC,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQb,WAAW,UAAAY,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,yBACEf,MAAO,CACLgB,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOR,GACP,4BAAQV,MAAO,CACbmB,UAAU,SADZ,MAGK,IAAIC,MAAOC,cAHhB,mBAKE,uBAAGC,KAAK,4BAAR,e,kCCzCV,iDAYA,SAASC,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMX,EAAS,EAATA,MAC9BF,EAASD,yBAAe,YAAxBC,KAcFc,EAAkBH,GAAeX,EAAKC,aAAaU,YACnDI,EAAY,UAAGf,EAAKC,oBAAR,aAAG,EAAmBC,MAExC,OACE,kBAAC,IAAD,CACEc,eAAgB,CACdJ,QAEFV,MAAOA,EACPe,cAAeF,EAAY,QAAWA,EAAiB,KACvDF,KAAM,CACJ,CACEK,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASjB,GAEX,CACEkB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAnB,EAAKC,oBAAL,eAAmBoB,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAASjB,GAEX,CACEgB,KAAK,sBACLC,QAASL,IAEXQ,OAAOT,KAKfH,EAAIf,aAAe,CACjBiB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,kCCxFf,wDAaea,UARM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKrB,MAAM,mBACX,8CACA","file":"component---src-pages-404-js-b0b0ba2a02f7859b31f4.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#002B49`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      className=\"d-flex justify-content-between\"\n      style={{\n        width:\"90%\",\n      }}\n    >\n      <h1 className=\"align-self-start pl-5\" >\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div className=\"d-flex justify-content-end flex-grow-1\" >\n      <p className=\"align-self-end px-2\" >\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {\"Home\"}\n        </Link>\n        </p>\n      <p className=\"align-self-end pl-2\" >\n        <Link\n          to=\"/chords/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {\"Chords\"}\n        </Link>\n      </p>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer style={{\n          marginTop: `2rem`\n        }}>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}