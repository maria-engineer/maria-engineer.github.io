{"version":3,"file":"component---src-pages-theatre-js-0d96471f6ee49491987e.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/components/map.js","webpack://maria-dot-engineer/./src/components/GoogleContext.js","webpack://maria-dot-engineer/./src/pages/theatre.js"],"sourcesContent":["import GoogleContext from \"./GoogleContext\";\nimport React from \"react\";\nimport { useState, useEffect, useContext } from \"react\";\n\nexport default function MapChart({ data, id }) {\n  const [chart, setChart] = useState(null);\n  const { google } = useContext(GoogleContext);\n\n  useEffect(() => {\n    if (google && !chart) {\n      var options = {\n        backgroundColor: \"#121212\",\n        defaultColor: \"#636\",\n      };\n      // Instantiate and draw our chart, passing in some options.\n      const draw = () => {\n        const newChart = new google.visualization.GeoChart(\n          document.getElementById(\"mapChart-\" + id)\n        );\n        newChart.draw(google.visualization.arrayToDataTable(data), options);\n\n        setChart(newChart);\n      };\n      google.charts.load(\"current\", { packages: [\"geochart\"] }).then(draw);\n\n      google.setOnLoadCallback(draw);\n    }\n  }, [google, data, chart, id]);\n\n  return (\n    <>\n      {!chart && <div>...</div>}\n      <div id={\"mapChart-\" + id} className={!google ? \"d-none w-100\" : \"\"} />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default React.createContext({\n  google: null,\n  setGoogle: () => {},\n});\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { graphql, Link, navigate } from \"gatsby\";\nimport MapChart from \"../components/map\";\nimport { useState, useEffect } from \"react\";\nimport GoogleContext from \"../components/GoogleContext\";\nimport { Listing } from \"../components/commonStyles\";\n\nexport default function TheatrePage({\n  data: {\n    allMdx: { edges },\n  },\n}) {\n  const [google, setGoogle] = useState(null);\n\n  useEffect(() => {\n    if (!google) {\n      if (window.google) {\n        setGoogle(window.google);\n      }\n    }\n\n    return () => {\n      let script = document.getElementById(\"googleChartsScript\");\n      if (script) {\n        script.remove();\n      }\n    };\n  }, [google]);\n\n  const plays = [\n    [\"Country\", \"Title - Author\"],\n    [\"Argentina\", \"Kiss of the Spider Woman(play) - Manuel Puig\"],\n    [\"Belgium\", \"Opening Night - Ivo van Hove\"],\n    [\"Brazil\", \"Feeling Afraid As If Something Terrible Is Going To Happen - Marcelo Dos Santos\"],\n    [\"Czech Republic\", \"R.U.R. - Karel Capek\"],\n    [\"France\", \"A Flea in her Ear - Georges Feydeau\"],\n    [\"Germany\", \"Spring's Awakening - Frank Wedekind\"],\n    [\"Greece\", \"Lysistrata - Aristophanes\"],\n    [\"Iran\", \"White Rabbit, Red Rabbit - Nassim Soleimanpour\"],\n    [\"Ireland\", \"Waiting for Godot - Samuel Beckett\"],\n    [\"Japan\", \"Garden of Words - Makoto Shinkai\"],\n    [\"Malta\", \"Blanket Ban - Marta Vella & Davinia Hamilton\"],\n    [\"Norway\", \"Hedda Gabler - Henrik Ibsen\"],\n    [\"Poland\", \"Nineteen Gardens - Magdalena Miecznicka\"],\n    [\"Romania\", \"Macbett - Eugene Ionesco\"],\n    [\"South Korea\", \"The Apology - Kyo Choi\"],\n    [\"Switzerland\", \"The Physicists - Friedrich Durrenmatt\"],\n    [\"United Kingdom\", \"Pygmalion - George Bernard Shaw\"],\n    [\"United States\", \"The Nether - Jenifer Haley\"]\n  ];\n\n  const posts = edges\n    .map((edge) => edge?.node?.frontmatter)\n    .filter((edge) => edge != null);\n\n  return (\n    <Layout currentPage=\"Interests\" currentSubPage=\"Theatre\">\n      <SEO\n        title=\"Theatre around the world\"\n        description={\n          \"A world map keeping track of where from I've read or watched plays from. With Reviews\"\n        }\n        keywords={[\n          \"Plays\",\n          \"World\",\n          \"Map\",\n          \"World Map\",\n          \"Challenge\",\n          \"Around The World\",\n          \"Theatre\",\n          \"Reviews\",\n        ]}\n      />\n      <GoogleContext.Provider value={{ google, setGoogle }}>\n        <h2>Reviews</h2>\n        {posts?.map((post, index) => (\n          <Listing\n            key={\"theatre\" + index}\n            onClick={() => navigate(post.slug)}\n            aria-label={\"Navigate to the review for: \" + post.title}\n          >\n            <div>â˜… {post.subcategory}</div>\n            <div>{post.title}</div>\n            <div>{post.date}</div>\n          </Listing>\n        ))}\n        <Link to=\"/2025-watching-theatre/\">\n          <h3>Shows I'm watching out for in 2025</h3>\n        </Link>\n        <div>\n          <h2>Plays Around the World</h2>\n          <div>\n            I am counting both plays I have seen performed as well as plays I\n            have read.\n          </div>\n          <MapChart data={plays} id=\"play\" />\n        </div>\n      </GoogleContext.Provider>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { category: { eq: \"theatre\" } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            category\n            subcategory\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["MapChart","_ref","data","id","chart","setChart","useState","google","useContext","GoogleContext","useEffect","options","backgroundColor","defaultColor","draw","newChart","visualization","GeoChart","document","getElementById","arrayToDataTable","charts","load","packages","then","setOnLoadCallback","___EmotionJSX","React","className","setGoogle","TheatrePage","allMdx","edges","window","script","remove","posts","map","edge","_edge$node","node","frontmatter","filter","Layout","currentPage","currentSubPage","SEO","title","description","keywords","Provider","value","post","index","Listing","key","onClick","navigate","slug","subcategory","date","Link","to"],"sourceRoot":""}