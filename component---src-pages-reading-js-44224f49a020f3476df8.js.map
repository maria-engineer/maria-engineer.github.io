{"version":3,"file":"component---src-pages-reading-js-44224f49a020f3476df8.js","mappings":"8LAIe,SAASA,EAAQC,GAAgB,IAAf,KAAEC,EAAI,GAAEC,GAAIF,EAC3C,MAAM,EAACG,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,OAC7B,OAAEC,IAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAuB9B,OArBAC,EAAAA,EAAAA,WAAU,KACR,GAAIH,IAAWH,EAAO,CACpB,IAAIO,EAAU,CACZC,gBAAiB,UACjBC,aAAc,QAGhB,MAAMC,EAAOA,KACX,MAAMC,EAAW,IAAIR,EAAOS,cAAcC,SACxCC,SAASC,eAAe,YAAchB,IAExCY,EAASD,KAAKP,EAAOS,cAAcI,iBAAiBlB,GAAOS,GAE3DN,EAASU,IAEXR,EAAOc,OAAOC,KAAK,UAAW,CAAEC,SAAU,CAAC,cAAeC,KAAKV,GAE/DP,EAAOkB,kBAAkBX,EAC3B,GACC,CAACP,EAAQL,EAAME,EAAOD,KAGvBuB,EAAAA,EAAAA,GAAAC,EAAAA,SAAA,MACIvB,IAASsB,EAAAA,EAAAA,GAAA,WAAK,QAChBA,EAAAA,EAAAA,GAAA,OAAKvB,GAAI,YAAcA,EAAIyB,UAAYrB,EAA0B,GAAjB,iBAGtD,C,gIC5Be,SAASsB,IACtB,MAAM,EAACtB,EAAO,EAACuB,IAAaxB,EAAAA,EAAAA,UAAS,OAErCI,EAAAA,EAAAA,WAAU,KACHH,GACCwB,OAAOxB,QACTuB,EAAUC,OAAOxB,QAId,KACL,IAAIyB,EAASd,SAASC,eAAe,sBACjCa,GACFA,EAAOC,WAGV,CAAC1B,IAkCJ,OACEmB,EAAAA,EAAAA,GAACQ,EAAAA,EAAM,CAACC,YAAY,YAAYC,eAAe,YAC7CV,EAAAA,EAAAA,GAACW,EAAAA,EAAG,CACFC,MAAM,2BACNC,YACE,yEAEFC,SAAU,CACR,UACA,QACA,MACA,YACA,mBACA,2BACA,YAGJd,EAAAA,EAAAA,GAACjB,EAAAA,EAAcgC,SAAQ,CAACC,MAAO,CAAEnC,SAAQuB,eACvCJ,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAAA,UAAI,2BACJA,EAAAA,EAAAA,GAAA,SAAG,sEAGHA,EAAAA,EAAAA,GAAC1B,EAAAA,EAAQ,CAACE,KAvDJ,CACZ,CAAC,UAAW,mBACZ,CAAC,YAAa,iCACd,CAAC,YAAa,wCACd,CAAC,UAAW,6BACZ,CAAC,SAAU,gCACX,CAAC,SAAU,oCACX,CAAC,QAAS,4BACV,CAAC,cAAe,0BAChB,CAAC,iBAAkB,wBACnB,CAAC,SAAU,gDACX,CAAC,UAAW,6BACZ,CAAC,SAAU,uBACX,CAAC,UAAW,uCACZ,CAAC,QAAS,oCACV,CAAC,QAAS,+BACV,CAAC,UAAW,6BACZ,CAAC,SAAU,+BACX,CAAC,SAAU,2BACX,CAAC,UAAW,wBACZ,CAAC,SAAU,6BACX,CAAC,eAAgB,kCACjB,CAAC,cAAe,wCAChB,CAAC,SAAU,+BACX,CAAC,cAAe,yBAChB,CAAC,SAAU,qCACX,CAAC,UAAW,yCACZ,CAAC,iBAAkB,uCACnB,CAAC,gBAAiB,mCAClB,CAAC,UAAW,0CA0BiBC,GAAG,WAKpC,C,qCCnFA,IAAewB,EAAAA,cAAoB,CACjCpB,OAAQ,KACRuB,UAAWA,Q","sources":["webpack://maria-dot-engineer/./src/components/map.js","webpack://maria-dot-engineer/./src/pages/reading.js","webpack://maria-dot-engineer/./src/components/GoogleContext.js"],"sourcesContent":["import GoogleContext from \"./GoogleContext\";\nimport React from \"react\";\nimport { useState, useEffect, useContext } from \"react\";\n\nexport default function MapChart({ data, id }) {\n  const [chart, setChart] = useState(null);\n  const { google } = useContext(GoogleContext);\n\n  useEffect(() => {\n    if (google && !chart) {\n      var options = {\n        backgroundColor: \"#121212\",\n        defaultColor: \"#636\",\n      };\n      // Instantiate and draw our chart, passing in some options.\n      const draw = () => {\n        const newChart = new google.visualization.GeoChart(\n          document.getElementById(\"mapChart-\" + id)\n        );\n        newChart.draw(google.visualization.arrayToDataTable(data), options);\n\n        setChart(newChart);\n      };\n      google.charts.load(\"current\", { packages: [\"geochart\"] }).then(draw);\n\n      google.setOnLoadCallback(draw);\n    }\n  }, [google, data, chart, id]);\n\n  return (\n    <>\n      {!chart && <div>...</div>}\n      <div id={\"mapChart-\" + id} className={!google ? \"d-none w-100\" : \"\"} />\n    </>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport MapChart from \"../components/map\";\nimport { useState, useEffect } from \"react\";\nimport GoogleContext from \"../components/GoogleContext\";\n\nexport default function ReadingPage() {\n  const [google, setGoogle] = useState(null);\n\n  useEffect(() => {\n    if (!google) {\n      if (window.google) {\n        setGoogle(window.google);\n      }\n    }\n\n    return () => {\n      let script = document.getElementById(\"googleChartsScript\");\n      if (script) {\n        script.remove();\n      }\n    };\n  }, [google]);\n\n  const books = [\n    [\"Country\", \"Title -  Author\"],\n    [\"Argentina\", \"Ficciones - Jorge Luis Borges\"],\n    [\"Australia\", \"The Forests of Silence - Emily Rodda\"],\n    [\"Belgium\", \"Maigret - Georges Simenon\"],\n    [\"Brazil\", \"The Alchemist - Paulo Coelho\"],\n    [\"Canada\", \"The Penelopiad - Margaret Atwood\"],\n    [\"China\", \"The Art of War - Sun Tzu\"],\n    [\"Ivory Coast\", \"Standing heavy - GauZ'\"],\n    [\"Czech Republic\", \"R.U.R. - Karel Capek\"],\n    [\"France\", \"The Little Prince - Antoine de Saint-Exupery\"],\n    [\"Germany\", \"Siddhartha - Herman Hesse\"],\n    [\"Greece\", \"The Odyssey - Homer\"],\n    [\"Ireland\", \"Gulliver's Travels - Jonathan Swift\"],\n    [\"Italy\", \"The Prince - Niccolo Machiavelli\"],\n    [\"Japan\", \"Spring Snow - Yukio Mishima\"],\n    [\"Nigeria\", \"Raybearer - Jordan Ifueko\"],\n    [\"Norway\", \"Hedda Gabler - Henrik Ibsen\"],\n    [\"Poland\", \"Solaris - Stanislaw Lem\"],\n    [\"Romania\", \"Iona - Marin Sorescu\"],\n    [\"Russia\", \"Lolita - Vladimir Nabokov\"],\n    [\"South Africa\", \"Love Below Zero - Bianca Blake\"],\n    [\"South Korea\", \"Kim Jiyoung, Born 1982 - Cho Nam-Joo\"],\n    [\"Sweden\", \"Toward Eternity - Anton Hur\"],\n    [\"Switzerland\", \"Heidi - Johanna Spyri\"],\n    [\"Taiwan\", \"The Mermaid's Tale - Lee Wei-Jing\"],\n    [\"Ukraine\", \"Death and The Penguin - Andrey Kurkov\"],\n    [\"United Kingdom\", \"The Canterville Ghost - Oscar Wilde\"],\n    [\"United States\", \"Giovanni's Room - James Baldwin\"],\n    [\"Vietnam\", \"Ticket to Childhood - Nguyen Nhat Anh\"],\n  ];\n\n  return (\n    <Layout currentPage=\"Interests\" currentSubPage=\"Reading\">\n      <SEO\n        title=\"Reading around the world\"\n        description={\n          \"A world map keeping track of where from I've read books. With reviews.\"\n        }\n        keywords={[\n          \"Reading\",\n          \"World\",\n          \"Map\",\n          \"Challenge\",\n          \"Around The World\",\n          \"Reading Around The World\",\n          \"Books\",\n        ]}\n      />\n      <GoogleContext.Provider value={{ google, setGoogle }}>\n        <div>\n          <h2>Books Around the World</h2>\n          <p>\n            The fiction books I have read from authors from around the world.\n          </p>\n          <MapChart data={books} id=\"book\" />\n        </div>\n      </GoogleContext.Provider>\n    </Layout>\n  );\n}\n","import React from \"react\";\n\nexport default React.createContext({\n  google: null,\n  setGoogle: () => {},\n});\n"],"names":["MapChart","_ref","data","id","chart","setChart","useState","google","useContext","GoogleContext","useEffect","options","backgroundColor","defaultColor","draw","newChart","visualization","GeoChart","document","getElementById","arrayToDataTable","charts","load","packages","then","setOnLoadCallback","___EmotionJSX","React","className","ReadingPage","setGoogle","window","script","remove","Layout","currentPage","currentSubPage","SEO","title","description","keywords","Provider","value"],"sourceRoot":""}