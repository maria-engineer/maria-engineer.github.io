{"version":3,"file":"component---src-posts-theatre-theatre-review-szechwan-mdx-e2b370bbf29481dae12a.js","mappings":"6JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+VAAgW,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iPAAkP,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,wfAAyf,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,0sBAA2sB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,wNAAyN,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,CACr1EI,KAAM,0DACL,sCACL,CAKA,UAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWX,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECkBO,MAAMY,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,IAChC,CAACO,EAAmBP,GACzB,C","sources":["webpack://maria-dot-engineer/./src/posts/theatre/theatre_review_szechwan.mdx","webpack://maria-dot-engineer/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Overall, it was an enjoyable experience. I would describe it as loud and chaotic, yet entertaining and fresh. Considering they took a highly intellectual play by Brecht that some may consider dry, and turned it into something fun and probably enjoyable for the masses, while also not losing the message of the play, is impressive in its own right.\"), \"\\n\", React.createElement(_components.p, null, \"I enjoyed what they did with Brecht's signature alienation effect. While I believe the use of breaking the fourth wall made the characters more endearing and increased emotional involvement in the story, rather than the other way around.\"), \"\\n\", React.createElement(_components.p, null, \"The set and prop design were beyond brilliant. Many conversations were had about the (I believe) second appearance of the gods and how it was possible. (If I got the count wrong, it should be obvious which one I am referring to once you see it.) The rest of the set itself is a work of art, from the LED pool noodles (for lack of a better name) to the power socket, and from the gods' exit to the gods' entrances. The costumes were also fantastic, with personal favourites being the frog and the rat.\"), \"\\n\", React.createElement(_components.p, null, \"In terms of modernization, I have mixed feelings. While the topics of morals and capitalism that are the overarching themes of the play still apply today, there are a few things that may not translate as well. The presence of Shen Te and her alter ego Shui Ta is comedic and absurd, yet while I still believe that the difference between the two sadly still makes a difference in how they are treated, I am willing to pass the simplicity of the difference as well as its unrealism as a product of the time and the fact that this is supposedly a satire. I really struggled to figure out the inflation calculations for the money values, such as the rent being 200$ for 6 months, yet the bottle of water being 18$.\"), \"\\n\", React.createElement(_components.p, null, \"Overall, I believe I enjoyed the play. The actors were good, the direction was good, the set was brilliant, and the play itself was smart. However, after a full day of work, I think it was a bit too overwhelming.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://lyric.co.uk/shows/the-good-person-of-szechwan/\"\n  }, \"Tickets are still available here.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}