{"version":3,"file":"component---src-pages-theatre-js-5324428e0ad761ad8c21.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/components/GoogleContext.js","webpack://maria-dot-engineer/./src/components/map.js","webpack://maria-dot-engineer/./src/pages/theatre.js"],"sourcesContent":["import React from \"react\";\n\nexport default React.createContext({\n  google: null,\n  setGoogle: () => {},\n});\n","import GoogleContext from \"./GoogleContext\";\nimport React from \"react\";\nimport { useState, useEffect, useContext } from \"react\";\n\nexport default function MapChart({ data, id }) {\n  const [chart, setChart] = useState(null);\n  const { google } = useContext(GoogleContext);\n\n  useEffect(() => {\n    if (google && !chart) {\n      var options = {\n        backgroundColor: \"#121212\",\n        defaultColor: \"#636\",\n      };\n      // Instantiate and draw our chart, passing in some options.\n      const draw = () => {\n        const newChart = new google.visualization.GeoChart(\n          document.getElementById(\"mapChart-\" + id)\n        );\n        newChart.draw(google.visualization.arrayToDataTable(data), options);\n\n        setChart(newChart);\n      };\n      google.charts.load(\"current\", { packages: [\"geochart\"] }).then(draw);\n\n      google.setOnLoadCallback(draw);\n    }\n  }, [google, data, chart, id]);\n\n  return (\n    <>\n      {!chart && <div>...</div>}\n      <div id={\"mapChart-\" + id} className={!google ? \"d-none w-100\" : \"\"} />\n    </>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { graphql, Link, navigate } from \"gatsby\";\nimport MapChart from \"../components/map\";\nimport { useState, useEffect } from \"react\";\nimport GoogleContext from \"../components/GoogleContext\";\nimport { Listing } from \"../components/commonStyles\";\n\nexport default function TheatrePage({\n  data: {\n    allMdx: { edges },\n  },\n}) {\n  const [google, setGoogle] = useState(null);\n\n  useEffect(() => {\n    if (!google) {\n      if (window.google) {\n        setGoogle(window.google);\n      }\n    }\n\n    return () => {\n      let script = document.getElementById(\"googleChartsScript\");\n      if (script) {\n        script.remove();\n      }\n    };\n  }, [google]);\n\n  const plays = [\n    [\"Country\", \"Title - Author\"],\n    [\"Argentina\", \"Kiss of the Spider Woman(play) - Manuel Puig\"],\n    [\"Czech Republic\", \"R.U.R. - Karel Capek\"],\n    [\"France\", \"A Flea in her Ear - Georges Feydeau\"],\n    [\"Germany\", \"Spring's Awakening - Frank Wedekind\"],\n    [\"Greece\", \"Lysistrata - Aristophanes\"],\n    [\"Iran\", \"White Rabbit, Red Rabbit - Nassim Soleimanpour\"],\n    [\"Ireland\", \"Waiting for Godot - Samuel Beckett\"],\n    [\"Japan\", \"Garden of Words - Makoto Shinkai\"],\n    [\"Malta\", \"Blanket Ban - Marta Vella & Davinia Hamilton\"],\n    [\"Norway\", \"Hedda Gabler - Henrik Ibsen\"],\n    [\"Poland\", \"Nineteen Gardens - Magdalena Miecznicka\"],\n    [\"Romania\", \"Macbett - Eugene Ionesco\"],\n    [\"South Korea\", \"The Apology - Kyo Choi\"],\n    [\"Switzerland\", \"The Physicists - Friedrich Durrenmatt\"],\n    [\"United Kingdom\", \"Pygmalion - George Bernard Shaw\"],\n    [\"United States\", \"The Nether - Jenifer Haley\"]\n  ];\n\n  const posts = edges\n    .map((edge) => edge?.node?.frontmatter)\n    .filter((edge) => edge != null);\n\n  return (\n    <Layout currentPage=\"Interests\" currentSubPage=\"Theatre\">\n      <SEO\n        title=\"Theatre around the world\"\n        description={\n          \"A world map keeping track of where from I've read or watched plays from. With Reviews\"\n        }\n        keywords={[\n          \"Plays\",\n          \"World\",\n          \"Map\",\n          \"World Map\",\n          \"Challenge\",\n          \"Around The World\",\n          \"Theatre\",\n          \"Reviews\",\n        ]}\n      />\n      <GoogleContext.Provider value={{ google, setGoogle }}>\n        <h2>Reviews</h2>\n        {posts?.map((post, index) => (\n          <Listing\n            key={\"theatre\" + index}\n            onClick={() => navigate(post.slug)}\n            aria-label={\"Navigate to the review for: \" + post.title}\n          >\n            <div>â˜… {post.subcategory}</div>\n            <div>{post.title}</div>\n            <div>{post.date}</div>\n          </Listing>\n        ))}\n        <Link to=\"/2023-watching-theatre/\">\n          <h3>Shows I'm watching out for in 2023</h3>\n        </Link>\n        <div>\n          <h2>Plays Around the World</h2>\n          <div>\n            I am counting both plays I have seen performed as well as plays I\n            have read.\n          </div>\n          <MapChart data={plays} id=\"play\" />\n        </div>\n      </GoogleContext.Provider>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { category: { eq: \"theatre\" } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            category\n            subcategory\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["React","google","setGoogle","MapChart","_ref","data","id","chart","setChart","useState","useContext","GoogleContext","useEffect","options","backgroundColor","defaultColor","draw","newChart","visualization","GeoChart","document","getElementById","arrayToDataTable","charts","load","packages","then","setOnLoadCallback","___EmotionJSX","className","TheatrePage","allMdx","edges","window","script","remove","posts","map","edge","_edge$node","node","frontmatter","filter","Layout","currentPage","currentSubPage","SEO","title","description","keywords","Provider","value","post","index","Listing","key","onClick","navigate","slug","subcategory","date","Link","to"],"sourceRoot":""}