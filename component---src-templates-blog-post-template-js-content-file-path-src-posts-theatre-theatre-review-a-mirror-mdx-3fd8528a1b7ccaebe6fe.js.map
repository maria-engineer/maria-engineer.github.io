{"version":3,"file":"component---src-templates-blog-post-template-js-content-file-path-src-posts-theatre-theatre-review-a-mirror-mdx-3fd8528a1b7ccaebe6fe.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/posts/theatre/theatre_review_a_mirror.mdx","webpack://maria-dot-engineer/./src/templates/blogPostTemplate.js","webpack://maria-dot-engineer/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"You are cordially invited to the wedding of Joel and Leyla. From the entrance to the theatre to the leaflets on the seats, this show takes on the format of a group performing an illegal (not approved by censors) piece of theatre by disguising it as a wedding.\"), \"\\n\", React.createElement(_components.p, null, \"This play sits comfortably at the top of the best plays I have seen this year. It does have some contenders across the time (like Patrick Marber's Don Juan in Soho ... but I am a Patrick Marber fangirl...) but it's is going to remain one of my favourite plays in text for a very long time. Sam Holcroft has just gained a fan. I shall follow her future works with great interest.\"), \"\\n\", React.createElement(_components.p, null, \"Let's talk about the immersion of the play for a second. The premise of the entire play is that is staged as a fake wedding. And the audience joins in to the ruse. The auditorium itself is prepared and arranged as part of the play, and in details lays genius. If you let yourself immerse in the experience it is truly fantastic.\"), \"\\n\", React.createElement(_components.p, null, \"The actors do a fantastic job throughout. I had high expectations seeing Johnny Lee Miller on the cast, but he more than knocked it out of the park. The range of his acting and the power of his expressions were hypnotising. But he was not the only stellar actor in the cast. It was perfection from beginning to end.\"), \"\\n\", React.createElement(_components.p, null, \"The plot itself. Without risking spoilers, it is an example of play within play that should be studied in schools. Hamlet has nothing on this. The plot twists are not as much surprising, but provide relief in their introduction. They are weilded masterfully to hammer home a point even further. And that is as much as I am able to say without spoiling the plot. For the enjoyment in person is the experience. The discovery of the plot and it's significance is part of the journey itself.\"), \"\\n\", React.createElement(_components.p, null, \"There is no mystery that this is a plot about censorship. One may look at China, North Korea and other countries where censorship plays a great part in the consuption of media, and the play is open about gathering inspiration from the fake weddings and funerals over there that are used to distribute illegal art. However no-one ever mentions where this play is set, rightfully so, because it could be anywhere. Until 1968\", React.createElement(_components.a, {\n    href: \"https://www.parliament.uk/about/living-heritage/transformingsociety/private-lives/relationships/collections1/1968-theatre-censorship/1968-theatres-act/\"\n  }, \"ยน\"), \", all theatre in the UK had to pass the approval of censors. So maybe this play is potentially a matter of the past. But look at how the government is reducing the right to protest, while censorship of the theatre is not happening, there has been a significant reduction in the funds given to art councils. So how can I not look a this as something extremely current? This play is relevant yesterday, today and tomorrow.\"), \"\\n\", React.createElement(_components.p, null, \"It was truly perfect. And I hope it makes it to Broadway or the West End, so it can reach a greater audience, though a bigger stage may remove from the intimacy of the performance that the Almeida Theatre so masterfully provided.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariamateescu/maria-engineer.github.io/src/posts/theatre/theatre_review_a_mirror.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport styled from \"@emotion/styled\";\nconst Title = (styled.h1)`\n  text-align: right important!;\n`;\nfunction Template({data, children}) {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  if (frontmatter.category === \"food\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Food\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title,\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(\"div\", {\n      className: \" content\"\n    }, React.createElement(Title, null, frontmatter.title), children));\n  }\n  if (frontmatter.category === \"theatre\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Theatre Reviews\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title + \" - Theatre Review\",\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(\"div\", {\n      className: \"content\"\n    }, React.createElement(\"h1\", null, frontmatter.title), children), React.createElement(\"footer\", {\n      className: \"footer go-center\"\n    }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(\"div\", {\n      className: \"lcars-bar-slice-bottom\"\n    })));\n  }\n  return React.createElement(Layout, {\n    currentPage: \"Maria Mateescu\",\n    currentSubPage: frontmatter.category === \"personal\" ? \"Personal Log\" : \"Engineering Log\"\n  }, React.createElement(SEO, {\n    title: frontmatter.title,\n    keywords: frontmatter.keywords,\n    description: frontmatter.description\n  }), React.createElement(\"div\", {\n    className: \"content\"\n  }, React.createElement(\"h1\", null, frontmatter.title), children), React.createElement(\"footer\", {\n    className: \"footer go-center\"\n  }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(\"div\", {\n    className: \"lcars-bar-slice-bottom\"\n  })));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        short\n        category\n        description\n        keywords\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itโs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itโs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","Title","_styled","target","name","styles","Template","_ref","data","children","mdx","frontmatter","category","Layout","currentPage","currentSubPage","SEO","title","keywords","description","className","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}