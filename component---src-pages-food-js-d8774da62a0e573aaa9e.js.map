{"version":3,"file":"component---src-pages-food-js-d8774da62a0e573aaa9e.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/components/GoogleContext.js","webpack://maria-dot-engineer/./src/components/map.js","webpack://maria-dot-engineer/./src/pages/food.js"],"sourcesContent":["import React from \"react\";\n\nexport default React.createContext({\n  google: null,\n  setGoogle: () => {}\n});","import GoogleContext from \"./GoogleContext\";\nimport React from \"react\";\nimport { useState, useEffect, useContext } from \"react\";\n\nexport default function MapChart({ data, id }) {\n  const [chart, setChart] = useState(null);\n  const { google } = useContext(GoogleContext);\n\n  useEffect(() => {\n    if (google && !chart) {\n      var options = {\n        backgroundColor: \"#121212\",\n        defaultColor: \"#636\",\n      };\n      // Instantiate and draw our chart, passing in some options.\n      const draw = () => {\n        const newChart = new google.visualization.GeoChart(\n          document.getElementById(\"mapChart-\" + id)\n        );\n        newChart.draw(google.visualization.arrayToDataTable(data), options);\n\n        setChart(newChart);\n      };\n      google.charts.load(\"current\", { packages: [\"geochart\"] }).then(draw);\n\n      google.setOnLoadCallback(draw);\n    }\n  }, [google, data, chart, id]);\n\n  return (\n    <>\n      {!chart && <div>...</div>}\n      <div id={\"mapChart-\" + id} className={!google ? \"d-none w-100\" : \"\"} />\n    </>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { graphql, navigate } from \"gatsby\";\nimport MapChart from \"../components/map\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { useState, useEffect } from \"react\";\nimport GoogleContext from \"../components/GoogleContext\";\n\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/react\";\n\nconst RecipeCard = styled.button`\n  display: block;\n  margin: 10px 10px 0px 0px;\n  width: 200px;\n  height: 250px;\n  padding: 0px 5px 5px 5px;\n  border-radius: 26px;\n  align-items: start;\n  background-color: hsl(233, 8%, 19%);\n  justify-content: center;\n  border-width: 0;\n  text-decoration: none important!;\n  box-shadow: inset 0 0 0.5px 1px hsla(0, 0%, 100%, 0.075),\n    0 0 0 1px hsla(0, 0%, 0%, 0.05), 0 0.3px 0.4px hsla(0, 0%, 0%, 0.02),\n    0 0.9px 1.5px hsla(0, 0%, 0%, 0.045), 0 3.5px 6px hsla(0, 0%, 0%, 0.09);\n`;\n\nconst RecipeTitle = styled.div`\n  font-style: bold;\n  font-size: 20px;\n`;\n\nconst RecipeDescription = styled.div`\n  font-size: 14px;\n`;\n\nexport default function FoodPage({\n  data: {\n    allMdx: { edges },\n  },\n}) {\n  const [google, setGoogle] = useState(null);\n\n  useEffect(() => {\n    if (!google) {\n      if (window.google) {\n        setGoogle(window.google);\n      }\n    }\n\n    return () => {\n      let script = document.getElementById(\"googleChartsScript\");\n      if (script) {\n        script.remove();\n      }\n    };\n  }, [google]);\n\n  const plays = [\n    [\"Country\", \"Most memorable dish\"],\n    [\"Argentina\", \"Steak\"],\n    [\"Australia\", \"Fairy Bread\"],\n    [\"Austria\", \"Strudel\"],\n    [\"Belgium\", \"Chocolate\"],\n    [\"Brazil\", \"Steak\"],\n    [\"Bulgaria\", \"Cucumber soup\"],\n    [\"Canada\", \"Poutine\"],\n    [\"China\", \"Xiao Long Bao\"],\n    [\"Cuba\", \"Cubano\"],\n    [\"Egypt\", \"YES\"],\n    [\"Estonia\", \"YES\"],\n    [\"Ethiopia\", \"YES\"],\n    [\"France\", \"Canele\"],\n    [\"Georgia\", \"YES\"],\n    [\"Germany\", \"Wurst\"],\n    [\"Greece\", \"Dolmades\"],\n    [\"Hungary\", \"Goulash\"],\n    [\"India\", \"Kheer\"],\n    [\"Ireland\", \"YES\"],\n    [\"Israel\", \"Hummous\"],\n    [\"Italy\", \"Tiramisu\"],\n    [\"Jamaica\", \"YES\"],\n    [\"Japan\", \"Ramen\"],\n    [\"Laos\", \"Pla Pao Gluer\"],\n    [\"Lebanon\", \"YES\"],\n    [\"Mexico\", \"Burrito\"],\n    [\"Moldova\", \"Placinte\"],\n    [\"Morocco\", \"Tagine\"],\n    [\"Nepal\", \"Momo\"],\n    [\"Netherlands\", \"YES\"],\n    [\"Nigeria\", \"Smoked jollof rice\"],\n    [\"Norway\", \"YES\"],\n    [\"Peru\", \"Ceviche\"],\n    [\"Poland\", \"Pierogi\"],\n    [\"Romania\", \"Sarmale\"],\n    [\"Russia\", \"Borscht\"],\n    [\"Slovakia\", \"YES\"],\n    [\"South Africa\", \"Biltong\"],\n    [\"South Korea\", \"Gogi Guk Su\"],\n    [\"Spain\", \"Paella\"],\n    [\"Sweden\", \"Meatballs\"],\n    [\"Switzerland\", \"Fondue\"],\n    [\"Thailand\", \"Beef & cucumber curry\"],\n    [\"Turkey\", \"Baklava\"],\n    [\"United Kingdom\", \"YES\"],\n    [\"United States\", \"Grits\"],\n    [\"Vietnam\", \"Pho\"],\n  ];\n\n  const posts = edges\n    .map((edge) => edge?.node?.frontmatter)\n    .filter((edge) => edge != null);\n\n  return (\n    <Layout currentPage=\"Interests\" currentSubPage=\"Food\">\n      <SEO\n        title=\"Food around the world\"\n        description={\n          \"A page dedicated to my love for food. Here is a list of my recipes, as well as an attempt to keep track of where I've eaten food from.\"\n        }\n        keywords={[\n          \"Food\",\n          \"World\",\n          \"Map\",\n          \"World Map\",\n          \"Challenge\",\n          \"Around The World\",\n          \"Recipe\",\n        ]}\n      />\n      <GoogleContext.Provider value={{ google, setGoogle }}>\n        <h2>Recipes</h2>\n        <p>\n          These are all recipes I have made multiple times. Some come from my\n          grandma's notebook, where I've had to experiment with some of the\n          ratios of ingredients.{\" \"}\n        </p>\n        <div className=\"d-flex flex-wrap flex-row\">\n          {posts?.map((post, index) => (\n            <RecipeCard\n              key={\"recipe\" + index}\n              onClick={() => navigate(post.slug)}\n              aria-label={\"Navigate to the recipe for: \" + post.title}\n            >\n              {post.featuredImage?.childImageSharp?.gatsbyImageData && (\n                <GatsbyImage\n                  css={css`\n                    object: cover;\n                    width: 180px;\n                    height: 140px;\n                    border-radius: 20px;\n                  `}\n                  image={getImage(\n                    post.featuredImage?.childImageSharp?.gatsbyImageData\n                  )}\n                  alt={\"Photo of \"+post.title}\n                />\n              )}\n              <RecipeTitle>{post.title}</RecipeTitle>\n              <RecipeDescription>{post.description}</RecipeDescription>\n            </RecipeCard>\n          ))}\n        </div>\n        <div>\n          <h2>Food Around the World</h2>\n          <p>Food I have had from all around the world.</p>\n          <MapChart data={plays} id=\"food\" />\n        </div>\n      </GoogleContext.Provider>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { category: { eq: \"food\" } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            short\n            category\n            subcategory\n            description\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(width: 800)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["React","google","setGoogle","MapChart","_ref","data","id","chart","setChart","useState","useContext","GoogleContext","useEffect","options","backgroundColor","defaultColor","draw","newChart","visualization","GeoChart","document","getElementById","arrayToDataTable","charts","load","packages","then","setOnLoadCallback","___EmotionJSX","className","RecipeCard","_styled","target","name","styles","RecipeTitle","RecipeDescription","FoodPage","_ref2","allMdx","edges","window","script","remove","posts","map","edge","_edge$node","node","frontmatter","filter","Layout","currentPage","currentSubPage","SEO","title","description","keywords","Provider","value","post","index","_post$featuredImage","_post$featuredImage$c","_post$featuredImage2","_post$featuredImage2$","key","onClick","navigate","slug","featuredImage","childImageSharp","gatsbyImageData","GatsbyImage","css","image","getImage","alt"],"sourceRoot":""}