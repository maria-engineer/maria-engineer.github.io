{"version":3,"file":"commons-497e8b03f097c85244d7.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/components/commonStyles.tsx","webpack://maria-dot-engineer/./src/components/header.tsx","webpack://maria-dot-engineer/./src/components/layout.tsx","webpack://maria-dot-engineer/./src/components/seo.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: block;\n  margin: 10px 10px 0px 0px;\n  width: 130px;\n  height: 48px;\n  padding: 10px 20px 20px 20px;\n  background: #ccdeff;\n  border-radius: 26px;\n  border-width: 0;\n  text-align: right;\n  line-height: normal;\n  text-decoration: none important!;\n  font-size: 21px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: #121212;\n`;\n\nexport const LinkButton = styled.a`\n  display: block;\n  margin: 10px 10px 0px 0px;\n  height: 57px;\n  padding: 10px 30px 10px 30px;\n  background: #38f;\n  border-radius: 26px;\n  border-width: 0;\n  text-align: center;\n  content-align: center;\n  line-height: normal;\n  text-decoration: none important!;\n  font-size: 26px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: #121212;\n  align-self: center;\n  text-decoration: none;\n`;\n\nexport const Control = styled.button`\n  display: block;\n  margin: 10px 10px 0px 0px;\n  padding: 10px 20px 20px 20px;\n  border-radius: 26px;\n  border-width: 0;\n  text-align: right;\n  line-height: normal;\n  text-transform: uppercase;\n`;\n\nexport const Tag = styled.button`\n  border-radius: 10px;\n  background-color: #ca8;\n  border-width: 0;\n`;\n\nexport const Listing = styled.button`\n  border-width: 0px 0px 1px 10px;\n  margin: 10px 0px 0px 0px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  background: inherit;\n  border-color: #ccdeff;\n  text-decoration: none;\n`;\n\nexport const WholePage = styled.div`\n  padding: 10px 5% 5% 10px;\n  align-content: center;\n`;\n","import { navigate } from \"gatsby\";\nimport React, { useState } from \"react\";\n\nimport { Button } from \"./commonStyles\";\nimport styled from \"@emotion/styled\";\n\ninterface HeaderProps {\n  siteTitle?: string;\n  currentPage?: string;\n  currentSubPage?: string;\n}\n\nconst TopMenuButton = styled(Button)`\n  background-color: #8bf;\n`;\n\nexport default function Header({\n  currentPage = \"\",\n  siteTitle = \"\",\n  currentSubPage = \"\",\n}: HeaderProps) {\n  const [submenuOpen, setSubmenuOpen] = useState<string | undefined>(\n    currentPage === \"Interests\" ? currentPage : undefined\n  );\n  const title = currentPage ?? siteTitle ?? \"Home\";\n  const x = (Math.floor(Math.random() * 2) == 0);\n  const main = x ? \"Maria Mateescu \\u2022 Software Engineer\" : \"Maria Mateescu \\u2022 Personal Coach\";\n\n  let pageTitle =\n    currentPage === \"Home\"\n      ? main\n      : currentPage + \" \\u2022 \" + currentSubPage;\n  if (currentSubPage == \"\") {\n    pageTitle = \"Maria \\u2022 \" + currentPage;\n  }\n  return (\n    <div className=\"d-flex flex-column\">\n      <div className=\"banner\">{pageTitle}</div>\n      <div className=\"d-flex flex-wrap flex-row justify-content-end\">\n        <TopMenuButton\n          onClick={() => navigate(\"/\")}\n          aria-label={\"Navigate to Homepage\"}\n          tabindex=\"0\"\n        >\n          Home\n        </TopMenuButton>\n        <TopMenuButton\n          onClick={() => navigate(\"/blog/\")}\n          aria-label={\"Navigate to Blog\"}\n          tabindex=\"0\"\n        >\n          Blog\n        </TopMenuButton>\n        <div>\n          <TopMenuButton\n            aria-expanded={submenuOpen == \"Interests\"}\n            aria-label={\n              submenuOpen == \"Interests\"\n                ? \"Close submenu for Interests\"\n                : \"Expand submenu for Interests\"\n            }\n            tabindex=\"0\"\n            onClick={() =>\n              submenuOpen == \"Interests\"\n                ? setSubmenuOpen(undefined)\n                : setSubmenuOpen(\"Interests\")\n            }\n          >\n            Interests\n          </TopMenuButton>\n        </div>\n        <div>\n          <TopMenuButton\n            aria-label={\"Navigate to Projects\"}\n            onClick={() => navigate(\"/projects/\")}\n            tabindex=\"0\"\n          >\n            Projects\n          </TopMenuButton>\n        </div>\n      </div>\n      {submenuOpen && <SubMenu currentPage={submenuOpen} />}\n    </div>\n  );\n}\n\nfunction SubMenu({\n  currentPage = \"\",\n  siteTitle = \"\",\n  currentSubPage = \"\",\n}: HeaderProps) {\n  if (currentPage === \"Interests\") {\n    return (\n      <div className=\"d-flex flex-wrap flex-row justify-content-end\">\n        <Button\n          onClick={() => navigate(\"/theatre/\")}\n          aria-label={\"Navigate to the page on Theatre.\"}\n          tabindex=\"1\"\n        >\n          Theatre\n        </Button>\n        <Button\n          onClick={() => navigate(\"/reading/\")}\n          aria-label={\"Navigate to the page on Reading.\"}\n          tabindex=\"1\"\n        >\n          Reading\n        </Button>\n        <Button\n          onClick={() => navigate(\"/art/\")}\n          aria-label={\"Navigate to the page on Art.\"}\n          tabindex=\"1\"\n        >\n          Art\n        </Button>\n        <Button\n          onClick={() => navigate(\"/food/\")}\n          aria-label={\"Navigate to the page on Food.\"}\n          tabindex=\"1\"\n        >\n          Food\n        </Button>\n      </div>\n    );\n  }\n\n  return <div />;\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { WholePage } from \"./commonStyles\";\n\nimport Header from \"./header\";\n\ninterface LayoutProps {\n  currentPage?: string;\n  children: React.ReactNode;\n  currentSubPage?: string;\n}\n\nexport default function Layout({\n  currentPage = \"\",\n  currentSubPage = \"\",\n  children,\n}: LayoutProps) {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <>\n      <Header\n        currentPage={currentPage}\n        siteTitle={data.site.siteMetadata?.title || `Title`}\n        currentSubPage={currentSubPage}\n      />\n      <div data-bs-theme=\"dark\" id=\"gap\">\n        <WholePage>\n          {children}\n\n          <footer className=\"page-footer go-center\">\n            © {new Date().getFullYear()} Maria Mateescu, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n          </footer>\n        </WholePage>\n      </div>\n    </>\n  );\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface Metadata {\n  name: string;\n  content: any;\n  property?: undefined;\n}\n\nexport default function SEO({\n  description = \"\",\n  lang = \"en\",\n  meta = [],\n  title,\n  keywords = [],\n}: {\n  description?: string;\n  title: string;\n  meta?: Metadata[];\n  lang?: string;\n  keywords?: string[];\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n  const defaultKeywords: string[] = [\n    \"software engineer\",\n    \"maria mateescu\",\n    \"software engineering coach\",\n    \"personal and executive coaching\",\n    \"personal and professional coaching\",\n    \"personal and professional coach\",\n    \"tech coaching\",\n    \"tech coach\",\n    \"coaching in technology\",\n    \"professional rubber duck\",\n    \"software engineer turned coach\",\n  ];\n  defaultKeywords.push(...keywords);\n\n  return (\n    <>\n      <Helmet>\n        <meta name={`description`} content={metaDescription} />\n        <meta name={`twitter:title`} content={title ?? defaultTitle} />\n        <meta name={`twitter:description`} content={metaDescription} />\n        <meta name={`twitter:card`} content={\"summary\"} />\n        <meta\n          name={`twitter:creator`}\n          content={site.siteMetadata?.author || ``}\n        />\n        <meta name={`og:title`} content={title ?? defaultTitle} />\n        <meta name={`og:description`} content={metaDescription} />\n        <meta name={\"keywords\"} content={defaultKeywords.join(\",\")} />\n        <meta name={\"lang\"} content={lang ?? \"en-GB\"} />\n        <title>{title}</title>\n      </Helmet>\n    </>\n  );\n}\n"],"names":["Button","_styled","target","name","styles","LinkButton","Listing","WholePage","TopMenuButton","Header","_ref","_ref2","currentPage","siteTitle","currentSubPage","submenuOpen","setSubmenuOpen","useState","undefined","x","Math","floor","random","pageTitle","___EmotionJSX","className","onClick","navigate","tabindex","SubMenu","_ref3","Layout","_data$site$siteMetada","children","data","useStaticQuery","React","site","siteMetadata","title","id","Date","getFullYear","href","SEO","_site$siteMetadata","_site$siteMetadata2","description","lang","meta","keywords","metaDescription","defaultTitle","defaultKeywords","push","apply","_toConsumableArray","Helmet","content","author","join"],"sourceRoot":""}