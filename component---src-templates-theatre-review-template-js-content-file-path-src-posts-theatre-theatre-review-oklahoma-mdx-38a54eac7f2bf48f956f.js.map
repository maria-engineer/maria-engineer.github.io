{"version":3,"file":"component---src-templates-theatre-review-template-js-content-file-path-src-posts-theatre-theatre-review-oklahoma-mdx-38a54eac7f2bf48f956f.js","mappings":"kKAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,maAAoa,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+sBAAgtB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,oXAAqX,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+hBAAgiB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,gOAAiO,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAMI,EAAAA,cAAoBP,EAAYI,EAAG,CAChlFI,KAAM,oFACL,2CACL,CAKA,UAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWX,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,C,gHCVA,SAASY,EAAeC,GAAmB,IAAlB,KAACC,EAAI,SAAEC,GAASF,EACvC,MAAM,IAACG,GAAOF,GACR,YAACG,GAAeD,EACtB,OAAOR,EAAAA,cAAoBU,EAAAA,EAAQ,CACjCC,YAAa,YACbC,eAAgB,mBACfZ,EAAAA,cAAoBa,EAAAA,EAAK,CAC1BC,MAAOL,EAAYK,MAAQ,oBAC3BC,SAAUN,EAAYM,SACtBC,YAAaP,EAAYO,cACvBhB,EAAAA,cAAoB,MAAO,CAC7BiB,UAAW,+BACVjB,EAAAA,cAAoB,MAAO,CAC5BiB,UAAW,aACVjB,EAAAA,cAAoB,KAAM,KAAMS,EAAYK,OAAQP,IAAYP,EAAAA,cAAoB,SAAU,CAC/FiB,UAAW,oBACVjB,EAAAA,cAAoB,MAAO,KAAM,MAAOS,EAAYS,KAAM,OAAQlB,EAAAA,cAAoB,MAAO,CAC9FiB,UAAW,4BAEf,CACe,SAASE,EAAiB3B,GACvC,OAAOQ,EAAAA,cAAoBI,EAAiBZ,EAAOQ,EAAAA,cAAoBoB,EAAAA,QAAqB5B,GAC9F,C,sECMO,MAAM6B,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBvB,GAC/B,MAAMwB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAftB,EACFA,EAAWwB,GAGb,IAAIA,KAAsBxB,IAChC,CAACwB,EAAmBxB,GACzB,C","sources":["webpack://maria-dot-engineer/./src/posts/theatre/theatre_review_oklahoma.mdx","webpack://maria-dot-engineer/./src/templates/theatreReviewTemplate.js","webpack://maria-dot-engineer/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This rendition of Oklahoma! does a valiant job in trying to put on the old musical. In that it succeeds in doing the best it could have possibly done with the source material. Sadly the source material itself may be the problem. While the production is self aware of the problems, the source material still drags on. While they tried to energise and make fun of the dream ballet, it was as ever, somewhat of a bore.\"), \"\\n\", React.createElement(_components.p, null, \"The source material has clearly not aged well. The female characters are bland and somewhat unbelievable. The production aptly admits it through the dry and blank delivery of the lines. They do away with the baskets in the basket auction to bid on the women who are actually bid on, who are voiceless and motionless like the baskets they are being sold as. The social commentary on self defence at the end in itself becomes more of a discussion on inequality than the hero succeeding. Ultimately the biggest change they should be lauded about is not making Jed into a villain. While still an unpleasant character, his immaturity is recognised and he becomes more of a symbol for social and developmental inequality.\"), \"\\n\", React.createElement(_components.p, null, \"This is definitely a five star performance which drew the short straw when it came to what they were actually dealt the text. The comedic timing and delivery of Ali, the sweet sweet voice of Curly, the powerful voice of Annie, and the sheer power of expressivity of Jed were beyond good, they were perfect. They brought life into the musical in a way I did not expect.\"), \"\\n\", React.createElement(_components.p, null, \"When it comes to direction they really pulled all the stops. On stage camera, check. Fully dark (not even emergency lights) room with amplified voiced, check. Audience interaction, check. (Word of warning: if you are not expecting audience interaction it can be quite jarring, but it only affects the middle front row) Fully lit house, check. Shadow play, check. And many many more. If I didn't know better I would say the director was showing off. And in all fairness to them, they took all these methods and put them together seamlessly.\"), \"\\n\", React.createElement(_components.p, null, \"With all of this, I cannot bring myself to go for a full 5 star review. The story and format of the musical has certainly not aged well, and despite the valiant effort to revive it, for me it is not enough to salvage it.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.todaytix.com/london/shows/26450-oklahoma&utm_source=mariadotengineer\"\n  }, \"Rush tickets are still available here.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariamateescu/maria-engineer.github.io/src/posts/theatre/theatre_review_oklahoma.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nfunction TheatreTemplate({data, children}) {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  return React.createElement(Layout, {\n    currentPage: \"Interests\",\n    currentSubPage: \"Theatre Reviews\"\n  }, React.createElement(SEO, {\n    title: frontmatter.title + \" - Theatre Review\",\n    keywords: frontmatter.keywords,\n    description: frontmatter.description\n  }), React.createElement(\"div\", {\n    className: \"blog-post-container content\"\n  }, React.createElement(\"div\", {\n    className: \"blog-post\"\n  }, React.createElement(\"h1\", null, frontmatter.title), children)), React.createElement(\"footer\", {\n    className: \"footer go-center\"\n  }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(\"div\", {\n    className: \"lcars-bar-slice-bottom\"\n  })));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(TheatreTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug }, category: { eq: \"theatre\" } }) {\n      body\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        short\n        subcategory\n        description\n        keywords\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","TheatreTemplate","_ref","data","children","mdx","frontmatter","Layout","currentPage","currentSubPage","SEO","title","keywords","description","className","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}