{"version":3,"file":"component---src-templates-blog-post-template-js-content-file-path-src-posts-personal-blog-why-korea-mdx-a7d1214dadbcc0eb6f9c.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/posts/personal/blog_why_korea.mdx","webpack://maria-dot-engineer/./src/templates/blogPostTemplate.js","webpack://maria-dot-engineer/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Footnote from \"../../components/footnote\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"When I told people I was moving to Korea, one of the first questions (after the inevitable \\\"Are you serious/sure/crazy?\\\") was: \\\"Why Korea? Isn't that really far away?\\\". Some even wondered if I was running from something. I needed to be sure I wasn’t, before I made the leap. And I definitely took my time making the \", React.createElement(_components.a, {\n    href: \"/blog/decisions/\"\n  }, \"decision\"), \". The thing I most needed to make sure of before I pulled the trigger, was that I was running towards something\", React.createElement(Footnote, {\n    presentation: \"0\"\n  }, \"Because if you know me, I don’t stroll, I walk at a very fast pace. And when it's only metaphorical, therefore aerobic exercise is not needed, I run.\"), \". But even I didn't know what I was running towards. I called it intuition. It was a feeling I have gotten once before in my life and that place turned out to be the best place for me at that moment in my life, my university, for interviews\", React.createElement(Footnote, {\n    presentation: \"1\"\n  }, \"While I would do things very differently if I were to do that again now, I am a very different person today than I was back then. Thanks in part to my experience there.\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"While I didn't have the answer as to \\\"Why Korea?\\\" that did not prevent me or my friends for coming up with possible answers, from the bland (the food\", React.createElement(Footnote, {\n    presentation: \"2\"\n  }, \"Not that the food is bland, quite the opposite.\"), \"), to the humorous (the men are more or less the same everywhere, at least in Korea they know how to take care of themselves and are generally prettier), and from the vague (just needed a change of pace) to the practical (better quality of life and lower cost of living). Didn't take me long from arriving in Seoul to know this was the right decision. I was seeking something, I didn’t know what, but I felt like I had found it.\"), \"\\n\", React.createElement(_components.h2, null, \"The cultural difference that triggered my intuition\"), \"\\n\", React.createElement(_components.p, null, \"And then it hit me. While I was seeking a different environment it was one specific cultural difference that made the difference. Let's go to the stereotypes, if there's something Korea is particularly well known for is how fast it moves\", React.createElement(Footnote, {\n    presentation: \"3\"\n  }, \"I was repeatedly overtaken by 70-80 year old grannies on hiking trails, and on the street, and I ain't no slacker... But here I do also mean in terms of how quickly it has evolved.\"), \", it's high standards for beauty, academic excellence, sports and well... in general. Sounds exhausting, and it can be... So why would I want that? I won’t lie, my status as a foreigner, an outsider, a 외국인, does offer me some leeway about the expectations set upon me. Because I get to pick and choose the expectations for myself. But what I picked up on is the attitude to competence.\"), \"\\n\", React.createElement(_components.p, null, \"Remember the opening scene from \", React.createElement(_components.a, {\n    href: \"https://www.imdb.com/title/tt0425112/\"\n  }, \"Hot Fuzz\"), \"? Simon Pegg plays an officer so competent that his superiors resent him, for \", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/shorts/Y9YtTLVqxXM\"\n  }, \"\\\"making them look bad\\\"\"), \". Now you may discount that as fiction, but while not exactly those same words were spoken to me, I have had that exact conversation with my superior while working on one of my first roles. Mind you I was still a junior engineer, and this person was at least 3 levels (promotions) above me. He said that the way I show ambition makes it seem like we are competing, and he doesn't like a competitive culture. It was just the two of us in the team at that time. Ask any ambitious woman, and they will have a story if not many stories about how their ambition was portrayed as a flaw. There's a certain level of conformism in companies in the UK and to a similar extent Silicon Valley (if you are a woman). While I have not experienced that many workplaces in total, being eager, ambitious and generally competent, have rarely been seen as qualities. I have seen two types of women in the field of tech, the ambitious women who strive harder and harder, some get lucky and make some progress, but a lot more burn out due to too much work, and little recognition. And the second type, myself included, who give up, get with the program, and then burn out because of too little work to do and little recognition.\"), \"\\n\", React.createElement(_components.p, null, \"Now, let's look at Korean culture. I have a fairly small sample size of people I have interacted with in person, and I have not worked in a Korean company, so take this with a few pinches of salt. But if we started with a UK fiction example, let’s now turn to K-Dramas to see a different cultural perspective. In American or British school dramas, the smartest kid is usually geeky, socially awkward, and bullied. In Korean dramas? The smartest student is often a lead character, admired for their intelligence, and, of course, played by an absurdly attractive actor. Because, if they are perfectly smart, of course they'd be perfectly good-looking. People are drawn to them and revere them. While this is a lot more complex in real life, and there are many other factors at play, I feel like competence and ambition, as well as hard work and perfectionism, are generally appreciated here. As a counter example to my generalisation, for readers of \", React.createElement(_components.a, {\n    href: \"https://www.goodreads.com/book/show/46041199-kim-jiyoung-born-1982\"\n  }, \"Kim Jiyoung born 1982\"), \", based on the statistics shared there, being a woman is still going to be an impediment here, and competence may not determine your success. But it is an overall pretty visible difference in values\"), \"\\n\", React.createElement(_components.p, null, \"Here's an example from my life. And while it's entirely based on my friend group, therefore statistically insignificant, it is ultimately my experiences that built my intuition. So while I may find out that I was completely wrong in the future, based on my available information, I am going take these as true observations. I like singing, and I would even say I am pretty good at it. This is a fact a lot of my friends are not fully aware of… until we go karaoke. With my Western (and I include Eastern Europe here), upon this discovery I get one of these three responses afterwards:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\\"Oh, this was fun, we should do it again...\\\" with sometimes obvious inflections that mean \\\"Please, never\\\", or whenever it comes up finding an excuse not to go.\"), \"\\n\", React.createElement(_components.li, null, \"A variety of responses that equate to \\\"I do not really like karaoke\\\" or \\\"Let's not do this again\\\", because it's no fun if you're actually good at it.\"), \"\\n\", React.createElement(_components.li, null, \"And the small subset who will join me to karaoke again, and then refuse to sing.\\nNow, with the Korean people I went to Karaoke with, the response was number 1, but, they actually meant it! I got used to letting people suggest karaoke the next time when response number 1 happens, and they actually suggested not only going again, but a time and place. Competence was appreciated, not ostracised.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"What I found: Korea's mindset on success and growth\"), \"\\n\", React.createElement(_components.p, null, \"The Korean near compulsion towards perfection makes competence a desirable trait. You surround yourself with people better than you and learn from them. People come to you because you are competent, so you can teach them. And the beauty of teaching is that you also improve your skills along the way. People aspire to be better. They are ambitious, sometimes to the detriment of their own health\", React.createElement(Footnote, {\n    presentation: \"4\"\n  }, \"I am convinced this country functions on caffeine.\"), \"... But this is what I found again coming to Korea: my ambition, or at least a place where I can nurture my ambition back to its original self. Ultimately that has always been my intrinsic motivation to succeed. Ambition has driven me to action time and time again. And no, it’s not a magic switch, I am not suddenly back to the where I was, and it will take me a while to get to the place where I want to be, but here I have that space to grow. Here I feel like I can be as ambitious and perfectionistic as I choose, and still not match the people I see around me.\"), \"\\n\", React.createElement(_components.h2, null, \"Changing my environment\"), \"\\n\", React.createElement(_components.p, null, \"I’m not saying you need to pack your bags and move halfway across the world… but if you feel like you’re shrinking instead of growing, maybe it’s time to rethink your surroundings. We are impacted by the environment we live in, be it a job, a company, a relationship, or even as great as the society of an entire country. It's unlikely we will ever find an environment that fits us 100%, and we don't need to, as long as it allows us to grow. People say to leave a job once you have stopped growing, but that doesn't mean that you didn't grow in that job before either. We grow as people throughout our lives, and an environment that once fit us may no longer do so.\"), \"\\n\", React.createElement(_components.p, null, \"So take a look around. Are you growing, or just surviving? And if you’re stuck, ask yourself: is it time to move?\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"0\"), \" Because if you know me, I don’t stroll, I walk at a very fast pace. And when it's only metaphorical, therefore aerobic exercise is not needed, I run.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"1\"), \" While I would do things very differently if I were to do that again now, I am a very different person today than I was back then. Thanks in part to my experience there.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"2\"), \" Not that the food is bland, quite the opposite.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"3\"), \" I was repeatedly overtaken by 70-80 year old grannies on hiking trails, and on the street, and I ain't no slacker... But here I do also mean in terms of how quickly it has evolved.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"4\"), \" I am convinced this country functions on caffeine.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariamateescu/maria-engineer.github.io/src/posts/personal/blog_why_korea.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport styled from \"@emotion/styled\";\nconst Title = (styled.h1)`\n  font-size: 3rem;\n  @media (max-width: 420px) {\n    min-font-size: 24px;\n  }\n  font-family: \"Poppins\", \"Arial Narrow\", sans-serif;\n  text-rendering: optimizelegibility;\n  font-weight: 400;\n  text-align: left;\n  color: #38f;\n`;\nconst Post = (styled.div)`\n  padding: 10px 60px 10px 60px;\n  @media (max-width: 420px) {\n    padding: 10px 10px 10px 10px;\n  }\n  font-family: \"Poppins\", \"Arial Narrow\", sans-serif;\n  text-rendering: optimizelegibility;\n  font-weight: 200;\n  font-style: normal;\n`;\nconst Bar = (styled.div)`\n  margin: 5px auto 20px auto;\n  height: 10px;\n  background: #38f;\n  border-right: 18px solid #8bf;\n  border-left: 18px solid #8bf;\n  border-radius: 9px;\n  padding: 0 5px;\n  width: 60%;\n`;\nfunction Template({data, children}) {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  if (frontmatter.category === \"food\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Food\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title,\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)));\n  }\n  if (frontmatter.category === \"theatre\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Theatre Reviews\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title + \" - Review\",\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"div\", {\n      className: \"footer go-center\"\n    }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(Bar)));\n  }\n  return React.createElement(Layout, {\n    currentPage: \"Maria Mateescu\",\n    currentSubPage: frontmatter.category === \"personal\" ? \"Personal Log\" : \"Engineering Log\"\n  }, React.createElement(SEO, {\n    title: frontmatter.title,\n    keywords: frontmatter.keywords,\n    description: frontmatter.description\n  }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"div\", {\n    className: \"footer go-center\"\n  }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(Bar)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        short\n        category\n        description\n        keywords\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","ol","li","hr","_provideComponents","components","React","href","Footnote","presentation","wrapper","MDXLayout","Title","_styled","target","name","styles","Post","Bar","Template","_ref","data","children","mdx","frontmatter","category","Layout","currentPage","currentSubPage","SEO","title","keywords","description","MDXProvider","className","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}