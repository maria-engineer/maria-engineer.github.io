{"version":3,"file":"component---src-pages-chords-tsx-2bb362d35b12ce2898aa.js","mappings":"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","sources":["webpack://maria-dot-engineer/./node_modules/ireal-reader/Parser.js","webpack://maria-dot-engineer/./node_modules/ireal-reader/index.js","webpack://maria-dot-engineer/./node_modules/ireal-reader/unscramble.js","webpack://maria-dot-engineer/./src/components/note.tsx","webpack://maria-dot-engineer/./src/components/scale.tsx","webpack://maria-dot-engineer/./src/components/utils.tsx","webpack://maria-dot-engineer/./src/components/chord.tsx","webpack://maria-dot-engineer/./src/pages/chords.tsx"],"sourcesContent":["let measures, startRepeatLocation, lastChord, endRepeatLocation, timeSignature, thirdEndingImminent, fineLocation, dcAlFineImminent, dcAlCodaImminent, dsAlCodaImminent, codaLocation, segnoLocation;\nfunction resetVars() {\n  measures = [];\n  startRepeatLocation = null;\n  endRepeatLocation = null;\n  lastChord = null;\n  codaLocation = null;\n  segnoLocation = null;\n  timeSignature = null;\n  thirdEndingImminent = false;\n  dcAlCodaImminent = false;\n  dsAlCodaImminent = false;\n  fineLocation = null;\n  dcAlFineImminent = false;\n}\nconst rules = [{\n  token: 'XyQ',\n  description: 'Empty space'\n}, {\n  token: /\\*\\w/,\n  description: 'Section marker'\n}, {\n  token: /<(.*?)>/,\n  description: 'Comments inside carets',\n  operation: checkForRepeats\n}, {\n  token: /T(\\d+)/,\n  description: 'Time signature',\n  operation: setTimeSignature\n}, {\n  token: 'x',\n  description: 'Repeat previous measure in current measure',\n  operation: repeatLastMeasure\n}, {\n  token: 'Kcl',\n  description: 'Repeat previous measure and create new measure',\n  operation: repeatLastMeasureAndAddNew\n}, {\n  token: 'r|XyQ',\n  description: 'Repeat previous two measures',\n  operation: repeatLastTwoMeasures\n}, {\n  token: /Y+/,\n  description: 'Vertical spacers'\n}, {\n  token: 'n',\n  description: 'No Chord (N.C)',\n  operation: pushNull\n}, {\n  token: 'p',\n  description: 'Pause slash'\n}, {\n  token: 'U',\n  description: 'Ending measure for player'\n}, {\n  token: 'S',\n  description: 'Segno',\n  operation: setSegnoLocation\n}, {\n  token: 'Q',\n  description: 'Coda',\n  operation: setCodaLocation\n}, {\n  token: '{',\n  description: 'Start repeat marker',\n  operation: setStartRepeatLocation\n}, {\n  token: '}',\n  description: 'End repeat marker',\n  operation: repeatEverythingToEndRepeatLocation\n}, {\n  token: 'LZ|',\n  description: 'Bar line',\n  operation: createNewMeasure\n}, {\n  token: '|',\n  description: 'Bar line',\n  operation: createNewMeasure\n}, {\n  token: 'LZ',\n  description: 'Bar line',\n  operation: createNewMeasure\n}, {\n  token: '[',\n  description: 'Double bar start',\n  operation: createNewMeasure\n}, {\n  token: ']',\n  description: 'Double bar end',\n  operation: repeatRemainingEndings\n}, {\n  token: /N(\\d)/,\n  description: 'Numbered endings',\n  operation: setEndRepeatLocation\n}, {\n  token: 'Z',\n  description: 'Final bar line',\n  operation: repeatRemainingEndings\n}, {\n  token: /[A-GW]{1}[\\+\\-\\^\\dhob#suadlt]*(\\/[A-G][#b]?)?/,\n  description: 'Chord',\n  operation: pushChordInMeasures\n}];\n\n//chord regex:\n//  letters A-G and W (W is an invisible slash chord)\n//  {1} only one of the aforementioned letters\n//  followed by zero or more of these: + - ^ h o # b digit\n//  followed by an optional group (to catch slash chords)\n//    that starts with a slash\n//    followed by A-G\n//    followed by optional # or b\n\nfunction checkForRepeats(match) {\n  if (match[1].toLowerCase() === 'd.c. al 3rd ending') {\n    thirdEndingImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.c. al fine') {\n    dcAlFineImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.c. al coda') {\n    dcAlCodaImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.s. al coda') {\n    dsAlCodaImminent = true;\n  }\n  if (match[1].toLowerCase() === 'fine') {\n    fineLocation = measures.length;\n  }\n}\nfunction setTimeSignature(match) {\n  timeSignature = match[1];\n}\nfunction pushNull() {\n  if (measures.length === 0) measures.push([]);\n  measures[measures.length - 1].push(null);\n}\nfunction repeatLastMeasure() {\n  measures[measures.length - 1] = measures[measures.length - 2];\n}\nfunction repeatLastMeasureAndAddNew() {\n  measures[measures.length] = measures[measures.length - 1];\n}\nfunction repeatLastTwoMeasures() {\n  measures[measures.length - 1] = measures[measures.length - 3];\n  measures[measures.length] = measures[measures.length - 2];\n}\nfunction setStartRepeatLocation() {\n  createNewMeasure();\n  startRepeatLocation = measures.length - 1;\n  endRepeatLocation = null;\n}\nfunction setEndRepeatLocation(match) {\n  //if the ending is N1, set that as the end of the repeat, because next time around we go to N2\n  const ending = parseInt(match[1]);\n  if (ending === 1) {\n    endRepeatLocation = measures.length - 1;\n  }\n}\nfunction setSegnoLocation() {\n  segnoLocation = measures.length - 1;\n}\nfunction setCodaLocation() {\n  codaLocation = measures.length;\n}\nfunction createNewMeasure() {\n  //unless the last measure is a blank, insert a new blank measure\n  if (measures.length === 0 || measures[measures.length - 1].length !== 0) {\n    measures.push([]);\n  }\n}\nfunction repeatEverythingToEndRepeatLocation() {\n  if (!endRepeatLocation) {\n    endRepeatLocation = measures.length;\n  }\n  measures.push(...measures.slice(startRepeatLocation, endRepeatLocation));\n  createNewMeasure();\n}\nfunction repeatRemainingEndings() {\n  if (thirdEndingImminent) {\n    repeatEverythingToEndRepeatLocation();\n    thirdEndingImminent = false;\n  }\n  if (dcAlFineImminent) {\n    measures.push(...measures.slice(0, fineLocation));\n    dcAlFineImminent = false;\n  }\n  if (dcAlCodaImminent) {\n    measures.push(...measures.slice(0, codaLocation));\n    dcAlCodaImminent = false;\n  }\n  if (dsAlCodaImminent) {\n    measures.push(...measures.slice(segnoLocation, codaLocation));\n    dsAlCodaImminent = false;\n  }\n}\nfunction pushChordInMeasures(match) {\n  if (measures.length === 0) measures.push([]);\n  let chord = match[0];\n  if (chord.startsWith('W') && lastChord) {\n    chord = chord.replace('W', lastChord);\n  } else {\n    lastChord = chord.split('/')[0];\n  }\n  measures[measures.length - 1].push(chord);\n}\nfunction parse(inputString) {\n  // loop through the rules until one of them applies to the beginning of the string\n  // chop off the match and parse again \n\n  for (let i = 0; i < rules.length; i++) {\n    const rule = rules[i];\n    if (typeof rule.token === 'string' && inputString.startsWith(rule.token)) {\n      if (rule.operation) rule.operation();\n      parse(inputString.substring(rule.token.length).trim());\n      break;\n    } else if (rule.token instanceof RegExp) {\n      const match = inputString.match(rule.token);\n      if (match && match.index === 0) {\n        if (rule.operation) rule.operation(match);\n        parse(inputString.substring(match[0].length).trim());\n        break;\n      }\n    }\n    if (i === rules.length - 1 && inputString.length > 1) {\n      // we got to the last rule and no rule applied\n      // trim off one character and parse again\n      parse(inputString.substring(1));\n    }\n  }\n}\nfunction removeEmptyMeasures(measures) {\n  return measures.filter(x => x.length !== 0);\n}\nmodule.exports = function (raw) {\n  resetVars();\n  parse(raw);\n  return {\n    measures: removeEmptyMeasures(measures),\n    timeSignature,\n    raw\n  };\n};","'use strict';\n\nconst protocolRegex = /.*?irealb:\\/\\/([^\"]*)/;\nconst musicPrefix = \"1r34LbKcu7\";\nconst unscramble = require('./unscramble');\nconst parser = require('./Parser');\nfunction parseMusic(data) {\n  const parts = data.split(musicPrefix);\n  return parser(unscramble.ireal(parts[1]));\n}\nfunction makeSong(data) {\n  const parts = data.split(/=+/).filter(x => x != \"\"); //split on one or more equal signs, remove the blanks\n  let title,\n    composer,\n    style,\n    key,\n    transpose,\n    music,\n    compStyle,\n    bpm,\n    repeats = null;\n  if (parts.length === 7) {\n    [title, composer, style, key, music, bpm, repeats] = parts;\n  }\n  if (parts.length === 8 && parts[4].startsWith(musicPrefix)) {\n    [title, composer, style, key, music, compStyle, bpm, repeats] = parts;\n  }\n  if (parts.length === 8 && parts[5].startsWith(musicPrefix)) {\n    [title, composer, style, key, transpose, music, bpm, repeats] = parts;\n  }\n  if (parts.length === 9) {\n    [title, composer, style, key, transpose, music, compStyle, bpm, repeats] = parts;\n  }\n  return {\n    title,\n    composer,\n    style,\n    key,\n    transpose: transpose ? parseInt(transpose) : null,\n    music: parseMusic(music),\n    compStyle,\n    bpm: bpm ? parseInt(bpm) : null,\n    repeats: repeats ? parseInt(repeats) : null\n  };\n}\nmodule.exports = function (data) {\n  const percentEncoded = protocolRegex.exec(data);\n  const percentDecoded = decodeURIComponent(percentEncoded[1]);\n  const parts = percentDecoded.split(\"===\"); //songs are separated by ===\n\n  return {\n    name: parts.length > 1 ? parts.pop() : undefined,\n    songs: parts.map(x => makeSong(x))\n  };\n};","'use strict';\n\n//unscrambling hints from https://github.com/ironss/accompaniser/blob/master/irealb_parser.lua\n//strings are broken up in 50 character segments. each segment undergoes character substitution addressed by obfusc50()\nexports.ireal = function (s) {\n  let r = '',\n    p;\n  while (s.length > 50) {\n    p = s.substring(0, 50);\n    s = s.substring(50);\n    if (s.length < 2) {\n      r = r + p;\n    } else {\n      r = r + obfusc50(p);\n    }\n  }\n  r = r + s;\n  return r;\n};\nfunction obfusc50(s) {\n  //the first 5 characters are switched with the last 5\n  let newString = s.split('');\n  for (let i = 0; i < 5; i++) {\n    newString[49 - i] = s[i];\n    newString[i] = s[49 - i];\n  }\n  //characters 10-24 are also switched\n  for (let i = 10; i < 24; i++) {\n    newString[49 - i] = s[i];\n    newString[i] = s[49 - i];\n  }\n  return newString.join('');\n}","import {Note as NoteType, toStringFromNote, fromStringToNote} from './utils';\nimport React from 'react';\nimport {useState} from 'react';\n\nfunction Note(props: {note: NoteType, setNote: (((NoteType) => void) | null)}): JSX.Element {\n    if (props.setNote == null) {\n    return (<>\n            {toStringFromNote(props.note)}</>\n        );\n    } else {\n        const [isValid, setIsValid] = useState<boolean>(true);\n        const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n            try {\n                props.setNote(fromStringToNote(event.target.value));\n                setIsValid(true);\n            } catch (errror) {\n                setIsValid(false);\n            } \n        };\n        return (\n            <input \n                type=\"text\" \n                className={isValid? \"lcars-form-control lcars-is-valid\" :\"lcars-form-control lcars-is-invalid\"}\n                placeholder={toStringFromNote(props.note)} \n                aria-label=\"Note\" \n                aria-describedby=\"basic-addon1\" \n                onChange={changeValue}\n            />);\n    }\n}\n\nexport default Note","import { Note as NoteType } from \"./utils\";\nimport React from \"react\";\nimport Note from \"./note\";\n\nexport default function Scale(props: { notes: Array<NoteType> }): JSX.Element {\n  const notes = props.notes;\n  if (notes == null) {\n    return <div />;\n  }\n  return (\n    <div className=\"d-inline-flex flex-wrap pl-2 pr-2 bd-highlight \">\n      {notes.map((note, index) => {\n        return (\n          <h2 className=\"d-flex bd-highlight px-2\">\n            <Note key={index} note={note} setNote={null} />\n          </h2>\n        );\n      })}\n    </div>\n  );\n}\n","import { number } from \"prop-types\";\nimport React from \"react\";\n\nexport type BaseNote = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\";\n\nexport type ScaleType = \"NATURAL\" | \"HARMONIC\" | \"MAJOR\" | \"CHROMATIC\" | \"DIMINISHED\" | \"ALTERED\";\n\nexport type Note = {\n base: BaseNote,\n modifier: number\n};\n\nexport type ChordType = \"MINOR\" | \"MAJOR\" | \"DIMINISHED\";\n\nexport type AddOn = {\n    index: number,\n    modifier: number,\n}\n\nexport type Chord = {\n    tonic: Note,\n    type: ChordType,\n    addOns: Array<AddOn>,\n}\n\nexport type ChordSequence = {\n    bars: Array<Bar>\n}\n\nexport type Bar = {\n    chords: Array<Chord | undefined>\n}\n\nconst majorScale = [2,2,1,2,2,2,1];\nconst harmonicScale = [2,1,2,2,1,3,1];\nconst naturalScale = [2,1,2,2,1,2,2];\nconst chromaticScale = [1,1,1,1,1,1,1,1,1,1,1];\nconst diminishedScale = [2,1,2,1,2,1,2,1];\nconst alteredScale = [1,2,1,2,2,2,2];\n\nexport function getScale (root: Note, type: ScaleType): Array<Note> {\n    const scale = [root];\n    let order = [0];\n    let preferFlats = false;\n    switch (type) {\n        case 'CHROMATIC':\n            order = chromaticScale;\n            break;\n        case 'NATURAL':\n            const major = getRelativeMajor(root);\n            preferFlats = major.modifier==-1 || (major.base == 'F' && major.modifier==0);\n            order = naturalScale;\n            break;\n        case 'HARMONIC':\n            const majorH = getRelativeMajor(root);\n            preferFlats = majorH.modifier==-1 || (majorH.base == 'F' && majorH.modifier==0);\n            order= harmonicScale;\n            break;\n        case 'MAJOR':\n            order = majorScale;\n            preferFlats = root.modifier==-1 || (root.base == 'F' && root.modifier==0);\n            break;\n        case 'DIMINISHED':\n            order = diminishedScale;\n            break;\n        case 'ALTERED' :\n            order = alteredScale;\n    }\n    let next = root;\n    for (let times of order) {\n        for(let i=0; i< times; i++) {\n            next = getNextSemitone(next, preferFlats);\n        }\n        scale.push(next);\n    };\n    return scale;\n}\n\nexport function getRelativeMajor(a:Note): Note {\n    let root = a;\n    for (let i=0; i< 3; i++) {\n        root = getNextSemitone(root, true);\n    }\n    return root;\n}\n\nexport function getRelativeMinor(a:Note): Note {\n    let root = a;\n    for (let i=0; i< 3; i++) {\n        root = getPrevSemitone(root, true);\n    }\n    return root;\n}\n\nexport function getNextSemitone(a:Note, preferFlats: boolean): Note {\n    if (a.modifier == -1) {\n        return {base:a.base, modifier: 0};\n    }\n    if (a.modifier == 1) {\n        // Some notes do not have independent sharps == Next Note\n        if (a.base =='E' || a.base == 'B')  {\n            if (preferFlats) {\n                return {base:getNextBase(getNextBase(a.base)), modifier: -1};\n            } else {\n                return  {base: getNextBase(a.base), modifier: 1};\n            }\n        }\n        return {base: getNextBase(a.base), modifier:0};\n    }\n    if (a.base =='E' || a.base == 'B')  {\n        return {base: getNextBase(a.base), modifier: 0};\n    }\n    if (preferFlats) {\n        return {base: getNextBase(a.base), modifier: -1}\n    } else {\n        return {base: a.base, modifier: 1};\n    }\n}\n\nexport function getPrevSemitone(a : Note, preferFlats: boolean): Note {\n    if (a.modifier == 1) {\n        return {base: a.base, modifier:0};\n    }\n    if (a.modifier == -1) {\n        // Some notes do not have independent flats == Next Note\n        if (a.base =='F' || a.base == 'C')  {\n            if (preferFlats) {\n                return {base:getPrevBase(a.base), modifier: -1};\n            } else {\n                return  {base: getPrevBase(a.base), modifier: 0};\n            }\n        }\n        return {base: getPrevBase(a.base), modifier:0};\n    }\n    \n    if (a.base =='F' || a.base == 'C')  {\n        return {base: getPrevBase(a.base), modifier: 0};\n    }\n    if (preferFlats) {\n        return {base: a.base, modifier: -1}\n    } else {\n        return {base: getPrevBase(a.base), modifier: 1};\n    }\n}\n\nfunction getNextBase(a:BaseNote): BaseNote {\n    if (a == 'G') {\n        return 'A';\n    }\n    return String.fromCharCode(a.charCodeAt(0) + 1) as BaseNote;\n}\n\nfunction getPrevBase(a:BaseNote): BaseNote {\n    if (a == 'A') {\n        return 'G';\n    }\n    return String.fromCharCode(a.charCodeAt(0) - 1) as BaseNote;\n}\n\nexport function toStringFromNote(a: Note): string {\n    return a.base + sharpOrFlat(a);\n}\n\nexport function toStringFromChord(a:Chord): string {\n    let base = toStringFromNote(a.tonic) + toStringFromChordType(a.type);\n    for(let addOn of a.addOns) {\n        base = base + toStringFromAddOn(addOn);\n    }\n    return base;\n}\n\nexport function toStringFromChordType(a:ChordType): string {\n    switch (a) {\n        case 'MAJOR':\n            return \"\";\n        case 'MINOR':\n            return \"-\";\n        case \"DIMINISHED\":\n            return \"dim\";\n    }\n}\n\nexport function toStringFromAddOn(a: AddOn): string {\n    if (a.index == 7) {\n        const base = \"7\";\n        if (a.modifier == 0) {return \"maj\"+ base;}\n        if (a.modifier == -1) {return base;}\n        return \"8\";\n    } else {\n        const base = a.index>5? a.index.toString() : (a.index+8).toString();\n        if (base.length>1) {\n            if (a.modifier == 0) { return '(' + base + \")\";}\n            if (a.modifier == -1) {return '(' +\"b\" + base + \")\";}\n            return '(' +\"#\"+base + \")\";\n        }\n        if (a.modifier == 0) { return base;}\n        if (a.modifier == -1) {return \"b\" + base;}\n        return \"#\"+base;\n    }\n}\n\nexport function sharpOrFlat(note: Note): string {\n    if (note.modifier == 0) { return \"\";}\n    if (note.modifier == 1) {\n        return \"\\u266F\";\n    }\n    if (note.modifier == -1) {\n    return (\"\\u266D\");\n    }\n    return \"\";\n}\n\nexport function fromStringToNote(a:string): Note {\n    console.log (\"NoteParse:\"+ a + \"\\n\");\n    if (a.length > 2) {\n        throw \"Invalid Note\";\n    }\n    const base = String.fromCharCode(a.charCodeAt(0)) as BaseNote;\n    if (![\"A\", \"B\", 'C', 'D', 'E', 'F', 'G'].includes(base)) {\n        console.log(\"Wrong Base:\" + base);\n        throw \"Invalid Note\";\n    }\n    if (a.length == 1) {\n        return {\n            base: base,\n            modifier: 0,\n        }\n    }\n    const modifier = (a.charAt(1)=== '#'|| a.charAt(1)==\"\\u266F\") ? 1 : ( (a.charAt(1) === 'b' || a.charAt(1) == \"\\u266D\")? -1:0);\n    if (modifier == 0 && a.length> 1) {\n        throw \"Invalid note\";\n    }\n    return {\n        base: base,\n        modifier: modifier,\n    }\n}\n\nconst chordsTypes = {\"dim\": \"DIMINISHED\", \"h\": \"DIMINISHED\", \"\\u0394\":\"DIMINISHED\", \"min\": \"MINOR\", \"-\": \"MINOR\", \"minor\": \"MINOR\", \"M\": \"MAJOR\"};\nconst addOnRegex =  /^(sus|maj7|\\^7|add\\d+|(#|\\u266F|\\u266D|b)?\\d|\\((#|\\u266F|\\u266D|b)?\\d+\\))/gm;\nconst noteRegex = \"^(A|B|C|D|E|F|G)(#|\\u266F|\\u266D|b)?\"\n\nexport function fromStringToChord(a:string): Chord {\n    const note = a.match(noteRegex);\n    if (note == null || note.length == 0) {\n        console.log(a);\n        throw \"Invalid Chord\"\n    } \n    const tonic = fromStringToNote(note[0]);\n    let chord = a.slice(note[0].length);\n    console.log(\"Note Excluded:\" + chord);\n    let type = \"MAJOR\";\n    let foundkey = \"\";\n    for (var key in chordsTypes) {\n        if (chordsTypes.hasOwnProperty(key)) {\n            if (chord.startsWith(key)) {\n                console.log(\"starts with \"+key);\n                type = chordsTypes[key] as ChordType;\n                foundkey = key;\n            }\n    }\n    }\n    chord = chord.slice(foundkey.length);\n    let addOns = [];\n    while (chord.length > 0) {\n        let matches = chord.match(addOnRegex);\n        console.log(\"Match:\" + JSON.stringify(matches) + \"\\n\");\n        if (matches != null) {\n            const match = matches[0];\n            if (match.startsWith(\"(\")) {\n                addOns.push(fromStringToAddOn(match.slice(1,match.length-1)));\n            } else {\n                addOns.push(fromStringToAddOn(match));\n            }\n            chord = chord.slice(match.length);\n        } else {\n            throw \"Invalid Chord\";\n        }\n    }\n    return {tonic: tonic, type: type as ChordType, addOns: addOns}\n}\n\nfunction fromStringToAddOn(a:string): AddOn {\n    if (a.length <1) {\n        throw \"Invalid\";\n    }\n    if (a.startsWith(\"maj\")) {\n        return {index: 7, modifier: 0};\n    }\n    if (a.startsWith(\"sus\")) {\n        return {index: 4, modifier: 0};\n    }\n    if (a.startsWith('7')) {\n        return {index: 7, modifier: -1};\n    }\n    if (a.startsWith('^')) {\n        return {index: 7, modifier: 0};\n    }\n    let index = 1;\n    let modifier = 0;\n    if (a.charAt(0)=== '#'|| a.charAt(0)==\"\\u266F\" || a.charAt(0) === 'b' || a.charAt(0) == \"\\u266D\") {\n        index = parseInt(a.slice(1));\n        modifier = (a.charAt(0)=== '#'|| a.charAt(0)==\"\\u266F\") ? 1 : -1;\n    }if (a.startsWith(\"add\")) {\n        index = parseInt(a.slice(3));\n        modifier = 0;\n    } else {\n        index = parseInt(a);\n        modifier = 0;\n    }\n    if (index == 0 ||index == 1 || index == 8 || index == null ) {\n        throw \"invalid\";\n    }\n    return {\n        index: index , \n        modifier: modifier,};\n}\n\nexport function getChordNotes(c: Chord): Array<Note> {\n\n    const majorScale = getScale(c.tonic, \"MAJOR\");\n    var scale = [];\n    switch (c.type) {\n        case \"DIMINISHED\":\n            scale = getScale(c.tonic, \"DIMINISHED\");\n            break;\n        case \"MAJOR\":\n            scale = majorScale;\n            break;\n        case \"MINOR\":\n            scale = getScale(c.tonic, \"NATURAL\");\n            break;\n    }\n    var notes = [scale[0], scale[2], scale[4]];\n    for (var addOn of c.addOns) {\n        const inNoteScale = addOn.index < majorScale.length ? addOn.index -1 : addOn.index % majorScale.length;\n        if (addOn.modifier ==0) {\n            notes.push(majorScale[inNoteScale]);\n        } else {\n            if (addOn.modifier == -1) {\n                notes.push(getPrevSemitone(majorScale[inNoteScale], true));\n            } else {\n                notes.push(getNextSemitone(majorScale[inNoteScale], false));\n            }\n        }\n    }\n    return notes;\n}","import {\n  Chord as ChordType,\n  fromStringToChord,\n  toStringFromChord,\n  getNextSemitone,\n  getPrevSemitone\n} from \"./utils\"\nimport React from \"react\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useState } from \"react\"\n\ninterface ChordProps {\n  chord: ChordType\n  setChord?: (a: ChordType) => void\n}\n\nfunction Chord(props: ChordProps): JSX.Element {\n  if (props.setChord == null) {\n    return (\n      <h2 className=\"d-flex bd-highlight px-2\">\n        {toStringFromChord(props.chord)}\n      </h2>\n    )\n  } else {\n    const [isValid, setIsValid] = useState<boolean>(true)\n    const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n      try {\n        props.setChord && props.setChord(fromStringToChord(event.target.value))\n        setIsValid(true)\n      } catch (errror) {\n        setIsValid(false)\n      }\n    }\n    return (\n      <div className=\"buttons d-flex flex-row mb-3 ml-3\">\n\n          <input\n            data-bs-theme=\"dark\"\n            type=\"text\"\n            className={\n              isValid ? \"mr-21 lcars-form-control lcars-lcars-is-valid\" : \"mr-21 lcars-form-control lcars-is-invalid\"\n            }\n            placeholder={toStringFromChord(props.chord)}\n            aria-label=\"Note\"\n            aria-describedby=\"basic-addon1\"\n            onChange={changeValue}\n          />\n        <button \n        className=\"orange\"\n          disabled={!isValid}\n          onClick={() => props.setChord!({ tonic: getPrevSemitone(props.chord.tonic, true), type: props.chord.type, addOns: props.chord.addOns })}\n        >\n          Transpose down\n        </button>\n        <button\n        className=\"orange\"\n          disabled={!isValid}\n          onClick={() => props.setChord!({ tonic: getNextSemitone(props.chord.tonic, false), type: props.chord.type, addOns: props.chord.addOns })}\n        >\n          Transpose up\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Chord\n","import React from \"react\";\nimport {\n  Note as NoteType,\n  Chord as ChordType,\n  getChordNotes,\n  ChordSequence as ChordSequenceType,\n  fromStringToChord,\n  Bar,\n  getNextSemitone,\n  getPrevSemitone,\n  fromStringToNote,\n  toStringFromNote,\n} from \"../components/utils\";\nimport { useState } from \"react\";\nimport Scale from \"../components/scale\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Chord from \"../components/chord\";\nimport { set } from \"lodash\";\n\nconst iRealReader = require(\"ireal-reader\");\n\nexport default function ChordPage(): JSX.Element {\n  const [topChord, setTopChord] = useState<ChordType>({\n    tonic: { base: \"C\", modifier: 0 },\n    type: \"MAJOR\",\n    addOns: [],\n  });\n\n  return (\n    <Layout currentPage=\"Music\" currentSubPage=\"Chords\">\n      <SEO\n        title=\"Chords\"\n        description={\n          \"Given chord find all the notes you can play in jazz improv.\"\n        }\n        keywords={[\n          \"music\",\n          \"theory\",\n          \"chords\",\n          \"jazz\",\n          \"generate\",\n          \"notes\",\n          \"improv\",\n          \"jazz improvisation chord generation\",\n        ]}\n      />\n      <div>\n        <h2>Main Chord</h2>\n        <p>\n          <Chord chord={topChord} setChord={setTopChord} />\n        </p>\n      </div>\n      <div>\n        <h2>Available Notes:</h2>\n        <p>\n          {\" \"}\n          <div className=\"lcars-card\">\n            <div className=\"card-body\">\n              <Scale notes={getChordNotes(topChord)} />\n            </div>\n          </div>\n        </p>\n      </div>\n      <div>\n        <h2>Full Song</h2>\n        <p>\n          <ChordSequence />\n        </p>\n      </div>\n    </Layout>\n  );\n}\n\nfunction ChordSequence(): JSX.Element {\n  const [url, setUrl] = useState<string>(\"\");\n  const [song, setSong] = useState<ChordSequenceType | undefined>(undefined);\n  const [title, setTitle] = useState<string>(\"\");\n  const [key, setKey] = useState<NoteType | undefined>(undefined);\n\n  const getSong = () => {\n    console.log(\"click\");\n    const parseResult = iRealReader(url);\n    const songResult = parseResult.songs[0];\n    const bars = songResult.music.measures as Array<Array<string>>;\n    setKey(fromStringToNote(songResult.key));\n    setSong({\n      bars: bars.map((bar) => {\n        return {\n          chords: bar.map(\n            (chordString) => fromStringToChord(chordString) ?? null\n          ),\n        };\n      }),\n    });\n    setTitle(songResult.title);\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex flex-row\">\n        <div className=\"align-self-center mr-5\">iReal URL:{\"  \"}</div>\n\n        <input\n          type=\"text\"\n          className=\"lcars-form-control lcars-big-input\"\n          placeholder={url ?? \"\"}\n          aria-label=\"Note\"\n          aria-describedby=\"basic-addon1\"\n          onChange={(e) => setUrl(e.target.value)}\n        />\n        <button disabled={url === null} onClick={getSong}>\n          Process\n        </button>\n      </div>\n      {key && (\n        <div className=\"buttons d-flex flex-row\">\n          <h2 className=\"align-self-center mr-5\">\n            {title ?? \"Unknown\"}\n            {\" in the key of \"}\n            {toStringFromNote(key)}\n          </h2>\n          <button\n            className=\"orange\"\n            disabled={!song || !key}\n            onClick={() => {\n              setSong({\n                bars: song!.bars.map((bar) => {\n                  return {\n                    chords: bar!.chords.map((c) => {\n                      return c ? transposeChordDown(c) : c;\n                    }),\n                  };\n                }),\n              });\n              setKey(getPrevSemitone(key!, true));\n            }}\n          >\n            Transpose down\n          </button>\n          <button\n            className=\"orange\"\n            disabled={!song || !key}\n            onClick={() => {\n              setSong({\n                bars: song!.bars.map((bar) => {\n                  return {\n                    chords: bar!.chords.map((c) => {\n                      return c ? transposeChordUp(c) : c;\n                    }),\n                  };\n                }),\n              });\n              setKey(getNextSemitone(key!, true));\n            }}\n          >\n            Transpose up\n          </button>\n        </div>\n      )}\n\n      {song && (\n        <>\n          <h2>Use the following Notes in the song:</h2> <Song data={song} />\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction jiggleMyBars(arr: Array<Bar>): Array<Array<Bar>> {\n  const res = [];\n  for (let i = 0; i < arr.length; i += 4) {\n    const chunk = arr.slice(i, i + 4);\n    res.push(chunk);\n  }\n  return res;\n}\n\nfunction Song({ data }: { data: ChordSequenceType }): JSX.Element {\n  if (data === null) {\n    return <div />;\n  }\n\n  return (\n    <div className=\"flex-wrap d-flex flex-row\">\n      {data.bars.map((a) => {\n        return (\n          <div className=\"d-flex flex-row flex-fill\">\n            {a.chords.map((c) => {\n              return (\n                <div>\n                  {c === undefined ? (\n                    <div />\n                  ) : (\n                    <Scale notes={getChordNotes(c)} />\n                  )}\n                </div>\n              );\n            })}\n            <div>{\"|\"}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction transposeChordDown(chord: ChordType): ChordType {\n  return {\n    tonic: getPrevSemitone(chord.tonic, true),\n    type: chord.type,\n    addOns: chord.addOns,\n  };\n}\n\nfunction transposeChordUp(chord: ChordType): ChordType {\n  return {\n    tonic: getNextSemitone(chord.tonic, false),\n    type: chord.type,\n    addOns: chord.addOns,\n  };\n}\n"],"names":["measures","startRepeatLocation","lastChord","endRepeatLocation","timeSignature","thirdEndingImminent","fineLocation","dcAlFineImminent","dcAlCodaImminent","dsAlCodaImminent","codaLocation","segnoLocation","rules","token","description","operation","match","toLowerCase","length","push","createNewMeasure","repeatEverythingToEndRepeatLocation","repeatRemainingEndings","parseInt","chord","startsWith","replace","split","slice","parse","inputString","i","rule","substring","trim","RegExp","index","removeEmptyMeasures","filter","x","module","exports","raw","protocolRegex","musicPrefix","unscramble","parser","parseMusic","data","parts","ireal","percentEncoded","exec","decodeURIComponent","name","pop","undefined","songs","map","title","composer","style","key","transpose","music","compStyle","bpm","repeats","makeSong","obfusc50","s","newString","join","p","r","props","setNote","___EmotionJSX","React","toStringFromNote","note","isValid","setIsValid","useState","changeValue","event","fromStringToNote","target","value","errror","type","className","placeholder","onChange","Scale","notes","Note","majorScale","harmonicScale","naturalScale","chromaticScale","diminishedScale","alteredScale","getScale","root","scale","order","preferFlats","major","getRelativeMajor","modifier","base","majorH","next","times","getNextSemitone","a","getRelativeMinor","getPrevSemitone","getNextBase","getPrevBase","String","fromCharCode","charCodeAt","sharpOrFlat","toStringFromChord","tonic","toStringFromChordType","addOn","addOns","toStringFromAddOn","toString","console","log","includes","charAt","chordsTypes","addOnRegex","noteRegex","fromStringToChord","foundkey","hasOwnProperty","matches","JSON","stringify","fromStringToAddOn","getChordNotes","c","inNoteScale","setChord","disabled","onClick","iRealReader","require","ChordPage","topChord","setTopChord","Layout","currentPage","currentSubPage","SEO","keywords","Chord","ChordSequence","url","setUrl","song","setSong","setTitle","setKey","e","getSong","songResult","bars","bar","chords","chordString","_fromStringToChord","transposeChordDown","transposeChordUp","Song","_ref"],"sourceRoot":""}