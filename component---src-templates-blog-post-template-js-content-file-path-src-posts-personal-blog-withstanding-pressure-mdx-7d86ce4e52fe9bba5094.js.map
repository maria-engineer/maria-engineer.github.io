{"version":3,"file":"component---src-templates-blog-post-template-js-content-file-path-src-posts-personal-blog-withstanding-pressure-mdx-7d86ce4e52fe9bba5094.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/posts/personal/blog_withstanding_pressure.mdx","webpack://maria-dot-engineer/./src/templates/blogPostTemplate.js","webpack://maria-dot-engineer/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"2024 marks the beginning of my villain era. Which among recovering people pleasers like myself, just means it's a time of enforcing boundaries. And doing so while not succumbing to debilitating amounts of guilt. It may sound basic, but it is certainly easier said than done.\"), \"\\n\", React.createElement(_components.p, null, \"Just the other day I was in a situation where I felt pressured to accept a surprising change to an arrangement that would have been quite an inconvenience, and would mean sacrificing 2 extra hours of my time. To be honest I almost caved in, but I reminded myself this was 2024, and this was my villain era. So I am proud about how I handled it.\"), \"\\n\", React.createElement(_components.p, null, \"It was a training that I signed up for, and the tutor called me up letting me know that the training was not in fact in London as it was advertised on the website. She further tried to argue that getting there wasn't that great of an inconvenience as she would have to do it when traveling to London.\"), \"\\n\", React.createElement(_components.h2, null, \"Lesson #1: If you're feeling anxious, delay\"), \"\\n\", React.createElement(_components.p, null, \"I started to feel myself getting anxious. The tutor clearly didn't want to come to London, but I didn't really want to sign up for the extra travel. The people pleaser in me was screaming \\\"Just agree to it, it's the only way it's going to happen\\\", after all, I signed up for the training, so I wanted to do it. At times like these I know I can't give a definitive no. I can negotiate and try and find a middle ground with the other person, but if they are not receptive, or they try to apply pressure, I know from experience I'd fold like a poorly built house of cards. So the only solution is delay. While I cannot say no in those situations, I do not have to say yes.\"), \"\\n\", React.createElement(_components.p, null, \"What is the delay for? Grounding myself. Silence, or extracting myself from the pressure takes my brain, at least partially, out of the survival response, in my case fawn. That way I can think rationally about the decision and realise what I want, and not what the others want me to do. As a people pleaser I have become quite adept at identifying what others want from me, but not what I want for myself. The delay will help realise what are the actual feelings around the situation, what makes sense, what doesn't and if there are\"), \"\\n\", React.createElement(_components.p, null, \"But what if I can't delay? Well, you always should be able to. In a social engineering training I did a few years ago, I learned about common tactics scammers use to catch out their victims. Fake urgency is one of the very effective ways to manipulate someone, it's commonly called Time Pressure Manipulation. What they do it create this narrative that something needs to happen very quickly otherwise you will miss your chance. Sometimes it's obvious, sometimes it's more subtle, but ultimately they don't want you to have the time to rationally think about your decision. Any reasonable person would however have no reason to push back on asking for a delay. This has changed the way in which I approach decisions. Basically the rule of thumb I learned from this white hat hacker doing the training was: Regardless of the decision, ask for some time to think about it. If they deny you this, they are trying to manipulate you. Nothing is ever so urgent that it needs an immediate response right there and then. If you cannot delay, the answer should be no, and rest easy in the knowledge that they've made that decision for you in your best interest. Am I saying that this is a scam? No. But if you can't delay, you are definitely being pressured into something you may not want.\"), \"\\n\", React.createElement(_components.h2, null, \"Lesson #2: Analyse the situation independently and not by comparison\"), \"\\n\", React.createElement(_components.p, null, \"I will use an allegory to explain this. Imagine you are at a restaurant, and you order the beef steak. The waiter comes back with a lamb steak saying that they were out of beef and a lamb steak is a close enough equivalent. Now the change seems pretty minor, so we often analyse it by comparison to the original order. It does not seem like a big difference. So you may agree, so as not to be a bother. So as not to be disrespectful to the chef who cooked it, or wasteful with the food, or maybe even inconvenience the waiter. But you wanted the beef steak, that you ordered. I, personally, don't like lamb steaks, and I prefer my lamb slow cooked. And I think I would have agreed usually. But not in my villain era. In my villain era, I am asking myself would I have ordered the lamb steak to begin with? If the answer is no, I will refuse the steak.\"), \"\\n\", React.createElement(_components.p, null, \"In compliance research getting you to say yes to these changes is called a low-ball technique. Where you agree to a request, thus become committed to it, then changes are made. Within certain thresholds the change is seen as the same request, and as we already agreed to the request we are very likely to say yes. Maybe to a 5% increase in price, or to spending an extra 2 hours commuting to the new location. If we pause like above, we give ourselves the chance to ask ourselves: would we have accepted the request/offer if it had been the one proposed to us in the first place? And often we may find the answer is no. Sure, if you actually like lamb steak, then say yes, by all means. But are you accepting something you never would have agreed to just because you agreed to the original thing?\"), \"\\n\", React.createElement(_components.h2, null, \"Lesson #3: Finding a way out of the guilt is sometimes the harder part\"), \"\\n\", React.createElement(_components.p, null, \"While I knew I did the right thing, I couldn't help feeling guilty. It was a response trained into me for the entirety of my life, how could I not? So while my logical brain was telling me this was a perfectly reasonable thing to want/expect/ask for, my feelings were telling me I was being difficult.\"), \"\\n\", React.createElement(_components.p, null, \"I think this is why I came up with the steak analogy. It is a more tangible example that I could use, that ultimately was a similar situation. Ultimately the lamb steak was not what I ordered nor what I would have ordered given the chance. As such I would have every right to send it back and not pay for it, instead of forcing myself to eat it. As someone who was forced to eat a lot of foods they didn't like growing up it is something else I also struggled with: not eating something I didn't like just because of situational pressure. So to me these two examples were ultimately equivalent. To the point where I am now making \\\"Send back the lamb steak.\\\" one of my new villain era mottos.\"), \"\\n\", React.createElement(_components.h2, null, \"Commitment to my villain era\"), \"\\n\", React.createElement(_components.p, null, \"\\\"Villain era\\\" may sound silly, but it represents claiming back my power and ability to stay true to myself. It doesn't mean being an asshole, I can and will still be kind when rejecting the lamb steak. I will say thank you for the effort, but reject the offer, because accepting it would be unkind to myself. And I need these mantras and question checklists for now to do it. Will there be times when I will fail, even with all these checklists? Absolutely! But each small act of self-advocacy will make the next one easier, until hopefully, one day it will be second nature.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariamateescu/maria-engineer.github.io/src/posts/personal/blog_withstanding_pressure.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport styled from \"@emotion/styled\";\nconst Title = (styled.h1)`\n  font-size: 3rem;\n  @media (max-width: 420px) {\n    min-font-size: 24px;\n  }\n  text-align: right important!;\n`;\nconst Post = (styled.div)`\n  padding: 10px 60px 10px 60px;\n  @media (max-width: 420px) {\n    padding: 10px 10px 10px 10px;\n  }\n  font-family: source-serif-pro, Georgia, Cambria, \"Helvetica Neue\",\n    \"Arial Narrow\", serif;\n  text-rendering: optimizelegibility;\n  font-weight: 400;\n`;\nfunction Template({data, children}) {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  if (frontmatter.category === \"food\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Food\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title,\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)));\n  }\n  if (frontmatter.category === \"theatre\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Theatre Reviews\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title + \" - Review\",\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"footer\", {\n      className: \"footer go-center\"\n    }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(\"div\", {\n      className: \"lcars-bar-slice-bottom\"\n    })));\n  }\n  return React.createElement(Layout, {\n    currentPage: \"Maria Mateescu\",\n    currentSubPage: frontmatter.category === \"personal\" ? \"Personal Log\" : \"Engineering Log\"\n  }, React.createElement(SEO, {\n    title: frontmatter.title,\n    keywords: frontmatter.keywords,\n    description: frontmatter.description\n  }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"footer\", {\n    className: \"footer go-center\"\n  }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(\"div\", {\n    className: \"lcars-bar-slice-bottom\"\n  })));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        short\n        category\n        description\n        keywords\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","_provideComponents","components","React","wrapper","MDXLayout","Title","_styled","target","name","styles","Post","Template","_ref","data","children","mdx","frontmatter","category","Layout","currentPage","currentSubPage","SEO","title","keywords","description","MDXProvider","className","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}