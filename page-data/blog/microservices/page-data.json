{"componentChunkName":"component---src-templates-blog-post-template-js-content-file-path-src-posts-engineering-blog-microservices-mdx","path":"/blog/microservices/","result":{"data":{"mdx":{"frontmatter":{"date":"October 08, 2023","slug":"/blog/microservices/","title":"Macro-ifying Microservices: A way to think about microservices","short":"Microservices","category":"engineer","description":"The microservice model has blown up over time. In itself the architecture model is great, it offers easier maintenance and adaptability, at the same time, overdone they can generate a lot of overhead to the engineers. This is an attempt to talk about how I think about microservices, and how that helps me make the right decisions when designing a system.","keywords":["Software Engineer","macroservices","microservices","monoservice","engineering","software engineering","software architecture","designing software","conceptualising software","rules of thumb","architecture","services","software","design"]}}},"pageContext":{"slug":"/blog/microservices/","frontmatter":{"slug":"/blog/microservices/","short":"Microservices","date":"2023-10-08","title":"Macro-ifying Microservices: A way to think about microservices","category":"engineer","subcategory":"opinion","keywords":["Software Engineer","macroservices","microservices","monoservice","engineering","software engineering","software architecture","designing software","conceptualising software","rules of thumb","architecture","services","software","design"],"description":"The microservice model has blown up over time. In itself the architecture model is great, it offers easier maintenance and adaptability, at the same time, overdone they can generate a lot of overhead to the engineers. This is an attempt to talk about how I think about microservices, and how that helps me make the right decisions when designing a system."}}},"staticQueryHashes":["3649515864","63159454"],"slicesMap":{}}