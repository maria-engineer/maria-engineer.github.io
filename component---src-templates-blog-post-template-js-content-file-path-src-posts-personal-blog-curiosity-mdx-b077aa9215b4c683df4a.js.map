{"version":3,"file":"component---src-templates-blog-post-template-js-content-file-path-src-posts-personal-blog-curiosity-mdx-b077aa9215b4c683df4a.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/posts/personal/blog_curiosity.mdx","webpack://maria-dot-engineer/./src/templates/blogPostTemplate.js","webpack://maria-dot-engineer/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"When I was a junior engineer a lot of the advice on how to have better interactions with people was \\\"Lead with curiosity.\\\" which is about as useful as being told to relax when feeling stressed. It wasn't because I didn't want to do it, but I didn't know how, even worse, I thought I was doing it. In fact, I thought I approached every single conversation with curiosity, the curiosity to figure out what's wrong and how to fix it. The curiosity of wanting to just understand, and learn... To get to a state of knowing.\"), \"\\n\", React.createElement(_components.p, null, \"Like the advice of \\\"show, don't tell\\\" which seems to always apply, so does \\\"approach with curiosity\\\" pop up everywhere. Yet hardly anyone knows what that means or how to do it. Just that they don't feel like you are doing it. Which ultimately in the battle of intent and impact is all that matters. As someone who thought I was leading with curiosity (as well as showing not telling), it took me years to be able to tell what I was doing wrong.\"), \"\\n\", React.createElement(_components.h2, null, \"Empathy, compassion and relating to people\"), \"\\n\", React.createElement(_components.p, null, \"Ultimately our curiosity stems from a desire to understand. Understanding someone can lead to empathy and compassion for that person, and ultimately having empathy is what enables us to resolve our conflicts safely. Cue the shittiest piece of advice on how to enable that empathy: \\\"think of all the things you have in common\\\". This to me ranks in the same category as \\\"treat people how you want to be treated\\\" which as people with diverse experiences, personalities and backgrounds, is just bad advice. \\\"Treat people how \", React.createElement(_components.strong, null, \"they\"), \" want to be treated\\\".\"), \"\\n\", React.createElement(_components.p, null, \"It wasn't until my coaching course that I figured out what exactly I was doing wrong when leading with curiosity. One of the core principles of coaching is to sit with the not-knowing. In other words, accept that you won't know the other person. Given years of being told the way to empathise with people is to think of all the experiences you have in common, my brain was wired to do so. You're a woman, I'm a woman, you took a long break, I took a long break, I know exactly how you feel! Only... I don't. The moment my brain goes \\\"I know exactly how you feel\\\", that curiosity is gone.\"), \"\\n\", React.createElement(_components.p, null, \"So how do I keep that curiosity? Focus on the differences instead. You're a woman, I'm a woman, but you have a child and I don't. Pick the smallest difference, and roll with it. Because we are all different, we have gone through different life experiences, and made different decisions based on different values along the way. Sure, we may be similar, and it is lovely to recognise the same struggles, but we are not the same people. Curiosity creates a space where people can be fully themselves, embracing their unique experiences.\"), \"\\n\", React.createElement(_components.h2, null, \"What are the signs curiosity is gone\"), \"\\n\", React.createElement(_components.p, null, \"When curiosity fades, assumptions take over. You might think, “Why is it taking them so long?” or “Why can’t they just...?” Even with good intentions, these thoughts close off curiosity and make the conversation feel less safe. Astute individuals often sense this shift, which erodes trust.\"), \"\\n\", React.createElement(_components.h2, null, \"So we never draw any conclusions?\"), \"\\n\", React.createElement(_components.p, null, \"Not really, but keeping constant awareness that we have differences, and we can never know the full extent of someone's lived experiences, even the closest people to us, allows us to hold onto our conclusions lightly. \\\"Based on my understanding of the situation\\\" is such a powerful phrase, because it invites the understanding to be wrong. Focusing on the differences allows that to be more than just a platitude, and allows us to keep in mind how limited our view may be and how irrelevant our observations may be. Yes sometimes we will hit the nail on the head with our observation, and that doesn't prevent us from mentioning it, but then it comes from a place of curiosity, so we leave space for us to be wrong and right.\"), \"\\n\", React.createElement(_components.p, null, \"Focusing on the differences allows us to go with the observation knowing full well it could be wrong. And yet, there is value in that information, bringing it up and discovering that. This takes us to a classic study in psychology, Wason's 2-4-6 Task, where participants would be presented with 3 numbers (2, 4, 6) and they are told to figure out the rule the sequence follows. The participants who were encouraged to test negative examples (sequences that may not fit their hypothesis) would figure out the rule much faster. Mostly because it's hard if not impossible to figure out a rule purely from \", React.createElement(_components.a, {\n    href: \"/blog/positive_examples/\"\n  }, \"positive examples\"), \". As humans we are susceptible to confirmation bias, which traps us into seeking only evidence that confirms a potentially flawed hypotheses. When we do that, we get more and more attached to our conclusion, lose curiosity, and ultimately stop listening.\"), \"\\n\", React.createElement(_components.p, null, \"So yes, conclusions may be rarer. We may have observations we may need to confirm with the other person. We may have more questions we might need to ask to get to a better understanding of the person, the problem, the situation. But we won't walk blindly from conclusion to conclusion, eroding trust along the way.\"), \"\\n\", React.createElement(_components.h2, null, \"Listening with curiosity\"), \"\\n\", React.createElement(_components.p, null, \"Our differences are what makes human interaction interesting and exciting. Focusing on all the ways we are different can enable us to look at other people with curiosity as another story we can learn about. The more open we are to differences, the more we can allow ourselves to learn, and that knowledge is invaluable in understanding and resolving problems.\"), \"\\n\", React.createElement(_components.p, null, \"Leading with curiosity, can lead us to ask questions that are completely wrong. However, because it comes from a desire to understand, curiosity, even being wrong can build connection instead of alienating our conversation partner. Because here, being wrong is a valuable way to learn, rather than forcing the person to conform to our different view of the world.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariamateescu/maria-engineer.github.io/src/posts/personal/blog_curiosity.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport styled from \"@emotion/styled\";\nconst Title = (styled.h1)`\n  font-size: 3rem;\n  @media (max-width: 420px) {\n    min-font-size: 24px;\n  }\n  text-align: right important!;\n`;\nconst Post = (styled.div)`\n  padding: 10px 60px 10px 60px;\n  @media (max-width: 420px) {\n    padding: 10px 10px 10px 10px;\n  }\n  font-family: source-serif-pro, Georgia, Cambria, \"Helvetica Neue\",\n    \"Arial Narrow\", serif;\n  text-rendering: optimizelegibility;\n  font-weight: 400;\n`;\nfunction Template({data, children}) {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  if (frontmatter.category === \"food\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Food\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title,\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)));\n  }\n  if (frontmatter.category === \"theatre\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Theatre Reviews\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title + \" - Review\",\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"footer\", {\n      className: \"footer go-center\"\n    }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(\"div\", {\n      className: \"lcars-bar-slice-bottom\"\n    })));\n  }\n  return React.createElement(Layout, {\n    currentPage: \"Maria Mateescu\",\n    currentSubPage: frontmatter.category === \"personal\" ? \"Personal Log\" : \"Engineering Log\"\n  }, React.createElement(SEO, {\n    title: frontmatter.title,\n    keywords: frontmatter.keywords,\n    description: frontmatter.description\n  }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"footer\", {\n    className: \"footer go-center\"\n  }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(\"div\", {\n    className: \"lcars-bar-slice-bottom\"\n  })));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        short\n        category\n        description\n        keywords\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","strong","a","_provideComponents","components","React","href","wrapper","MDXLayout","Title","_styled","target","name","styles","Post","Template","_ref","data","children","mdx","frontmatter","category","Layout","currentPage","currentSubPage","SEO","title","keywords","description","MDXProvider","className","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}