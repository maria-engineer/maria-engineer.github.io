{"version":3,"file":"component---src-templates-blog-post-template-js-content-file-path-src-posts-engineering-blog-onboarding-mdx-9f3f219bc3ced99abae8.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/posts/engineering/blog_onboarding.mdx","webpack://maria-dot-engineer/./src/templates/blogPostTemplate.js","webpack://maria-dot-engineer/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Footnote from \"../../components/footnote\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    em: \"em\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\",\n    h5: \"h5\",\n    h4: \"h4\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"First impressions matter, especially when someone joins your team. Your onboarding process will define their first impression, not just of you, but of how your team functions.\"), \"\\n\", React.createElement(_components.p, null, \"For better or for worse, new joiners will be the first people to notice all your dysfunctions. They come in with fresh eyes, and they are not calibrated to your normal. They evaluate the team as a whole at that point in time. Far too many times I have seen teams struggling, but being satisfied that “at least it’s not as bad as it used to be”. That doesn't mean things are actually working. They won't know why your team does things a certain way, and that may be a good time to re-evaluate that yourselves, instead of going \\\"well, we've always done it this way\\\".\"), \"\\n\", React.createElement(_components.h2, null, \"What is onboarding there for\"), \"\\n\", React.createElement(_components.p, null, \"Onboarding is there for when teams grow to make sure the new joiner is as effective as possible. However, team growth means additional people added to the team, which has the potential to destabilise a team. \", React.createElement(_components.a, {\n    href: \"https://www.thinkwithgoogle.com/intl/en-emea/future-of-marketing/management-and-culture/five-dynamics-effective-team/\"\n  }, \"Research\"), \" run by Google found that the biggest determinant of a team's success is the level of psychological safety there is in the team. And as much money as companies put into finding a different answer to what creates psychological safety, it still seems to be how long the team has been together (in the same formula)\", React.createElement(Footnote, {\n    presentation: \"0\"\n  }, \"There are a few studies \", React.createElement(_components.a, {\n    href: \"https://pmc.ncbi.nlm.nih.gov/articles/PMC9819141/\"\n  }, \"here\"), \" is one of them.\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"So if hiring people disrupts the most important factor to team efficiency, why do it? Well, regardless of how effective your team is, there are still only so many hours in a day, and as companies grow they need more people to handle the workload. Onboarding becomes essential to making sure the gains outweigh the cost to the team. And we do that by making sure we provide the new joiner with everything they need to thrive. Even experts who have all the ideal skills, have honed their skills outside of your team and company. Therefore, chances are they will be doing things differently. Take your time to onboard people.\"), \"\\n\", React.createElement(_components.h2, null, \"So how do we onboard?\"), \"\\n\", React.createElement(_components.p, null, \"One of the first things I ask in an interview with a future manager is: \\\"What is your onboarding plan?\\\". Now just because they have a plan, that doesn't mean they will follow it, but in general this is what I consider most important. To have tasks. Sure, documentation is important, and so are runbooks. But the only documentation that is updated frequently enough is documentation that is used, and documentation that is used, is used because oldies and newbies alike use it. Therefore, that you need to teach people is how to search\", React.createElement(Footnote, {\n    presentation: \"1\"\n  }, \"Coincidentally, I think Facebook/Meta is the company that did internal search the best from all the ones I have worked for. I think that's hilarious because Facebook's external search has always been atrocious. Funnily enough, Google's search is still the most respected out there, yet I found their internal search to be more than lacking.\"), \" for it, not expect them to read multiple tomes the size of the \", React.createElement(_components.em, null, \"Necronomicon\"), \" and memorise them. Get people to do things, people learn by doing, with help. This is why I believe onboarding tasks are the holy grail of successful onboardings.\"), \"\\n\", React.createElement(_components.h2, null, \"What good onboarding tasks look like\"), \"\\n\", React.createElement(_components.p, null, \"Onboarding tasks need to be clear. No ambiguity allowed, they are so precisely defined, that the new joiner will not have to wonder what one thing means or another, they won't deal with politics or with ever-changing PM requirements. It needs to be clear. And whomever is the point-of-contact for the task needs to know exactly how it should be done. Even better, they have already done it, just never published it.\"), \"\\n\", React.createElement(_components.h3, null, \"Trademarks of a good onboarding task\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"They have zero urgency\"), \": You don’t know when you’ll have someone new joining the team.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"They are prepared in advance\"), \": They are ready to go before someone has even been hired for the position.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"They are very well-defined\"), \": zero ambiguity\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"They assume the person reading them knows nothing\"), \": this will likely be the case; even when they know you won't be able to know what they know, or if they know it differently.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"A few examples of my favourite types of onboarding tasks from the Software Engineering world\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"Migrations\")), \"\\n\", React.createElement(_components.p, null, \"I think they make excellent onboarding tasks as they expose the new joiner to the structure and overall capabilities of the codebase. The migrations or restructurings should already be fairly well-defined, so they are not running in the dark.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Why it’s good\"), \": While they don’t need to think about functionality, as they are not (supposed to) be changing it, this means they mostly learn where things are. When you need to find something in the future, this is invaluable. Basically they teach people where to search.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"This task but different\")), \"\\n\", React.createElement(_components.p, null, \"If you ever get some tasks that are kind of repetitive in what needs to be done, but the differences are subtle enough that they can’t be automated... Jackpot! You have just hit a mine of onboarding tasks. Every repetition can be another task.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Why it’s good\"), \": you can give them a template. You’ve done it before, so you know how it can fail and how to guide them if things go wrong. They get to play with the technologies. And the best part, you already have a test plan that they can follow themselves.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"The everything tasks\")), \"\\n\", React.createElement(_components.p, null, \"For lack of a better name, there's occasionally some tasks that are incredibly simple, but they become a nightmare just because they touch so many systems. One such example is adding a field to a CRM form (or if you really want a challenge, deleting one). Simple, right? But you've got to update the database, ensure push safety, update the backend, update the front end... did I mention push safety?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Why it's good\"), \": Something like this is basically the task equivalent of an end-to-end test. It touches everything, and it does it functionally. While the migration task touches everything in breadth, this touches everything in depth. And in the process you are teaching the new joiner how everything is plugged together.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"That pet project you've been dying to do\")), \"\\n\", React.createElement(_components.p, null, \"You ever have something you think could have a potentially great impact, if only you had the time to do it? Something that's so dear to you, you go to work hoping the day will come when you will have a day with no workload, so you can finally do that project? Do you see it clearly in your mind? It's so clear, if only you had a few extra hours in a day... Yeah, that's the one. I'm sorry to tell you but... chances are it's an onboarding task/project. I know it's hard to part with it, it's your brain child... but give the new joiner a chance.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Why it's good\"), \": if you believe in it so hard, it means it will likely fill the new joiner with a great deal of satisfaction when they're done. The reason however you haven't done your project yet was because you couldn't justify doing it. Either because the chance of success were unknown, or it was hard to justify to the business. The new joiner has the advantage that noone expects them to be productive in the first few months, so give them a shot at your moonshots, they may surprise you.\"), \"\\n\", React.createElement(_components.p, null, \"I have been repeatedly told I had the best onboarding tasks back when I was at Facebook. And I still wear that as a badge of honour. I think I am prouder of that than I am of my proudest project.\"), \"\\n\", React.createElement(_components.h2, null, \"How not to do an onboarding experience\"), \"\\n\", React.createElement(_components.p, null, \"My onboarding at Reddit has probably hit every single what not to do in the list of what not to do when onboarding someone. I would say it was arguably worse than not having any onboarding at all. It was one helluva rocky start, that impacted the rest of my time at the company. Because while it was a bad first impression, I cannot say it wasn't an accurate one.\"), \"\\n\", React.createElement(_components.p, null, \"My first task was a migration. All, good, right? I have done plenty of migrations in my past, some pretty big ones at that, and having worked in the release engineering team I knew a thing or two about push safety. Safe to say I already knew all the best practices to make sure things are safe. So I went on cracking. It was a new programming language, so I was still learning new things. Overall a great task to ease myself in.\"), \"\\n\", React.createElement(_components.p, null, \"Of course, there's a \", React.createElement(_components.em, null, \"but\"), \" coming... But... After publishing my changes for review, things got fun. There was a massive message from the most senior person on the team saying how we don't want to do this unsafely, and talking about all the dangers of doing this wrong way and that he didn't think we should do it at all. It was harsh... but I soon realised it wasn't referring to any of my code. The second most senior engineer on the team\", React.createElement(Footnote, {\n    presentation: \"2\"\n  }, \"Really liked this guy from interviews, he was actually the person that informed my decision to accept the offer. Based on my impression of him, as well as how a friend talked about him. Unfortunately he \", React.createElement(_components.em, null, \"\\\"left\\\"\"), \" soon after I joined.\"), \", tried to defend me, which lead to a couple of days of back and forth between the two of them, on my pull request\", React.createElement(Footnote, {\n    presentation: \"3\"\n  }, \"While today I would like to imagine me watching munching on popcorn, it was more like a ping pong game that went \\\"Oh, so I am doing this\\\", and \\\"Oh, I'm not doing this\\\"... back and forth.\"), \". Eventually the decision was to abandon the changes. After a great deal of frustration, I decided to be an adult about it and message the most senior engineer with something along the lines of: \\\"I know we have decided not to go forward with the changes, however as this is my first task, I would appreciate it if you could give me some feedback on my code. You have expressed concerns about the safety of the migration, I worry that I have done something wrong. The purpose of this is for me to learn anyway, so I would appreciate it if you could point out what I did wrong, so I can learn from this exercise.\\\". Result: Radio silence.\"), \"\\n\", React.createElement(_components.h4, null, \"So, what went wrong?\"), \"\\n\", React.createElement(_components.p, null, \"On the surface this looked like a fantastic task. It was a migration, it was well-defined, or so I thought, and it was repetitive in that I could do it once to get approval on the method, and then repeat it multiple times getting exposure to even more of our systems.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"The task seemed detailed, but it did assume knowledge that I was not aware of to justify doing it.\"), \"\\n\", React.createElement(_components.li, null, \"The task was meant to take multiple weeks, so there wasn't another task ready for me.\"), \"\\n\", React.createElement(_components.li, null, \"The two most senior people on the team publicly showed a complete lack of misalignment in front of someone more junior and completely new. If you need to do it, do it privately, or not at all, \", React.createElement(_components.a, {\n    href: \"/blog/disambiguation/\"\n  }, \"senior engineers are supposed to \", React.createElement(_components.strong, null, \"reduce confusion\")), \", not cause it.\"), \"\\n\", React.createElement(_components.li, null, \"The most senior person did not see this task as a learning opportunity but a threat. (Even if I had done it wrong, this was an opportunity to show me what I had done wrong, I was open to it)\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"What makes the worst onboarding tasks then?\"), \"\\n\", React.createElement(_components.p, null, \"Ok, here's a list of my most hated onboarding tasks/projects.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"The spicy task\")), \"\\n\", React.createElement(_components.p, null, \"There is considerable conflict about whether the task should be done.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"The battle task\")), \"\\n\", React.createElement(_components.p, null, \"There is considerable conflict about how the task should be done.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"The not-my-problem task\")), \"\\n\", React.createElement(_components.p, null, \"There's this bug you couldn't figure out how to fix, let the newbie figure it out.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"The frog task\")), \"\\n\", React.createElement(_components.p, null, \"There's this task you really really really don't want to do, a newbie will do it.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"The vague task\")), \"\\n\", React.createElement(_components.p, null, \"I have no idea what this task is, but I know it's important, but not urgent. We'll figure it out when the newbie comes.\"), \"\\n\", React.createElement(_components.h5, null, React.createElement(_components.strong, null, \"The research paper task\")), \"\\n\", React.createElement(_components.p, null, \"There's this project that would require a lot of research, new grads still know how to do that, right?\"), \"\\n\", React.createElement(_components.h2, null, \"Frequently asked questions (or more accurately frequently made complaints)\"), \"\\n\", React.createElement(_components.h5, null, \"We don't need onboarding, we only hire the best people.\"), \"\\n\", React.createElement(_components.p, null, \"Some great advice I got from a very senior engineer was: regardless how senior you are, when you first join a new company just do what you are told for a couple of months. If you jump to try and help too early, you risk losing credibility. Basically what he was saying was -- take your time to learn the ways of the company, and their values. There will always be things that are a little different, and if you act as if they are not, it just breeds misunderstanding and conflict. Think of a doctor. If you walk in, and he prescribes you antidepressants before you get a chance to even describes any or all of your symptoms, how likely are you to trust their prescription? How likely is it to actually be correct?\"), \"\\n\", React.createElement(_components.h5, null, \"Oh, but I could finish all those in 2 hours, where they take days for each one.\"), \"\\n\", React.createElement(_components.p, null, \"Yeah sure, you're an awesome engineer, but that’s not the point. In fact, I firmly believe you should not make an onboarding task that would take you, a seasoned person on a team, more than 2 hours to do in a first place. And you should expect them to take much longer than you would.\"), \"\\n\", React.createElement(_components.h5, null, \"But it would take me 2 hours to do it and writing all the details for the new joiner would take me 30 minutes to an hour… that doesn’t sound like a good use of my time.\"), \"\\n\", React.createElement(_components.p, null, \"If that's your approach, I would hate to see your documentation. Onboarding someone new, when done well saves you hours of mistakes in the future, and gives you many hours of extra \", React.createElement(_components.em, null, \"capable\"), \" hands on deck for your future problems. I think losing a couple of hours is not exactly losing anything here…\"), \"\\n\", React.createElement(_components.h5, null, \"So... just put all the small important tasks in a bucket never to be done?\"), \"\\n\", React.createElement(_components.p, null, \"Well, talk with your manager about hiring expectations in the next year, assume someone may leave and there may be one headcount for them, and after that keep around enough tasks for that many people. Your team should have a bank of onboarding tasks ready most of the time.\"), \"\\n\", React.createElement(_components.h5, null, \"What if one of those tasks becomes urgent?\"), \"\\n\", React.createElement(_components.p, null, \"Then do it and replace it with another one.\"), \"\\n\", React.createElement(_components.h5, null, \"Can’t I just make a task whenever there’s a new joiner?\"), \"\\n\", React.createElement(_components.p, null, \"You could, but speaking from experience those are rarely any good. In that situation, you tend to make do with what you have on your plate, picking the best option. The best option is often not a good option.\"), \"\\n\", React.createElement(_components.h5, null, \"But if I already know how to do it, why don’t I just do it?\"), \"\\n\", React.createElement(_components.p, null, \"You can, I ain’t stopping you… I am sure it will feel great when you complete it. You, amazing engineer, you! Good job!\"), \"\\n\", React.createElement(_components.h2, null, \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"There is a cost to hiring, and there is a cost to onboarding people. But it is arguably the most important step in growing a company. You can hire good people, but if you never properly onboard them you will have a collection of independent contributors, not a team. You might as well hire freelancers. If they don't need the money, chances are they will be just as temporary.\"), \"\\n\", React.createElement(_components.p, null, \"Onboarding sets the tone to how the team operates and shares knowledge. There are advantages to having fresh eyes on a team's workings, if we are willing to listen. And putting the right things in place for them to understand why things work, will enable them to continue to make things work.\"), \"\\n\", React.createElement(_components.p, null, \"Have you ever had an onboarding experience, good or bad, that shaped your view of a company? Would you add anything to my lists?\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"0\"), \" There are a few studies \", React.createElement(_components.a, {\n    href: \"https://pmc.ncbi.nlm.nih.gov/articles/PMC9819141/\"\n  }, \"here\"), \"\\nis one of them.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"1\"), \" Coincidentally, I think Facebook/Meta is the company that did internal\\nsearch the best from all the ones I have worked for. I think that's hilarious because\\nFacebook's external search has always been atrocious. Funnily enough, Google's search\\nis still the most respected out there, yet I found their internal search to be more\\nthan lacking.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"2\"), \" Really liked this guy from interviews, he was actually the person that\\ninformed my decision to accept the offer. Based on my impression of him, as well\\nas how a friend talked about him. Unfortunately he \", React.createElement(_components.em, null, \"\\\"left\\\"\"), \" soon after I joined.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"sup\", null, \"3\"), \" While today I would like to imagine me watching munching on popcorn,\\nit was more like a ping pong game that went \\\"Oh, so I am doing this\\\", and \\\"Oh, I'm\\nnot doing this\\\"... back and forth.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariamateescu/maria-engineer.github.io/src/posts/engineering/blog_onboarding.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport styled from \"@emotion/styled\";\nconst Title = (styled.h1)`\n  font-size: 3rem;\n  @media (max-width: 420px) {\n    min-font-size: 24px;\n  }\n  font-family: \"Poppins\", \"Arial Narrow\", sans-serif;\n  text-rendering: optimizelegibility;\n  font-weight: 400;\n  text-align: left;\n  color: #38f;\n`;\nconst Post = (styled.div)`\n  padding: 10px 60px 10px 60px;\n  @media (max-width: 420px) {\n    padding: 10px 10px 10px 10px;\n  }\n  font-family: \"Poppins\", \"Arial Narrow\", sans-serif;\n  text-rendering: optimizelegibility;\n  font-weight: 200;\n  font-style: normal;\n`;\nconst Bar = (styled.div)`\n  margin: 5px auto 20px auto;\n  height: 10px;\n  background: #38f;\n  border-right: 18px solid #8bf;\n  border-left: 18px solid #8bf;\n  border-radius: 9px;\n  padding: 0 5px;\n  width: 60%;\n`;\nfunction Template({data, children}) {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  if (frontmatter.category === \"food\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Food\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title,\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)));\n  }\n  if (frontmatter.category === \"theatre\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Theatre Reviews\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title + \" - Review\",\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"div\", {\n      className: \"footer go-center\"\n    }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(Bar)));\n  }\n  return React.createElement(Layout, {\n    currentPage: \"Maria Mateescu\",\n    currentSubPage: frontmatter.category === \"personal\" ? \"Personal Log\" : \"Engineering Log\"\n  }, React.createElement(SEO, {\n    title: frontmatter.title,\n    keywords: frontmatter.keywords,\n    description: frontmatter.description\n  }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"div\", {\n    className: \"footer go-center\"\n  }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(Bar)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        short\n        category\n        description\n        keywords\n        prev\n        next\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","em","h3","ol","li","strong","h5","h4","hr","_provideComponents","components","React","href","Footnote","presentation","wrapper","MDXLayout","Title","_styled","target","name","styles","Post","Bar","Template","_ref","data","children","mdx","frontmatter","category","Layout","currentPage","currentSubPage","SEO","title","keywords","description","MDXProvider","className","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}