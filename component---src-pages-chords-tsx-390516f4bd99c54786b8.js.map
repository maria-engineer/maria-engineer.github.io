{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/note.tsx","webpack:///./src/components/utils.tsx","webpack:///./src/components/scale.tsx","webpack:///./src/components/chord.tsx","webpack:///./src/pages/chords.tsx","webpack:///./src/components/seo.js"],"names":["Header","siteTitle","style","background","marginBottom","className","width","to","color","textDecoration","defaultProps","Layout","children","data","useStaticQuery","site","siteMetadata","title","margin","maxWidth","padding","marginTop","Date","getFullYear","href","Note","props","setNote","toStringFromNote","note","useState","isValid","setIsValid","type","placeholder","aria-label","aria-describedby","onChange","event","fromStringToNote","target","value","errror","majorScale","harmonicScale","naturalScale","chromaticScale","diminishedScale","getScale","root","scale","order","preferFlats","major","getRelativeMajor","modifier","base","majorH","next","times","i","getNextSemitone","push","a","getRelativeMinor","getPrevSemitone","getNextBase","getPrevBase","String","fromCharCode","charCodeAt","sharpOrFlat","toStringFromChord","tonic","toStringFromChordType","addOns","toStringFromAddOn","index","toString","length","console","log","includes","charAt","chordsTypes","addOnRegex","fromStringToChord","match","chord","slice","foundkey","key","hasOwnProperty","startsWith","matches","JSON","stringify","fromStringToAddOn","parseInt","getChordNotes","c","notes","addOn","inNoteScale","Scale","map","Chord","setChord","ChordPage","topChord","setTopChord","SEO","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-chords-tsx-390516f4bd99c54786b8.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#002B49`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      className=\"d-flex justify-content-between\"\n      style={{\n        width:\"90%\",\n      }}\n    >\n      <h1 className=\"align-self-start pl-5\" >\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div className=\"d-flex justify-content-end flex-grow-1\" >\n      <p className=\"align-self-end px-2\" >\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {\"Home\"}\n        </Link>\n        </p>\n      <p className=\"align-self-end pl-2\" >\n        <Link\n          to=\"/chords/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {\"Chords\"}\n        </Link>\n      </p>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer style={{\n          marginTop: `2rem`\n        }}>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import {Note as NoteType, toStringFromNote, fromStringToNote} from './utils';\nimport React from 'react';\nimport {useState} from 'react';\n\nfunction Note(props: {note: NoteType, setNote: (((NoteType) => void) | null)}): JSX.Element {\n    if (props.setNote == null) {\n    return (\n        <h2 className=\"d-flex bd-highlight px-2\"> \n            {toStringFromNote(props.note)}\n        </h2>\n        );\n    } else {\n        const [isValid, setIsValid] = useState<boolean>(true);\n        const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n            try {\n                props.setNote(fromStringToNote(event.target.value));\n                setIsValid(true);\n            } catch (errror) {\n                setIsValid(false);\n            } \n        };\n        return (\n            <form>\n            <input \n                type=\"text\" \n                className={isValid? \"form-control is-valid\" :\"form-control is-invalid\"}\n                placeholder={toStringFromNote(props.note)} \n                aria-label=\"Note\" \n                aria-describedby=\"basic-addon1\" \n                onChange={changeValue}\n            /></form>);\n    }\n}\n\nexport default Note","import { number } from \"prop-types\";\nimport React from \"react\";\n\nexport type BaseNote = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\";\n\nexport type ScaleType = \"NATURAL\" | \"HARMONIC\" | \"MAJOR\" | \"CHROMATIC\" | \"DIMINISHED\";\n\nexport type Note = {\n base: BaseNote,\n modifier: number\n};\n\nexport type ChordType = \"MINOR\" | \"MAJOR\" | \"DIMINISHED\";\n\nexport type AddOn = {\n    index: number,\n    modifier: number,\n}\n\nexport type Chord = {\n    tonic: Note,\n    type: ChordType,\n    addOns: Array<AddOn>,\n}\n\nconst majorScale = [2,2,1,2,2,2,1];\nconst harmonicScale = [2,1,2,2,1,3,1];\nconst naturalScale = [2,1,2,2,1,2,2];\nconst chromaticScale = [1,1,1,1,1,1,1,1,1,1,1];\nconst diminishedScale = [2,1,2,1,2,1,2,1];\n\nexport function getScale (root: Note, type: ScaleType): Array<Note> {\n    const scale = [root];\n    let order = [0];\n    let preferFlats = false;\n    switch (type) {\n        case 'CHROMATIC':\n            order = chromaticScale;\n            break;\n        case 'NATURAL':\n            const major = getRelativeMajor(root);\n            preferFlats = major.modifier==-1 || (major.base == 'F' && major.modifier==0);\n            order = naturalScale;\n            break;\n        case 'HARMONIC':\n            const majorH = getRelativeMajor(root);\n            preferFlats = majorH.modifier==-1 || (majorH.base == 'F' && majorH.modifier==0);\n            order= harmonicScale;\n            break;\n        case 'MAJOR':\n            order = majorScale;\n            preferFlats = root.modifier==-1 || (root.base == 'F' && root.modifier==0);\n            break;\n        case 'DIMINISHED':\n            order = diminishedScale;\n    }\n    let next = root;\n    for (let times of order) {\n        for(let i=0; i< times; i++) {\n            next = getNextSemitone(next, preferFlats);\n        }\n        scale.push(next);\n    };\n    return scale;\n}\n\nexport function getRelativeMajor(a:Note): Note {\n    let root = a;\n    for (let i=0; i< 3; i++) {\n        root = getNextSemitone(root, true);\n    }\n    return root;\n}\n\nexport function getRelativeMinor(a:Note): Note {\n    let root = a;\n    for (let i=0; i< 3; i++) {\n        root = getPrevSemitone(root, true);\n    }\n    return root;\n}\n\nfunction getNextSemitone(a:Note, preferFlats: boolean): Note {\n    if (a.modifier == -1) {\n        return {base:a.base, modifier: 0};\n    }\n    if (a.modifier == 1) {\n        // Some notes do not have independent sharps == Next Note\n        if (a.base =='E' || a.base == 'B')  {\n            if (preferFlats) {\n                return {base:getNextBase(getNextBase(a.base)), modifier: -1};\n            } else {\n                return  {base: getNextBase(a.base), modifier: 1};\n            }\n        }\n        return {base: getNextBase(a.base), modifier:0};\n    }\n    if (a.base =='E' || a.base == 'B')  {\n        return {base: getNextBase(a.base), modifier: 0};\n    }\n    if (preferFlats) {\n        return {base: getNextBase(a.base), modifier: -1}\n    } else {\n        return {base: a.base, modifier: 1};\n    }\n}\n\nfunction getPrevSemitone(a : Note, preferFlats: boolean): Note {\n    if (a.modifier == 1) {\n        return {base: a.base, modifier:0};\n    }\n    if (a.modifier == -1) {\n        // Some notes do not have independent flats == Next Note\n        if (a.base =='F' || a.base == 'C')  {\n            if (preferFlats) {\n                return {base:getPrevBase(a.base), modifier: -1};\n            } else {\n                return  {base: getPrevBase(a.base), modifier: 0};\n            }\n        }\n        return {base: getPrevBase(a.base), modifier:0};\n    }\n    \n    if (a.base =='F' || a.base == 'C')  {\n        return {base: getPrevBase(a.base), modifier: 0};\n    }\n    if (preferFlats) {\n        return {base: a.base, modifier: -1}\n    } else {\n        return {base: getPrevBase(a.base), modifier: 1};\n    }\n}\n\nfunction getNextBase(a:BaseNote): BaseNote {\n    if (a == 'G') {\n        return 'A';\n    }\n    return String.fromCharCode(a.charCodeAt(0) + 1) as BaseNote;\n}\n\nfunction getPrevBase(a:BaseNote): BaseNote {\n    if (a == 'A') {\n        return 'G';\n    }\n    return String.fromCharCode(a.charCodeAt(0) - 1) as BaseNote;\n}\n\nexport function toStringFromNote(a: Note): string {\n    return a.base + sharpOrFlat(a);\n}\n\nexport function toStringFromChord(a:Chord): string {\n    let base = toStringFromNote(a.tonic) + toStringFromChordType(a.type);\n    for(let addOn of a.addOns) {\n        base = base + toStringFromAddOn(addOn);\n    }\n    return base;\n}\n\nexport function toStringFromChordType(a:ChordType): string {\n    switch (a) {\n        case 'MAJOR':\n            return \"\";\n        case 'MINOR':\n            return \"-\";\n        case \"DIMINISHED\":\n            return \"dim\";\n    }\n}\n\nexport function toStringFromAddOn(a: AddOn): string {\n    if (a.index == 7) {\n        const base = \"7\";\n        if (a.modifier == 0) {return \"maj\"+ base;}\n        if (a.modifier == -1) {return base;}\n        return \"8\";\n    } else {\n        const base = a.index>5? a.index.toString() : (a.index+8).toString();\n        if (base.length>1) {\n            if (a.modifier == 0) { return '(' + base + \")\";}\n            if (a.modifier == -1) {return '(' +\"b\" + base + \")\";}\n            return '(' +\"#\"+base + \")\";\n        }\n        if (a.modifier == 0) { return base;}\n        if (a.modifier == -1) {return \"b\" + base;}\n        return \"#\"+base;\n    }\n}\n\nexport function sharpOrFlat(note: Note): string {\n    if (note.modifier == 0) { return \"\";}\n    if (note.modifier == 1) {\n        return \"\\u266F\";\n    }\n    if (note.modifier == -1) {\n    return (\"\\u266D\");\n    }\n    return \"\";\n}\n\nexport function fromStringToNote(a:string): Note {\n    console.log (\"NoteParse:\"+ a + \"\\n\");\n    if (a.length > 2) {\n        throw \"Invalid Note\";\n    }\n    const base = String.fromCharCode(a.charCodeAt(0)) as BaseNote;\n    if (![\"A\", \"B\", 'C', 'D', 'E', 'F', 'G'].includes(base)) {\n        console.log(\"Wrong Base:\" + base);\n        throw \"Invalid Note\";\n    }\n    if (a.length == 1) {\n        return {\n            base: base,\n            modifier: 0,\n        }\n    }\n    const modifier = (a.charAt(1)=== '#'|| a.charAt(1)==\"\\u266F\") ? 1 : ( (a.charAt(1) === 'b' || a.charAt(1) == \"\\u266D\")? -1:0);\n    if (modifier == 0 && a.length> 1) {\n        throw \"Invalid note\";\n    }\n    return {\n        base: base,\n        modifier: modifier,\n    }\n}\n\nconst chordsTypes = {\"dim\": \"DIMINISHED\", \"\\u0394\":\"diminished\", \"min\": \"MINOR\", \"-\": \"MINOR\", \"minor\": \"MINOR\"};\nconst addOnRegex =  /^(maj7|(#|\\u266F|\\u266D|b)?\\d|\\((#|\\u266F|\\u266D|b)?\\d+\\))/gm;\nconst noteRegex = \"^(A|B|C|D|E|F)(#|\\u266F|\\u266D|b)?\"\n\nexport function fromStringToChord(a:string): Chord {\n    const note = a.match(noteRegex);\n    if (note == null || note.length == 0) {\n        console.log(a);\n        throw \"Invalid Chord\"\n    } \n    const tonic = fromStringToNote(note[0]);\n    let chord = a.slice(note[0].length);\n    console.log(\"Note Excluded:\" + chord);\n    let type = \"MAJOR\";\n    let foundkey = \"\";\n    for (var key in chordsTypes) {\n        if (chordsTypes.hasOwnProperty(key)) {\n            if (chord.startsWith(key)) {\n                console.log(\"starts with \"+key);\n                type = chordsTypes[key];\n                foundkey = key;\n            }\n    }\n    }\n    chord = chord.slice(foundkey.length);\n    let addOns = [];\n    while (chord.length > 0) {\n        let matches = chord.match(addOnRegex);\n        console.log(\"Match:\" + JSON.stringify(matches) + \"\\n\");\n        if (matches != null) {\n            const match = matches[0];\n            if (match.startsWith(\"(\")) {\n                addOns.push(fromStringToAddOn(match.slice(1,match.length-1)));\n            } else {\n                addOns.push(fromStringToAddOn(match));\n            }\n            chord = chord.slice(match.length);\n        } else {\n            throw \"Invalid Chord\";\n        }\n    }\n    return {tonic: tonic, type: type as ChordType, addOns: addOns}\n}\n\nfunction fromStringToAddOn(a:string): AddOn {\n    if (a.length <1) {\n        throw \"Invalid\";\n    }\n    if (a.startsWith(\"maj\")) {\n        return {index: 7, modifier: 0};\n    }\n    if (a.startsWith('7')) {\n        return {index: 7, modifier: -1};\n    }\n    let index = 1;\n    let modifier = 0;\n    if (a.charAt(0)=== '#'|| a.charAt(0)==\"\\u266F\" || a.charAt(0) === 'b' || a.charAt(0) == \"\\u266D\") {\n        index = parseInt(a.slice(1));\n        modifier = (a.charAt(0)=== '#'|| a.charAt(0)==\"\\u266F\") ? 1 : -1;\n    } else {\n        index = parseInt(a);\n        modifier = 0;\n    }\n    if (index == 0 ||index == 1 || index == 8 || index == null ) {\n        throw \"invalid\";\n    }\n    return {\n        index: index , \n        modifier: modifier,};\n}\n\nexport function getChordNotes(c: Chord): Array<Note> {\n\n    const majorScale = getScale(c.tonic, \"MAJOR\");\n    var scale = [];\n    switch (c.type) {\n        case \"DIMINISHED\":\n            scale = getScale(c.tonic, \"DIMINISHED\");\n            break;\n        case \"MAJOR\":\n            scale = majorScale;\n            break;\n        case \"MINOR\":\n            scale = getScale(c.tonic, \"NATURAL\");\n            break;\n    }\n    var notes = [scale[0], scale[2], scale[4]];\n    for (var addOn of c.addOns) {\n        const inNoteScale = addOn.index < majorScale.length ? addOn.index -1 : addOn.index % majorScale.length;\n        if (addOn.modifier ==0) {\n            notes.push(majorScale[inNoteScale]);\n        } else {\n            if (addOn.modifier == -1) {\n                notes.push(getPrevSemitone(majorScale[inNoteScale], true));\n            } else {\n                notes.push(getNextSemitone(majorScale[inNoteScale], false));\n            }\n        }\n    }\n    return notes;\n}","import {Note as NoteType} from './utils';\nimport React from 'react';\nimport Note from './note';\n\n\nexport default function Scale(props: {notes: Array<NoteType> }): JSX.Element {\n    const notes = props.notes;\n    if (notes == null) {\n        return null;\n    }\n    return(\n        <div className=\"card\">\n            <div className=\"card-body\">\n             <div className=\"d-inline-flex pl-2 pr-2 bd-highlight \">\n            {\n                notes.map(\n                    (note, index) =>\n                    {\n                    return <Note key={index} note={note} setNote={null} />;\n                        }\n                    )\n            } \n            </div>\n            </div>\n        </div>\n        );;\n}","import {Chord as ChordType, fromStringToChord, toStringFromChord} from './utils';\nimport React from 'react';\nimport {useState} from 'react';\n\nfunction Chord(props: {chord: ChordType, setChord: (((ChordType) => void) | null)}): JSX.Element {\n    if (props.setChord == null) {\n    return (\n        <h2 className=\"d-flex bd-highlight px-2\"> \n            {toStringFromChord(props.chord)}\n        </h2>\n        );\n    } else {\n        const [isValid, setIsValid] = useState<boolean>(true);\n        const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n            try {\n                props.setChord(fromStringToChord(event.target.value));\n                setIsValid(true);\n            } catch (errror) {\n                setIsValid(false);\n            } \n        };\n        return (\n            <form>\n            <input \n                type=\"text\" \n                className={isValid? \"form-control is-valid\" :\"form-control is-invalid\"}\n                placeholder={toStringFromChord(props.chord)} \n                aria-label=\"Note\" \n                aria-describedby=\"basic-addon1\" \n                onChange={changeValue}\n            /></form>);\n    }\n}\n\nexport default Chord","import React from \"react\"\nimport { Note as NoteType, Chord as ChordType, getChordNotes } from \"../components/utils\"\nimport { useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport Scale from \"../components/scale\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Chord from \"../components/chord\"\nimport { getConstantValue } from \"typescript\"\n\nexport default function ChordPage(): JSX.Element {\n  const [topChord, setTopChord] = useState<ChordType>({tonic: { base: \"C\", modifier: 0 }, type: \"MAJOR\", addOns: []});\n\n  return (<Layout>\n    <SEO title=\"Chords\" />\n      <div >\n        <h1>Main Chord</h1>\n        <p><Chord chord={topChord} setChord={setTopChord} /></p>\n      </div>\n    <div>\n      <h2>Available Notes:</h2>\n      <p><Scale notes={getChordNotes(topChord)} /></p>\n    </div>\n  </Layout>\n  );\n}\n\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}