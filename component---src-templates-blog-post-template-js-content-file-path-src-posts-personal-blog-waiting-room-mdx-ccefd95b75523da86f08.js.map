{"version":3,"file":"component---src-templates-blog-post-template-js-content-file-path-src-posts-personal-blog-waiting-room-mdx-ccefd95b75523da86f08.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/posts/personal/blog_waiting_room.mdx","webpack://maria-dot-engineer/./src/templates/blogPostTemplate.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport AuthorCard from \"../../components/authorCard\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"There’s this coaching tool that I’ve been using with myself and with a few clients that I wanted to share. I’ve been calling it the waiting room. I have found it to be quite useful personally, so I was hoping others may find some use with this tool either in their personal lives or working with their clients.\"), \"\\n\", React.createElement(_components.h2, null, \"The tool\"), \"\\n\", React.createElement(_components.p, null, \"Visualise a waiting room. Personally when I visualise, I see action and movement, like the movement of actors on a stage. Everybody visualises things differently, so it is worth taking this into account. So for example, my waiting room is the scene in Community where Abed and Troy are put in a waiting experiment to be watched in the waiting room.\"), \"\\n\", React.createElement(\"iframe\", {\n    src: \"https://giphy.com/embed/l2QZPHSiJ4do7gg2k\",\n    width: \"480\",\n    height: \"274\",\n    frameBorder: \"0\",\n    class: \"giphy-embed\",\n    allowFullScreen: true\n  }), \"\\n\", React.createElement(_components.p, null, \"For others visualising it as a list, a queue, a box full of representative objects may be more appropriate. There is no correct answer just whatever works for you. There is one requirement, cordon off an area of your page or your mind and label it a waiting room.\"), \"\\n\", React.createElement(_components.h2, null, \"When to use the Waiting Room\"), \"\\n\", React.createElement(_components.p, null, \"Sometimes we, or our clients end up feeling overwhelmed by the sheer number of things life has thrown at us. It can feel like we're constantly juggling balls, and if you've seen any juggler they rarely hold one ball in their hand for a very long time. It is one of the best times to take a step back and reprioritise, otherwise, to continue the juggling analogy, we'll end up dropping the ball.\"), \"\\n\", React.createElement(_components.p, null, \"So, why not just reprioritise a to-do list and call it done? Well you can if that works for you. For me, it doesn't. I don't know about you, but the tasks that I obsess over the most are the ones that I don't have much control over. The ones rife with uncertainty. The ones whose outcome can greatly impact a great many things. Sometimes it's useful to prepare, but there is a limit, and sometimes we exceed it.\"), \"\\n\", React.createElement(_components.h2, null, \"What goes in the waiting room\"), \"\\n\", React.createElement(_components.p, null, \"Here are the tasks that are in the waiting room. Waiting there, not leaving, and we can check on them occasionally.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"This task is waiting on something outside your control; examples: a deliberation by a third party, the results of some test...\"), \"\\n\", React.createElement(_components.li, null, \"A problem that will likely resolve itself if you just wait or someone else is already resolving\"), \"\\n\", React.createElement(_components.li, null, \"Any task that depends on another task being completed to even be started\"), \"\\n\", React.createElement(_components.li, null, \"And the one that gets me all the time, the task that I could do right now, but if I did, I may drop something else that's more important; or it is better if I do the task in the future.\"), \"\\n\", React.createElement(_components.li, null, \"Tasks that you are not ready to commit to.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The biggest hint that a task may belong in the waiting room is that it drains you mentally or emotionally when you think of it repeatedly. Yet there is no clear step you can take.\"), \"\\n\", React.createElement(_components.h3, null, \"Examples of what is in my waiting room\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"A course and certification I want to take (I am visualising the teachers of the course in that waiting room);\"), \"\\n\", React.createElement(_components.li, null, \"One of the stories that I want to write but hasn't yet materialised in my head yet (I am visualising a fly on the wall -- it makes sense in context, but that would be a spoiler)\"), \"\\n\", React.createElement(_components.li, null, \"A response from a recruiter (there's a pillow wearing a T-shirt with the company logo)\"), \"\\n\", React.createElement(_components.li, null, \"Which visa to aim for once my current one expires (there's a lawyer like looking person with a stack of papers with all my options)\"), \"\\n\", React.createElement(_components.li, null, \"My dating life (a tumbleweed)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Now, when I find myself obsessing over a task on the waiting list, I remind myself \", React.createElement(_components.strong, null, \"gently\"), \" that it's in the waiting room. I bring back the image of the waiting room in my mind and let the task settle. I will think if anything has changed since I decided to put it in the waiting room, just in case it was getting out for a reason. But that's rarely the case for me. Otherwise, fortnightly check-ins are sufficient.\"), \"\\n\", React.createElement(_components.h2, null, \"Why it works\"), \"\\n\", React.createElement(_components.p, null, \"With these tasks living in the waiting room, for me, it resolves the anxiety that I may drop the ball on them. It reminds me that they will be there for me to check on whenever, while also reminding me that some things are not within my control. By putting them all in the waiting room, I can focus on the tasks that I can do right now, the outcomes that I can control, the actions that I need to take now, rather than next year. By being aware of the waiting room as well, we create a reassurance that the tasks will be looked at when the time is right. After all it's a waiting room, some of those tasks may have appointments.\"), \"\\n\", React.createElement(_components.p, null, \"It can also come with a shift of perspective. While ruminating and anxiously checking on some of these tasks, it feels like we are stuck waiting on them at times. I know it does for me. If they're in the waiting room, they're the ones waiting for me.\"), \"\\n\", React.createElement(_components.h2, null, \"Questions that may come up\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Is there part of this task that should go into the waiting room?\"), \"\\n\", React.createElement(_components.li, null, \"Is there something that you could do now to be able to send this task to the waiting room?\"), \"\\n\", React.createElement(_components.li, null, \"Are there any other tasks there in the waiting room?\"), \"\\n\", React.createElement(_components.li, null, \"What does knowing the task is waiting patiently in the waiting room enable for you?\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Your thoughts\"), \"\\n\", React.createElement(_components.p, null, \"If you're feeling overwhelmed, then try this. Close your eyes, and think of all the tasks that you are currently facing. Can you put some of them in the waiting room? How are they sitting? How often do you want to check on them? Any of them have an appointment? Does it help to write them down?\"), \"\\n\", React.createElement(_components.p, null, \"I would love to hear if you've used this tool and if it's helped you. Did you make any changes to make it work for you? Feel free to email me at hi@maria.engineer with any thoughts you have.\"), \"\\n\", React.createElement(AuthorCard));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/mariamateescu/maria-engineer.github.io/src/posts/personal/blog_waiting_room.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport styled from \"@emotion/styled\";\nconst Title = (styled.h1)`\n  font-size: 3rem;\n  @media (max-width: 420px) {\n    min-font-size: 24px;\n  }\n  font-family: \"Poppins\", \"Arial Narrow\", sans-serif;\n  text-rendering: optimizelegibility;\n  font-weight: 400;\n  text-align: left;\n  color: #38f;\n`;\nconst Navigation = (styled.div)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 1rem;\n  padding-left: 2rem;\n  padding-right: 2rem;\n`;\nconst Post = (styled.div)`\n  padding: 10px 60px 10px 60px;\n  @media (max-width: 420px) {\n    padding: 10px 10px 10px 10px;\n  }\n  font-family: \"Poppins\", \"Arial Narrow\", sans-serif;\n  text-rendering: optimizelegibility;\n  font-weight: 200;\n  font-style: normal;\n`;\nconst Bar = (styled.div)`\n  margin: 5px auto 20px auto;\n  height: 10px;\n  background: #38f;\n  border-right: 18px solid #8bf;\n  border-left: 18px solid #8bf;\n  border-radius: 9px;\n  padding: 0 5px;\n  width: 60%;\n`;\nfunction Template({data, children}) {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  if (frontmatter.category === \"food\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Food\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title,\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)));\n  }\n  if (frontmatter.category === \"theatre\") {\n    return React.createElement(Layout, {\n      currentPage: \"Interests\",\n      currentSubPage: \"Theatre Reviews\"\n    }, React.createElement(SEO, {\n      title: frontmatter.title + \" - Review\",\n      keywords: frontmatter.keywords,\n      description: frontmatter.description\n    }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(\"div\", {\n      className: \"footer go-center\"\n    }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(Bar)));\n  }\n  return React.createElement(Layout, {\n    currentPage: \"Maria Mateescu\",\n    currentSubPage: frontmatter.category === \"personal\" ? \"Personal Log\" : \"Engineering Log\"\n  }, React.createElement(SEO, {\n    title: frontmatter.title,\n    keywords: frontmatter.keywords,\n    description: frontmatter.description\n  }), React.createElement(Post, null, React.createElement(Title, null, frontmatter.title), React.createElement(MDXProvider, null, children)), React.createElement(Navigation, null, frontmatter.prev ? React.createElement(\"a\", {\n    \"aria-label\": \"Previous post\",\n    key: \"back\",\n    disabled: !frontmatter.prev,\n    href: frontmatter.prev\n  }, \"< Prev\") : React.createElement(\"div\"), frontmatter.next ? React.createElement(\"a\", {\n    \"aria-label\": \"Next post.\",\n    key: \"next\",\n    href: frontmatter.next\n  }, \"Next >\") : React.createElement(\"div\")), React.createElement(\"div\", {\n    className: \"footer go-center\"\n  }, React.createElement(\"div\", null, \"---\", frontmatter.date, \"---\"), React.createElement(Bar)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        short\n        category\n        description\n        keywords\n        prev\n        next\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","ul","li","h3","strong","_provideComponents","components","React","src","width","height","frameBorder","class","allowFullScreen","AuthorCard","wrapper","MDXLayout","Title","_styled","target","name","styles","Navigation","Post","Bar","Template","_ref","data","children","mdx","frontmatter","category","Layout","currentPage","currentSubPage","SEO","title","keywords","description","MDXProvider","className","date","prev","key","disabled","href","next","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}