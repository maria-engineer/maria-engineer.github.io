{"version":3,"file":"component---src-pages-scales-tsx-78457973c03ed8f6b1ba.js","mappings":"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","sources":["webpack://maria-dot-engineer/./src/components/note.tsx","webpack://maria-dot-engineer/./src/components/scale.tsx","webpack://maria-dot-engineer/./src/components/utils.tsx","webpack://maria-dot-engineer/./src/pages/scales.tsx"],"sourcesContent":["import { Note as NoteType, toStringFromNote, fromStringToNote } from \"./utils\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nfunction Note(props: {\n  note: NoteType;\n  setNote: ((NoteType) => void) | null;\n}): JSX.Element {\n  if (props.setNote == null) {\n    return <>{toStringFromNote(props.note)}</>;\n  } else {\n    const [isValid, setIsValid] = useState<boolean>(true);\n    const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n      try {\n        props.setNote(fromStringToNote(event.target.value));\n        setIsValid(true);\n      } catch (errror) {\n        setIsValid(false);\n      }\n    };\n    return (\n      <input\n        type=\"text\"\n        className={\n          isValid\n            ? \"lcars-form-control lcars-is-valid\"\n            : \"lcars-form-control lcars-is-invalid\"\n        }\n        placeholder={toStringFromNote(props.note)}\n        aria-label=\"Note\"\n        aria-describedby=\"basic-addon1\"\n        onChange={changeValue}\n      />\n    );\n  }\n}\n\nexport default Note;\n","import { Note as NoteType } from \"./utils\";\nimport React from \"react\";\nimport Note from \"./note\";\n\nexport default function Scale(props: { notes: Array<NoteType> }): JSX.Element {\n  const notes = props.notes;\n  if (notes == null) {\n    return <div />;\n  }\n  return (\n    <div className=\"d-inline-flex flex-wrap pl-2 pr-2 bd-highlight \">\n      {notes.map((note, index) => {\n        return (\n          <h2 className=\"d-flex bd-highlight px-2\">\n            <Note key={index} note={note} setNote={null} />\n          </h2>\n        );\n      })}\n    </div>\n  );\n}\n","import { number } from \"prop-types\";\nimport React from \"react\";\n\nexport type BaseNote = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\";\n\nexport type ScaleType =\n  | \"NATURAL\"\n  | \"HARMONIC\"\n  | \"MAJOR\"\n  | \"CHROMATIC\"\n  | \"DIMINISHED\"\n  | \"ALTERED\";\n\nexport type Note = {\n  base: BaseNote;\n  modifier: number;\n};\n\nexport type ChordType = \"MINOR\" | \"MAJOR\" | \"DIMINISHED\";\n\nexport type AddOn = {\n  index: number;\n  modifier: number;\n};\n\nexport type Chord = {\n  tonic: Note;\n  type: ChordType;\n  addOns: Array<AddOn>;\n};\n\nexport type ChordSequence = {\n  bars: Array<Bar>;\n};\n\nexport type Bar = {\n  chords: Array<Chord | undefined>;\n};\n\nconst majorScale = [2, 2, 1, 2, 2, 2, 1];\nconst harmonicScale = [2, 1, 2, 2, 1, 3, 1];\nconst naturalScale = [2, 1, 2, 2, 1, 2, 2];\nconst chromaticScale = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\nconst diminishedScale = [2, 1, 2, 1, 2, 1, 2, 1];\nconst alteredScale = [1, 2, 1, 2, 2, 2, 2];\n\nexport function getScale(root: Note, type: ScaleType): Array<Note> {\n  const scale = [root];\n  let order = [0];\n  let preferFlats = false;\n  switch (type) {\n    case \"CHROMATIC\":\n      order = chromaticScale;\n      break;\n    case \"NATURAL\":\n      const major = getRelativeMajor(root);\n      preferFlats =\n        major.modifier == -1 || (major.base == \"F\" && major.modifier == 0);\n      order = naturalScale;\n      break;\n    case \"HARMONIC\":\n      const majorH = getRelativeMajor(root);\n      preferFlats =\n        majorH.modifier == -1 || (majorH.base == \"F\" && majorH.modifier == 0);\n      order = harmonicScale;\n      break;\n    case \"MAJOR\":\n      order = majorScale;\n      preferFlats =\n        root.modifier == -1 || (root.base == \"F\" && root.modifier == 0);\n      break;\n    case \"DIMINISHED\":\n      order = diminishedScale;\n      break;\n    case \"ALTERED\":\n      order = alteredScale;\n  }\n  let next = root;\n  for (let times of order) {\n    for (let i = 0; i < times; i++) {\n      next = getNextSemitone(next, preferFlats);\n    }\n    scale.push(next);\n  }\n  return scale;\n}\n\nexport function getRelativeMajor(a: Note): Note {\n  let root = a;\n  for (let i = 0; i < 3; i++) {\n    root = getNextSemitone(root, true);\n  }\n  return root;\n}\n\nexport function getRelativeMinor(a: Note): Note {\n  let root = a;\n  for (let i = 0; i < 3; i++) {\n    root = getPrevSemitone(root, true);\n  }\n  return root;\n}\n\nexport function getNextSemitone(a: Note, preferFlats: boolean): Note {\n  if (a.modifier == -1) {\n    return { base: a.base, modifier: 0 };\n  }\n  if (a.modifier == 1) {\n    // Some notes do not have independent sharps == Next Note\n    if (a.base == \"E\" || a.base == \"B\") {\n      if (preferFlats) {\n        return { base: getNextBase(getNextBase(a.base)), modifier: -1 };\n      } else {\n        return { base: getNextBase(a.base), modifier: 1 };\n      }\n    }\n    return { base: getNextBase(a.base), modifier: 0 };\n  }\n  if (a.base == \"E\" || a.base == \"B\") {\n    return { base: getNextBase(a.base), modifier: 0 };\n  }\n  if (preferFlats) {\n    return { base: getNextBase(a.base), modifier: -1 };\n  } else {\n    return { base: a.base, modifier: 1 };\n  }\n}\n\nexport function getPrevSemitone(a: Note, preferFlats: boolean): Note {\n  if (a.modifier == 1) {\n    return { base: a.base, modifier: 0 };\n  }\n  if (a.modifier == -1) {\n    // Some notes do not have independent flats == Next Note\n    if (a.base == \"F\" || a.base == \"C\") {\n      if (preferFlats) {\n        return { base: getPrevBase(a.base), modifier: -1 };\n      } else {\n        return { base: getPrevBase(a.base), modifier: 0 };\n      }\n    }\n    return { base: getPrevBase(a.base), modifier: 0 };\n  }\n\n  if (a.base == \"F\" || a.base == \"C\") {\n    return { base: getPrevBase(a.base), modifier: 0 };\n  }\n  if (preferFlats) {\n    return { base: a.base, modifier: -1 };\n  } else {\n    return { base: getPrevBase(a.base), modifier: 1 };\n  }\n}\n\nfunction getNextBase(a: BaseNote): BaseNote {\n  if (a == \"G\") {\n    return \"A\";\n  }\n  return String.fromCharCode(a.charCodeAt(0) + 1) as BaseNote;\n}\n\nfunction getPrevBase(a: BaseNote): BaseNote {\n  if (a == \"A\") {\n    return \"G\";\n  }\n  return String.fromCharCode(a.charCodeAt(0) - 1) as BaseNote;\n}\n\nexport function toStringFromNote(a: Note): string {\n  return a.base + sharpOrFlat(a);\n}\n\nexport function toStringFromChord(a: Chord): string {\n  let base = toStringFromNote(a.tonic) + toStringFromChordType(a.type);\n  for (let addOn of a.addOns) {\n    base = base + toStringFromAddOn(addOn);\n  }\n  return base;\n}\n\nexport function toStringFromChordType(a: ChordType): string {\n  switch (a) {\n    case \"MAJOR\":\n      return \"\";\n    case \"MINOR\":\n      return \"-\";\n    case \"DIMINISHED\":\n      return \"dim\";\n  }\n}\n\nexport function toStringFromAddOn(a: AddOn): string {\n  if (a.index == 7) {\n    const base = \"7\";\n    if (a.modifier == 0) {\n      return \"maj\" + base;\n    }\n    if (a.modifier == -1) {\n      return base;\n    }\n    return \"8\";\n  } else {\n    const base = a.index > 5 ? a.index.toString() : (a.index + 8).toString();\n    if (base.length > 1) {\n      if (a.modifier == 0) {\n        return \"(\" + base + \")\";\n      }\n      if (a.modifier == -1) {\n        return \"(\" + \"b\" + base + \")\";\n      }\n      return \"(\" + \"#\" + base + \")\";\n    }\n    if (a.modifier == 0) {\n      return base;\n    }\n    if (a.modifier == -1) {\n      return \"b\" + base;\n    }\n    return \"#\" + base;\n  }\n}\n\nexport function sharpOrFlat(note: Note): string {\n  if (note.modifier == 0) {\n    return \"\";\n  }\n  if (note.modifier == 1) {\n    return \"\\u266F\";\n  }\n  if (note.modifier == -1) {\n    return \"\\u266D\";\n  }\n  return \"\";\n}\n\nexport function fromStringToNote(a: string): Note {\n  console.log(\"NoteParse:\" + a + \"\\n\");\n  if (a.length > 2) {\n    throw \"Invalid Note\";\n  }\n  const base = String.fromCharCode(a.charCodeAt(0)) as BaseNote;\n  if (![\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"].includes(base)) {\n    console.log(\"Wrong Base:\" + base);\n    throw \"Invalid Note\";\n  }\n  if (a.length == 1) {\n    return {\n      base: base,\n      modifier: 0,\n    };\n  }\n  const modifier =\n    a.charAt(1) === \"#\" || a.charAt(1) == \"\\u266F\"\n      ? 1\n      : a.charAt(1) === \"b\" || a.charAt(1) == \"\\u266D\"\n      ? -1\n      : 0;\n  if (modifier == 0 && a.length > 1) {\n    throw \"Invalid note\";\n  }\n  return {\n    base: base,\n    modifier: modifier,\n  };\n}\n\nconst chordsTypes = {\n  dim: \"DIMINISHED\",\n  h: \"DIMINISHED\",\n  \"\\u0394\": \"DIMINISHED\",\n  min: \"MINOR\",\n  \"-\": \"MINOR\",\n  minor: \"MINOR\",\n  M: \"MAJOR\",\n};\nconst addOnRegex = /^(sus|maj7|\\^7|add\\d+|(#|\\u266F|\\u266D|b)?\\d|\\((#|\\u266F|\\u266D|b)?\\d+\\))/gm;\nconst noteRegex = \"^(A|B|C|D|E|F|G)(#|\\u266F|\\u266D|b)?\";\n\nexport function fromStringToChord(a: string): Chord {\n  const note = a.match(noteRegex);\n  if (note == null || note.length == 0) {\n    console.log(a);\n    throw \"Invalid Chord\";\n  }\n  const tonic = fromStringToNote(note[0]);\n  let chord = a.slice(note[0].length);\n  console.log(\"Note Excluded:\" + chord);\n  let type = \"MAJOR\";\n  let foundkey = \"\";\n  for (var key in chordsTypes) {\n    if (chordsTypes.hasOwnProperty(key)) {\n      if (chord.startsWith(key)) {\n        console.log(\"starts with \" + key);\n        type = chordsTypes[key] as ChordType;\n        foundkey = key;\n      }\n    }\n  }\n  chord = chord.slice(foundkey.length);\n  let addOns = [];\n  while (chord.length > 0) {\n    let matches = chord.match(addOnRegex);\n    console.log(\"Match:\" + JSON.stringify(matches) + \"\\n\");\n    if (matches != null) {\n      const match = matches[0];\n      if (match.startsWith(\"(\")) {\n        addOns.push(fromStringToAddOn(match.slice(1, match.length - 1)));\n      } else {\n        addOns.push(fromStringToAddOn(match));\n      }\n      chord = chord.slice(match.length);\n    } else {\n      throw \"Invalid Chord\";\n    }\n  }\n  return { tonic: tonic, type: type as ChordType, addOns: addOns };\n}\n\nfunction fromStringToAddOn(a: string): AddOn {\n  if (a.length < 1) {\n    throw \"Invalid\";\n  }\n  if (a.startsWith(\"maj\")) {\n    return { index: 7, modifier: 0 };\n  }\n  if (a.startsWith(\"sus\")) {\n    return { index: 4, modifier: 0 };\n  }\n  if (a.startsWith(\"7\")) {\n    return { index: 7, modifier: -1 };\n  }\n  if (a.startsWith(\"^\")) {\n    return { index: 7, modifier: 0 };\n  }\n  let index = 1;\n  let modifier = 0;\n  if (\n    a.charAt(0) === \"#\" ||\n    a.charAt(0) == \"\\u266F\" ||\n    a.charAt(0) === \"b\" ||\n    a.charAt(0) == \"\\u266D\"\n  ) {\n    index = parseInt(a.slice(1));\n    modifier = a.charAt(0) === \"#\" || a.charAt(0) == \"\\u266F\" ? 1 : -1;\n  }\n  if (a.startsWith(\"add\")) {\n    index = parseInt(a.slice(3));\n    modifier = 0;\n  } else {\n    index = parseInt(a);\n    modifier = 0;\n  }\n  if (index == 0 || index == 1 || index == 8 || index == null) {\n    throw \"invalid\";\n  }\n  return {\n    index: index,\n    modifier: modifier,\n  };\n}\n\nexport function getChordNotes(c: Chord): Array<Note> {\n  const majorScale = getScale(c.tonic, \"MAJOR\");\n  var scale = [];\n  switch (c.type) {\n    case \"DIMINISHED\":\n      scale = getScale(c.tonic, \"DIMINISHED\");\n      break;\n    case \"MAJOR\":\n      scale = majorScale;\n      break;\n    case \"MINOR\":\n      scale = getScale(c.tonic, \"NATURAL\");\n      break;\n  }\n  var notes = [scale[0], scale[2], scale[4]];\n  for (var addOn of c.addOns) {\n    const inNoteScale =\n      addOn.index < majorScale.length\n        ? addOn.index - 1\n        : addOn.index % majorScale.length;\n    if (addOn.modifier == 0) {\n      notes.push(majorScale[inNoteScale]);\n    } else {\n      if (addOn.modifier == -1) {\n        notes.push(getPrevSemitone(majorScale[inNoteScale], true));\n      } else {\n        notes.push(getNextSemitone(majorScale[inNoteScale], false));\n      }\n    }\n  }\n  return notes;\n}\n","import React from \"react\"\nimport {\n  Note as NoteType,\n  getScale,\n  getRelativeMajor,\n  getRelativeMinor,\n} from \"../components/utils\"\nimport { useState } from \"react\"\nimport Scale from \"../components/scale\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Note from \"../components/note\"\nimport { Control } from \"../components/commonStyles\"\n\nexport default function ScalesPage(): JSX.Element {\n  const [topNote, setTopNote] = useState<NoteType>({ base: \"C\", modifier: 0 })\n  const relativeMinor = getRelativeMinor(topNote)\n  const relativeMajor = getRelativeMajor(topNote)\n  return (\n    <Layout currentPage=\"Music\" currentSubPage=\"Scales\">\n      <SEO title=\"Scales\" description={\"Generate the scales for a note, and the relative scales\"} keywords={[\"music\", \"theory\", \"scales\", \"generate\", \"relative\", \"minor\", \"major\",\"notes\", \"dominant\"]}/>\n      <div className=\"d-flex flex-wrap\">\n        <div className=\"pr-2\">\n          <h2>Main Note</h2>\n          <p>\n            <Note note={topNote} setNote={setTopNote} />\n          </p>\n        </div>\n        <div className=\"align-self-end\">\n          <p>\n            <div className=\"buttons\">\n              <Control\n                className=\"orange\"\n                onClick={() => setTopNote(relativeMinor)}\n              >\n                <div className=\"d-flex flex-column mb-2\" >\n                <div>Relative Minor:</div>\n                <Note note={relativeMinor} setNote={null} />\n                </div>\n              </Control>\n            </div>\n          </p>\n        </div>\n        <div className=\"align-self-end\">\n          <p>\n            <div className=\"buttons\">\n              <Control\n                className=\"orange\"\n                onClick={() => setTopNote(relativeMajor)}\n              > <div className=\"d-flex flex-column mb-2\"><div>Relative Major: </div>\n                <Note note={relativeMajor} setNote={null} />\n                </div>\n              </Control>\n            </div>\n          </p>\n        </div>\n      </div>\n      <div>\n        <h2>Major Scale</h2>\n        <p>\n        <div className=\"lcars-card\">\n        <div className=\"card-body\">\n          <Scale notes={getScale(topNote, \"MAJOR\")} />\n          </div></div>\n        </p>\n      </div>\n      <div>\n        <h2>Natural Minor Scale</h2>\n        <p>\n        <div className=\"lcars-card\">\n        <div className=\"card-body\">\n          <Scale notes={getScale(topNote, \"NATURAL\")} /></div></div>\n        </p>\n      </div>\n\n      <div>\n        <h2> Harmonic Minor Scale </h2>\n        <p>\n        <div className=\"lcars-card\">\n        <div className=\"card-body\">\n          <Scale notes={getScale(topNote, \"HARMONIC\")} /></div></div>\n        </p>\n      </div>\n      <div>\n        <h2> Chromatic Scale </h2>\n        <p>\n        <div className=\"lcars-card\">\n        <div className=\"card-body\">\n          <Scale notes={getScale(topNote, \"CHROMATIC\")} /></div></div>\n        </p>\n      </div>\n      <div>\n        <h2> Diminished Scale </h2>\n        <p>\n        <div className=\"lcars-card\">\n        <div className=\"card-body\">\n          <Scale notes={getScale(topNote, \"DIMINISHED\")} /></div></div>\n        </p>\n      </div>\n      <div>\n        <h2> Altered Scale </h2>\n        <p>\n        <div className=\"lcars-card\">\n        <div className=\"card-body\">\n          <Scale notes={getScale(topNote, \"ALTERED\")} /></div></div>\n        </p>\n      </div>\n    </Layout>\n  )\n}\n"],"names":["props","setNote","___EmotionJSX","React","toStringFromNote","note","isValid","setIsValid","useState","changeValue","event","fromStringToNote","target","value","errror","type","className","placeholder","onChange","Scale","notes","map","index","Note","key","majorScale","harmonicScale","naturalScale","chromaticScale","diminishedScale","alteredScale","getScale","root","scale","order","preferFlats","major","getRelativeMajor","modifier","base","majorH","next","times","i","getNextSemitone","push","a","getRelativeMinor","getPrevSemitone","getNextBase","getPrevBase","String","fromCharCode","charCodeAt","sharpOrFlat","toStringFromChord","tonic","toStringFromChordType","addOn","addOns","toStringFromAddOn","toString","length","console","log","includes","charAt","chordsTypes","dim","h","min","minor","M","addOnRegex","noteRegex","fromStringToChord","match","chord","slice","foundkey","hasOwnProperty","startsWith","matches","JSON","stringify","fromStringToAddOn","parseInt","getChordNotes","c","inNoteScale","ScalesPage","topNote","setTopNote","relativeMinor","relativeMajor","Layout","currentPage","currentSubPage","SEO","title","description","keywords","Control","onClick"],"sourceRoot":""}